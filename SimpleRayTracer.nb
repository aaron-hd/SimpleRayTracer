(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    394527,       8467]
NotebookOptionsPosition[    384949,       8315]
NotebookOutlinePosition[    385315,       8331]
CellTagsIndexPosition[    385272,       8328]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.760419560735785*^9, 
  3.760419562174135*^9}},ExpressionUUID->"77075486-5282-43d8-8f4c-\
2640cde0b011"],

Cell[CellGroupData[{

Cell["begin SimpleRayTracer package ...", "Title",
 CellChangeTimes->{{3.7600677789668407`*^9, 3.7600678129491653`*^9}, {
  3.760068613638627*^9, 3.760068614341791*^9}, {3.760068660155191*^9, 
  3.7600686635605927`*^9}},ExpressionUUID->"e1de7b50-f3e1-4431-bdde-\
ec835925983a"],

Cell["Load dependencies and initial declarations.", "Text",
 CellChangeTimes->{{3.7600678240643463`*^9, 
  3.7600678502788153`*^9}},ExpressionUUID->"1825afe7-ff8a-4c59-8c56-\
35df6d3a33c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimpleRayTracer`$Version", " ", "=", " ", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SimpleRayTracer`$Published", " ", "=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.64473215920724*^9, 3.644732163269418*^9}, {
  3.645413837053811*^9, 3.645413867369465*^9}, {3.645849915582468*^9, 
  3.64584994130966*^9}, {3.64887910312961*^9, 3.6488791135974073`*^9}, {
  3.6500047034927063`*^9, 3.650004706980648*^9}, {3.656236771670972*^9, 
  3.656236791347458*^9}, {3.76006787377022*^9, 
  3.760067896756692*^9}},ExpressionUUID->"2dc640ed-d7ae-41f6-abed-\
eef75faaee9f"],

Cell["Print message to the user that the package is loaded.", "Text",
 CellChangeTimes->{{3.760068063861763*^9, 
  3.760068076926009*^9}},ExpressionUUID->"163775db-cc2d-4157-b960-\
0ed7348f1b00"],

Cell[BoxData[
 RowBox[{"Print", "@", 
  "\"\<=======================================================================\
=\nSimpleRayTracer package is being loaded. =============================\n\
=======================================================================\>\""}]\
], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645425357299204*^9, 
   3.6454253612347317`*^9}, {3.64542541546229*^9, 3.6454254374921207`*^9}, {
   3.645961862851595*^9, 3.645961877246524*^9}, 3.648559760850485*^9, {
   3.6488792823547688`*^9, 3.648879285794656*^9}, {3.760067927296546*^9, 
   3.760067965037586*^9}, {3.7600680835134573`*^9, 3.760068100713019*^9}, 
   3.76007668782581*^9, {3.779439846846109*^9, 
   3.77943984720564*^9}},ExpressionUUID->"53eaacf0-ecae-4728-aa5d-\
acc9a7616236"],

Cell["\<\
Begin the package.
TODO: Here one could also load xAct or xCoba to embedd a derivation of the \
Christoffel symbols and more. For now we keep the package minimalistic.\
\>", "Text",
 CellChangeTimes->{{3.760068121982819*^9, 
  3.760068221532839*^9}},ExpressionUUID->"cfdf6fc0-078b-4281-b7bb-\
a791b15af319"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<SimpleRayTracer`\>\"", "]"}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645849939934794*^9, 
   3.645849956563386*^9}, {3.6458505209835033`*^9, 3.645850528333416*^9}, {
   3.645850716319449*^9, 3.645850723309123*^9}, {3.645850959674803*^9, 
   3.645850964331173*^9}, {3.645937189155244*^9, 3.645937190717827*^9}, 
   3.648879113611742*^9, {3.6488792668127823`*^9, 3.6488793132500143`*^9}, 
   3.656236727671817*^9, {3.656323561967832*^9, 3.656323563539332*^9}, {
   3.7600767345361147`*^9, 
   3.760076752536377*^9}},ExpressionUUID->"abdab360-a506-46a2-a8f6-\
63fb657a1a96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<SimpleRayTracer`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@@", 
   RowBox[{"Names", "[", "\"\<SimpleRayTracer`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<SimpleRayTracer`Private`*\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@@", 
   RowBox[{"Names", "[", "\"\<SimpleRayTracer`Private`*\>\"", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.650006130720793*^9, 3.650006137295719*^9}, {
  3.656236724960229*^9, 3.6562367268796587`*^9}, {3.760076872244982*^9, 
  3.760076875455655*^9}},ExpressionUUID->"b161de56-d291-4fe3-a82b-\
5815176073d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Public part of the SimpleRayTracer package", "Title",
 CellChangeTimes->{{3.76006862165816*^9, 
  3.760068641661705*^9}},ExpressionUUID->"c6a22289-b7c9-4689-995e-\
ede231415f97"],

Cell[CellGroupData[{

Cell["preset symbols of the package", "Section",
 CellChangeTimes->{{3.7600802738889*^9, 
  3.760080281537697*^9}},ExpressionUUID->"c1e3d575-c49f-4869-be69-\
c4693156b5b3"],

Cell[BoxData[{
 RowBox[{"$metric", ";", " ", "$christoffel", ";"}], "\n", 
 RowBox[{"$t", ";", " ", "$r", ";", " ", "$\[Theta]", ";", " ", "$\[Phi]", 
  ";", " ", "$v", ";", " ", "$\[Chi]", ";"}], "\n", 
 RowBox[{"$mass", ";", " ", "$spin", ";", " ", "$G0", ";"}], "\n", 
 RowBox[{
  RowBox[{"x", ";", " ", "k", ";", " ", "\[Lambda]", ";"}], " "}]}], "Code",
 CellChangeTimes->{{3.760080286924884*^9, 3.7600803011972847`*^9}, {
   3.760419243508525*^9, 3.7604192482700567`*^9}, {3.779279888981204*^9, 
   3.779279926139769*^9}, {3.779280599607965*^9, 3.779280654692923*^9}, {
   3.77928077264662*^9, 3.7792808466773577`*^9}, 3.77928099131923*^9, {
   3.7792810317022448`*^9, 3.779281211267555*^9}, {3.779282110849389*^9, 
   3.779282113719719*^9}, {3.779282329442155*^9, 3.7792823298839197`*^9}, {
   3.811240490357786*^9, 3.81124049930198*^9}, {3.811244516889174*^9, 
   3.81124452398501*^9}, {3.811245973335513*^9, 3.8112459768138733`*^9}, {
   3.8112462715053673`*^9, 
   3.811246274409223*^9}},ExpressionUUID->"64ab91e6-42ae-4efd-8ad8-\
76724d66eb33"]
}, Closed]],

Cell[CellGroupData[{

Cell["functions to be seen as public", "Section",
 CellChangeTimes->{{3.7600779370359583`*^9, 3.760077945813456*^9}, {
  3.779370645724156*^9, 
  3.779370661155665*^9}},ExpressionUUID->"a0814f68-03ca-4cd8-965a-\
42482b371eb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetIntensityData", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetIntensityData[{rCam_?RationalQ,\[Theta]Cam_?RationalQ,\[Phi]Cam_?\
RationalQ}, paramRules_List, screenPoints_List, opts:OptionsPattern[]]\>\""}],
   ";"}]], "Code",
 CellChangeTimes->{{3.804581370266241*^9, 
  3.8045813978127537`*^9}},ExpressionUUID->"c99dbcf8-5fa7-46c7-8ab2-\
586465e9234b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetRadiativeTransferEquationForDiskModel", "::", "usage"}], " ", 
   "=", " ", "\n", 
   "\"\<GetRadiativeTransferEquationForDiskModel[{A_,\[Alpha]_,h_,l0_}] \
emplys a disk model from Gold et.Al '20 from which we quote:\nA: controls the \
degree of absorption of the fluid\n\[Alpha]: controls the \
frequency-dependence of the fluid emissivity, and consequently also the \
absorptivity\nh: controls the scale-height of the accretion disk and \
therefore the vertical concentration of matter within the fluid\nl0: \
specifies whether the fluid is rotating (l0 = 1) or purely radially infalling \
(l0 = 0)\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9, {3.8045782209631863`*^9, 3.804578229792697*^9}, {
   3.8045783075751867`*^9, 3.804578546759185*^9}, 
   3.804579280315648*^9},ExpressionUUID->"9e3916e9-add8-42ae-a51c-\
2dd55a0e8a97"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetIntensity", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetIntensity[{rCam_?RationalQ,\[Theta]Cam_?RationalQ,\[Phi]Cam_?\
RationalQ},{xScreen_?RationalQ,yScreen_?RationalQ},paramRules_List,ode_, \
opts:OptionsPattern[]] numerically integrates the radiative transfer equation \
(ode) to obtain the intensity fror a single image point.\node: radiative \
transfer equation (needs to be the output of \
GetRadiativeTransferEquationForDiskModel[])\nfor other input parameters, see \
GetSingleLightRay[]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9, 3.8045789129641323`*^9, {3.804579087472331*^9, 
   3.804579215018236*^9}, 
   3.804579444977696*^9},ExpressionUUID->"1d75ef42-b78e-486c-8b36-\
6119417e46c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetParametricShadowBoundary", "::", "usage"}], " ", "=", " ", 
   "\n", "\"\<GetParametricShadowBoundary[{rCam_,\[Theta]Cam_,\[Phi]Cam_}, \
{xCenter_,yCenter_}, radialSweepDistance_, \
{\[Psi]min_,\[Psi]max_,\[Psi]stepSize_}, paramRules_, precisionAim_]\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9, {3.779422231198772*^9, 3.779422235939971*^9}, {
   3.779429539448934*^9, 
   3.779429546576827*^9}},ExpressionUUID->"030c945c-50bb-4c8e-8367-\
43546f586439"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BoundaryBisection", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<BoundaryBisection[{rCam_,\[Theta]Cam_,\[Phi]Cam_}, \
{{xInnerScreen_,yInnerScreen_}, {xOuterScreen_,yOuterScreen_}}, paramRules_, \
precisionAim_]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9, {3.779422231198772*^9, 
   3.779422235939971*^9}},ExpressionUUID->"f3b3c056-bd12-47d4-9021-\
841b4c4a2a6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSingleLightRay", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetSingleLightRay[{rCam_,\[Theta]Cam_,\[Phi]Cam_},{xScreen_,yScreen_},\
paramRules_List]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9},ExpressionUUID->"9eaca5f1-2c6c-474c-805e-\
a4140a4b540c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CheckConstantsOfMotionAlongRay", "::", "usage"}], " ", "=", " ", 
   "\n", "\"\<CheckConstantsOfMotionAlongRay[ray_,paramRules_]\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.804587181242015*^9, 3.8045872026102257`*^9}, {
  3.8045873550055113`*^9, 
  3.804587357975466*^9}},ExpressionUUID->"6e987c31-542c-43f9-86e0-\
677161ee3fe8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotSingleTrajectory", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<PlotSingleTrajectory[sol_, paramRules_List, \
opts:OptionsPattern[]]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9, {3.7793693613492613`*^9, 3.7793693728568773`*^9}, {
   3.779429578478702*^9, 
   3.779429579447695*^9}},ExpressionUUID->"841f669b-7ff7-4a29-bae8-\
6d1f0011bab4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetMetric", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetMetric[metricSymbol_Symbol]:: sets just the symbol of the metric \
which is to be used.\\n\n\
==============================================================================\
==============\\n\nSetMetric[metricSymbol, metricComponents, \
options:OptionsPattern[]]:: sets the metricSymbol and explicit \
metricComponents given as a List of dimension (4,4).\\n\nOPTIONS:\\n\n\
______________________________________________________________________________\
_\\n\nLowerQ->True (Specifies whether the user enters a metric with lower or \
upper indices. Standard Value is True, i.e., that the user enters with lower \
indices.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.760078764365315*^9, 3.7600787702761173`*^9}, {3.760078818046336*^9, 
   3.760078821798991*^9}, {3.7600788649931593`*^9, 3.760078879217111*^9}, {
   3.7600790418087263`*^9, 3.760079050962823*^9}, {3.7792820416462593`*^9, 
   3.779282044810314*^9}, {3.779282446428721*^9, 3.7792824530951967`*^9}, {
   3.7792825251877337`*^9, 
   3.7792825259457817`*^9}},ExpressionUUID->"6ccda2f5-7b1c-4574-adbb-\
4d9a55f2a636"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetMetric", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetMetric[]:: gets just the symbol of the metric which is currently \
declared.\\n\n\
==============================================================================\
==============\\n\nGetMetric[i,j]:: gets an explicit component (i,j) of the \
metric (or its inverse), where i and j have to be explicit indices, i.e., \
integers (-4,-3,-2,-1,1,2,3,4).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}},ExpressionUUID->"9beac848-0955-433f-b059-\
427204a71661"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetBoyerLindquistCoords", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SetCoordinates[t_Symbol, r_Symbol, \[Theta]_Symbol, \[Phi]_Symbol]:: \
sets the symbols to be used as BL coordinates.\\n\n\
==============================================================================\
==============\ncurrently the camera is only set up for BL or Kerr \
coordinates!\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetKerrCoords", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetCoordinates[v_Symbol, r_Symbol, \[Theta]_Symbol, \
\[Chi]_Symbolin]:: sets the list of symbols to be used as Kerr \
coordinates.\\n\n\
==============================================================================\
==============\ncurrently the camera is only set up for BL or Kerr \
coordinates!\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.779280314648961*^9, 3.779280483163535*^9}, 
   3.7792815711098347`*^9, {3.779282530816828*^9, 3.7792825450832577`*^9}, {
   3.779282588201185*^9, 3.779282657280836*^9}, {3.811240106436859*^9, 
   3.8112401076453943`*^9}, {3.8112401555220747`*^9, 3.811240205800102*^9}, {
   3.811240366019249*^9, 3.8112403672934933`*^9}, 3.8112460592292624`*^9, {
   3.811246256193215*^9, 
   3.811246256945834*^9}},ExpressionUUID->"3884822e-3152-48e8-8bac-\
10248f28093b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetBoyerLindquistCoords", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<GetBoyerLindquistCoords[]:: gets the list of symbols of the BL \
coordinates currently declared.\\n\n\
==============================================================================\
==============\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetKerrCoords", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetKerrCoords[]:: gets the list of symbols of the Kerr coordinates \
currently declared.\\n\n\
==============================================================================\
==============\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}, {3.7792804937227287`*^9, 3.779280537253819*^9}, {
   3.811240214983891*^9, 
   3.811240236688899*^9}},ExpressionUUID->"8775a527-62c6-46ea-af82-\
e81b6fc79dbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetMass", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SetMass[mass_Symbol]:: sets the symbol that the user uses as the BH \
mass.\\n\n\
==============================================================================\
==============\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNewtonCoupling", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SetMass[G0_Symbol]:: sets the symbol that the user uses as the the \
Newton coupling G0.\\n\n\
==============================================================================\
==============\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSpin", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetSpin[spin_Symbol]:: sets the symbol that the user uses as the BH \
spin.\\n\n\
==============================================================================\
==============\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}, {3.7792804937227287`*^9, 3.779280537253819*^9}, {
   3.811240214983891*^9, 3.811240236688899*^9}, {3.811245710307824*^9, 
   3.8112458018284197`*^9}},ExpressionUUID->"021c90e8-f96e-4492-beba-\
7fe4d047a753"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetChristoffel", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetChristoffel[christoffelSymbol_Symbol]:: sets just the symbol of \
the christoffel symbols which is to be used.\\n\n\
==============================================================================\
==============\\n\nSetChristoffel[christoffelSymbol, christoffelComponents, \
options:OptionsPattern[]]:: sets the christoffelSymbol and explicit \
christoffelComponents given as a List of dimension (4,4,4).\\n\nIt only \
allows for input with one upper followed by two lower indices as the \
Christoffel is not a tensor.\\n\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.760078764365315*^9, 3.7600787702761173`*^9}, {3.760078818046336*^9, 
   3.760078821798991*^9}, {3.7600788649931593`*^9, 3.760078879217111*^9}, {
   3.7600790418087263`*^9, 3.760079050962823*^9}, {3.7600808418351727`*^9, 
   3.760080985431978*^9}, 
   3.804578838428938*^9},ExpressionUUID->"252a32cb-5f63-4498-86fc-\
533366c532bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetChristoffel", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetChristoffel[]:: gets just the symbol of the christoffel symbol \
which is currently declared.\\n\n\
==============================================================================\
==============\\n\nGetChristoffel[i,j,k]:: gets an explicit component (i,j,k) \
of the christoffel symbol, where i has to be an upper and j, k have to be \
lower indices, i.e., integers (1,2,3,4) and (-4,-3,-2,-1) \
respectively.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}, {3.7600808488484907`*^9, 3.76008085267023*^9}, {
   3.7600809905297737`*^9, 
   3.760081056926427*^9}},ExpressionUUID->"61585167-eae1-4b2d-a815-\
37c7f2546f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNullGeodesic1stOrderODE", "::", "usage"}], " ", "=", " ", 
   "\n", "\"\<GetNullGeodesic1stOrderODE[]:: simply defines the lightlike \
geodesic equation as a 1st order system of 8 ODE's in terms of christoffel \
symbols with x as coordinates, k as wave-vectors and \[Lambda] as affine \
parameter.\\n\nReference for implemented geodesic equation already cast into \
1st order ODE: 1801.10452, Eq. (5) & (6).\\n\n\
==============================================================================\
==============\\n\nGetNullGeodesic1stOrderODE[pos, waveVector, affineParam]:: \
allows to define own notation for x, k and \[Lambda]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7604192025983677`*^9, 3.760419216767975*^9}, {
  3.760419258165523*^9, 3.76041926701227*^9}, {3.760419307140087*^9, 
  3.760419372223402*^9}, {3.76041971907381*^9, 3.760419724853516*^9}, {
  3.7604197565746527`*^9, 3.760419760640511*^9}, {3.760419939005867*^9, 
  3.760419957742423*^9}},ExpressionUUID->"4cf2b4dc-4ba3-4073-bf7b-\
6f6259cc0379"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetBoyerLindquistInitialValues", "::", "usage"}], " ", "=", " ", 
  "\n", "\"\<GetBoyerLindquistInitialValues[{pos_Symbol, waveVector_Symbol, \
affineParam0_Symbol},{rObs_,\[Theta]Obs_,\[Phi]Obs_},{x_,y_},a_]:: defines \
appropriate initial conditions for an incident ray on a specific screen point\
\\n\n{pos_, waveVector_, affineParam0_} are the desired symbols for the \
coordinates, the waveVector an the initial value for the affine parameter.\\n\
\n{rObs,\[Theta]Obs,\[Phi]Obs} defines the precise location of the screen \
w.r.t. Boyer-Lindquist coordinates of the BH.\\n\n{x_,y_} defines the screen \
coordinates of the specific image point.\\n\na_ is the impact parameter.\\n\n\
The implemented formula's follow 1607.05767, Sec. II C.\>\""}]], "Code",
 CellChangeTimes->{{3.760420952883422*^9, 3.7604210238148737`*^9}, {
  3.760421056154049*^9, 3.760421108997258*^9}, {3.7604211435092907`*^9, 
  3.760421413085478*^9}},ExpressionUUID->"9c8ace11-ac90-4983-818d-\
02f6834b81da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertBoyerLindquistToCartesian", "::", "usage"}], " ", "=", " ", 
  "\n", "\"\<ConvertBoyerLindquistToCartesian[{r_,\[Theta]_,\[Phi]_}]:: \
converts a set of BL coordinates into a set of spatial cartesian coordinates.\
\>\""}]], "Code",
 CellChangeTimes->{{3.76042713530186*^9, 3.7604271939437943`*^9}, {
  3.811237873540669*^9, 3.811237874451747*^9}, {3.8112486658372393`*^9, 
  3.8112486663735037`*^9}, {3.811248835933251*^9, 3.811248836329775*^9}, {
  3.8112512413438787`*^9, 
  3.81125124184753*^9}},ExpressionUUID->"f3cb2115-4254-472e-94a9-\
9bb34c1c19fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Own Options and Option Values", "Section",
 CellChangeTimes->{{3.6502624173824043`*^9, 3.650262427627069*^9}, {
  3.779370671400255*^9, 3.7793706750049963`*^9}, {3.779370706807705*^9, 
  3.779370713303027*^9}},ExpressionUUID->"d37c321c-f0dd-41cf-8886-\
f6f9db64970e"],

Cell[BoxData[
 RowBox[{"PlotHorizon", ";", " ", "PrintTemporaryOption", ";", " ", 
  "HorizonCondition", ";", " ", "DiskCutoff", ";", " ", 
  "StopIntegrationAtLightRingNumber", ";", "RadiativeTransferMaxStepSize", 
  ";"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBWIQfe2Kw47b+q8dV3kf3Q2ixfxuCtwB0jNsfQRBdFCQ
lCSvwWvHS9zyYDoj/j0DH5Buz+VhBNEJPmx+IPqKiQuY1moQlL9l+NpxVkEl
mNY63BHMbQSkZx8C0xYOtuUguoutE0y3LVTYawikV/xtAdO7LnR+MAbS/bOn
fQTR10LmrwsC0usO390AohUeOmwMMHntmBnGswlEP1kb0hYGpJnOZIJpiVv1
PMctgO5VucwHolVZp5iC6PRudhsQLWa3yRtEazQLBIHovs8KwSeAdLOKcSSI
9jjsXjzH+rXjBY9PYJrlNpPkDvvXji5VpmC63KD9RaTTa0cDhj1g2vCgmcQN
59eOKf1bwfSkW8evTdZ44ximfR5Mq6zQvguiI5g8wLSb2V6djUA69eEdMM2j
ktvQWfjGcebuBY0gOnj/wpUhZW8co2SiV4Po9oD310H0g3TVGyC6JypxRVjF
G8dFR0+B6QUH9ftn175xZHjmC6YBUHfYaA==
  
  "],ExpressionUUID->"d6e855bf-84d7-4db6-9a51-14477754c928"],

Cell[BoxData[
 RowBox[{"WhichCoords", ";", " ", "Kerr", ";", " ", "BoyerLindquist", 
  ";"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQfe2Kw47b+q8dV3kf3Q2ixfxuCtwB0jNsfQRBdFCQ
lCSvwWvHS9zyYDoj/j0DH5Buz+VhBNEJPmx+IPqKiQuY1moQlL9l+NpxVkEl
mNY63BHMbQSkZx8C0xYOtuUguoutE0y3LVTYawikV/xtAdO7LnR+MAbS/bOn
fQTR10LmrwsC0usO390AohUeOmwMMHntmBnGswlEP1kb0hYGpJnOZIJpiVv1
PMctgO5VucwHolVZp5iC6PRudhsQLWa3yRtEazQLBIHovs8KwSeAdLOKcSSI
9jjsXjzH+rXjBY9PYJrlNpPkDvvXji5VpmC63KD9RaTTa0cDhj1g2vCgmcQN
59eOKf1bwfSkW8evTdZ44ximfR5Mq6zQvguiI5g8wLSb2V6djUA69eEdMP2A
edmd2NQ3jv8+5DwA0QB1RbhD
  
  "],ExpressionUUID->"6ef60240-4c75-45b6-977a-78308a8a7baf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private part of the SimpleRayTracer package", "Title",
 CellChangeTimes->{{3.760068497790769*^9, 3.7600685051249857`*^9}, {
  3.760068648005158*^9, 
  3.760068648494479*^9}},ExpressionUUID->"ff6b5ed0-57ac-41c0-a030-\
7d212efc8260"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.760074041242437*^9, 3.760074050882641*^9}, 
   3.7600779044075317`*^9, {3.8112419472507267`*^9, 
   3.811241963682168*^9}},ExpressionUUID->"a74a3243-0f6e-4f9e-8b36-\
51137ca15616"],

Cell[CellGroupData[{

Cell["Helper functions", "Section",
 CellChangeTimes->{{3.760068294549737*^9, 
  3.760068297780572*^9}},ExpressionUUID->"3e020569-6fe7-48c9-a261-\
cc8daa115535"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "a", " ", "function", " ", "to", " ", "check", " ", "whether", " ", 
    "something", " ", "is", " ", "an", " ", "explicit", " ", "index"}], 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitUpperIndexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<ExplicitUpIndexQ[ind___] checks whether ind is an explicit upper \
index, i.e., if it is +1,+2,+3 or +4\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitUpperIndexQ", "[", "___", "]"}], " ", ":=", " ", 
     "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitUpperIndexQ", "[", 
      RowBox[{"index_Integer", "/;", 
       RowBox[{"1", "\[LessEqual]", "index", "\[LessEqual]", "4"}]}], "]"}], 
     " ", ":=", " ", "True"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitLowerIndexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<ExplicitDownIndexQ[ind___] checks whether ind is an explicit lower \
index, i.e., if it is -1,-2,-3 or -4\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitLowerIndexQ", "[", "___", "]"}], " ", ":=", " ", 
     "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitLowerIndexQ", "[", 
      RowBox[{"index_Integer", "/;", 
       RowBox[{
        RowBox[{"-", "4"}], "\[LessEqual]", "index", "\[LessEqual]", 
        RowBox[{"-", "1"}]}]}], "]"}], " ", ":=", " ", "True"}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.759648254605851*^9, 3.75964825944168*^9}, {
   3.759648335202248*^9, 3.7596483584314404`*^9}, 3.759648402965303*^9, {
   3.7596494288481407`*^9, 3.75964949788645*^9}, {3.7596498641816874`*^9, 
   3.7596498950281477`*^9}, 3.759650571955755*^9, {3.760068367415017*^9, 
   3.760068476245428*^9}, {3.7600724687588987`*^9, 3.760072482754964*^9}, {
   3.760079381904277*^9, 3.7600793918920794`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6b243751-5f7b-4726-90e4-64e2f2e1b42a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", 
    RowBox[{
     RowBox[{"a_", "?", "NumericQ"}], "/;", 
     RowBox[{
      RowBox[{"Precision", "[", "a", "]"}], "===", "\[Infinity]"}]}], "]"}], 
   " ", ":=", " ", "True"}], ";"}]}], "Code",
 CellChangeTimes->{{3.804571096822666*^9, 3.804571159591011*^9}, {
  3.8045712157447567`*^9, 
  3.8045712240603724`*^9}},ExpressionUUID->"49a836a5-04ef-4f4e-bd62-\
93b8d14ada35"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DynamicIterativeTaskTimeEstimatePrint", "[", 
    RowBox[{"iterator_", ",", " ", "iterativeTaskNumber_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", "startTime", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"startTime", " ", "=", " ", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Print", "[", "\n", "\t\t", 
       RowBox[{"\"\<approx. \>\"", ",", "\n", "\t\t", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"DateDifference", "[", 
          RowBox[{
           RowBox[{"DateList", "[", "startTime", "]"}], ",", 
           RowBox[{"DateList", "[", 
            RowBox[{"startTime", "+", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                  "startTime"}], ")"}], "iterator"], "*", 
               RowBox[{"(", 
                RowBox[{"iterativeTaskNumber", " ", "-", " ", "iterator"}], 
                ")"}]}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", ",", 
             "\"\<Second\>\""}], "}"}]}], "]"}], "]"}], ",", "\n", "\t\t", 
        "\"\< left to finish calculation\>\""}], "\n", "\t", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.804573139292927*^9, 3.8045731437631807`*^9}, {
  3.804573213999876*^9, 3.804573459729281*^9}, {3.804575485485887*^9, 
  3.8045755893664417`*^9}, {3.804575651027568*^9, 3.804575653004237*^9}, {
  3.804575693015256*^9, 3.8045757579373693`*^9}, {3.804576177022438*^9, 
  3.804576178646497*^9}, {3.804576322277811*^9, 
  3.804576327130371*^9}},ExpressionUUID->"39407ce1-3e11-4999-b0ea-\
dd76b8a643e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SmoothHeaviside", "[", 
    RowBox[{"r_", ",", "x_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"Tanh", "[", 
      RowBox[{"x", " ", "r"}], "]"}], "+", "1"}], "2"]}], ";"}]], "Code",
 CellChangeTimes->{
  3.820066956218058*^9, {3.820154175834305*^9, 
   3.820154176612423*^9}},ExpressionUUID->"e25d0f03-c641-415f-826c-\
886a93ecb375"]
}, Closed]],

Cell[CellGroupData[{

Cell["In- and Output of analytical metric and Christoffels", "Section",
 CellChangeTimes->{{3.760068311739423*^9, 
  3.760068333683827*^9}},ExpressionUUID->"c8e1da78-752e-4cb3-bbe2-\
dd2976b2adbe"],

Cell[CellGroupData[{

Cell["\<\
SetBoyerLindquistCoords[] and GetBoyerLindquistCoords[] (and same for \
spherical Kerr coordinates)\
\>", "Subsection",
 CellChangeTimes->{{3.760079674417808*^9, 3.760079687106201*^9}, {
  3.7792853391467867`*^9, 3.779285342839522*^9}, {3.8112399873238173`*^9, 
  3.8112400037946777`*^9}},ExpressionUUID->"bfe22adc-2b99-4867-b44c-\
d99eb5044030"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetMass", "[", "mass_Symbol", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"$mass", " ", "=", " ", "mass"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNewtonCoupling", "[", "G0_Symbol", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"$G0", " ", "=", " ", "G0"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSpin", "[", "spin_Symbol", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"$spin", " ", "=", " ", "spin"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.779279768273569*^9, 3.779279777835878*^9}, {
   3.779279834910852*^9, 3.779279877295828*^9}, {3.779279939742702*^9, 
   3.779280004600944*^9}, {3.7792800929239607`*^9, 3.7792801321513567`*^9}, {
   3.7792806743009357`*^9, 3.779280730510482*^9}, {3.779281176303897*^9, 
   3.7792812134119596`*^9}, {3.779281269945743*^9, 3.7792812755086527`*^9}, 
   3.779281756199522*^9, {3.7792818129111357`*^9, 3.779281824298513*^9}, 
   3.779282402703526*^9, 3.7792824942242317`*^9, {3.7792826645686407`*^9, 
   3.7792826691507587`*^9}, {3.8112418450792837`*^9, 3.811241862735649*^9}, 
   3.811241915329021*^9, {3.811242002467813*^9, 3.81124200936372*^9}, {
   3.811245586218422*^9, 
   3.81124568141194*^9}},ExpressionUUID->"0f917a6d-978f-432a-abf9-\
17113ef48566"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetBoyerLindquistCoords", "[", 
     RowBox[{
     "t_Symbol", ",", " ", "r_Symbol", ",", " ", "\[Theta]_Symbol", ",", " ", 
      "\[Phi]_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"WhichCoords", " ", "=", " ", "BoyerLindquist"}], ";", "\n", 
       "\t", 
       RowBox[{"$t", " ", "=", " ", "t"}], ";", "\n", "\t", 
       RowBox[{"$r", " ", "=", " ", "r"}], ";", "\n", "\t", 
       RowBox[{"$\[Theta]", " ", "=", " ", "\[Theta]"}], ";", "\n", "\t", 
       RowBox[{"$\[Phi]", " ", "=", " ", "\[Phi]"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBoyerLindquistCoords", "[", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
    "$t", ",", " ", "$r", ",", " ", "$\[Theta]", ",", " ", "$\[Phi]"}], 
    "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.779279768273569*^9, 3.779279777835878*^9}, {
   3.779279834910852*^9, 3.779279877295828*^9}, {3.779279939742702*^9, 
   3.779280004600944*^9}, {3.7792800929239607`*^9, 3.7792801321513567`*^9}, {
   3.7792806743009357`*^9, 3.779280730510482*^9}, {3.779281176303897*^9, 
   3.7792812134119596`*^9}, {3.779281269945743*^9, 3.7792812755086527`*^9}, 
   3.779281756199522*^9, {3.7792818129111357`*^9, 3.779281824298513*^9}, 
   3.779282402703526*^9, 3.7792824942242317`*^9, {3.7792826645686407`*^9, 
   3.7792826691507587`*^9}, {3.8112418450792837`*^9, 3.811241862735649*^9}, 
   3.811241915329021*^9, {3.811242002467813*^9, 
   3.81124200936372*^9}},ExpressionUUID->"05b6410c-8370-4445-b82c-\
580cdc9c0180"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetKerrCoords", "[", 
     RowBox[{
     "v_Symbol", ",", " ", "r_Symbol", ",", " ", "\[Theta]_Symbol", ",", " ", 
      "\[Chi]_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"WhichCoords", " ", "=", " ", "Kerr"}], ";", "\n", "\t", 
       RowBox[{"$v", " ", "=", " ", "v"}], ";", "\n", "\t", 
       RowBox[{"$r", " ", "=", " ", "r"}], ";", "\n", "\t", 
       RowBox[{"$\[Theta]", " ", "=", " ", "\[Theta]"}], ";", "\n", "\t", 
       RowBox[{"$\[Chi]", " ", "=", " ", "\[Chi]"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetKerrCoords", "[", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
    "$v", ",", " ", "$r", ",", " ", "$\[Theta]", ",", " ", "$\[Chi]"}], 
    "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.811240020979745*^9, 3.811240074428385*^9}, {
   3.811241875698669*^9, 3.811241878832107*^9}, 3.811241913810371*^9, {
   3.8112420138598213`*^9, 
   3.811242020540053*^9}},ExpressionUUID->"3e7515a8-c1c5-4231-9e0e-\
6d0d156aceb5"]
}, Closed]],

Cell[CellGroupData[{

Cell["SetMetric[] and GetMetric[]", "Subsection",
 CellChangeTimes->{{3.760079674417808*^9, 
  3.760079687106201*^9}},ExpressionUUID->"7c82d830-f888-42f9-ac89-\
5e8a83ac1aeb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "sets", " ", "just", " ", "the", " ", "symbol", " ", "of", " ", "the", " ",
     "metric", " ", "to", " ", "be", " ", "used"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SetMetric", "[", "metricSymbol_Symbol", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"$metric", " ", "=", " ", "metricSymbol"}], ";"}]}], "\n", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "use", " ", "lower", " ", "metric", " ", "components", " ", "as", " ", 
     "the", " ", "standard", " ", "input", " ", "form"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "user", " ", "should", " ", "actively", " ", "decide", " ", "on", " ", 
      "lower", " ", "or", " ", "upper", " ", "declaration"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "SetMetric", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"LowerQ", "\[Rule]", "True"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetMetric", "::", "LowerQBoole"}], "=", 
     "\"\<The value of LowerQ should be True or False. User input overriden \
and standard value 'True' is used.\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "sets", " ", "symbol", " ", "and", " ", "explicit", " ", "components", 
     " ", "of", " ", "the", " ", "metric", " ", "to", " ", "be", " ", 
     "used"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetMetric", "[", 
      RowBox[{"metricSymbol_Symbol", ",", " ", 
       RowBox[{"metricComponents_List", "/;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "metricComponents", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}]}], ",", " ", 
       RowBox[{"options", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"inverseMetricComponents", " ", "=", " ", 
         RowBox[{"Inverse", "[", "metricComponents", "]"}]}], "\n", "\t", 
        "}"}], ",", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "the", " ", "metric", " ", "symbol"}], " ", 
        "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"$metric", " ", "=", " ", "metricSymbol"}], ";", "\n", "\n", 
        "\t", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "LowerQ", "]"}], ",", "\n", "\t\t", 
          "True", "\n", "\t\t", ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "the", " ", "lower", " ", "metric"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{
                RowBox[{"-", "i"}], ",", 
                RowBox[{"-", "j"}]}], "]"}], "=", 
              RowBox[{"metricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "upper", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "=", 
              RowBox[{"inverseMetricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";"}], 
          "\n", "\t\t", ",", "\n", "\t\t", "False", "\n", "\t\t", ",", "\n", 
          "\t\t", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "the", " ", "upper", " ", "metric"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "=", 
              RowBox[{"metricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "lower", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{
                RowBox[{"-", "i"}], ",", 
                RowBox[{"-", "j"}]}], "]"}], "=", 
              RowBox[{"inverseMetricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";"}], 
          "\n", "\t\t", ",", "\n", "\t\t", "___", ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"f", "::", "LowerQBoole"}], ",", "b"}], "]"}], ";", "\n",
            "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "lower", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{
                RowBox[{"-", "i"}], ",", 
                RowBox[{"-", "j"}]}], "]"}], "=", 
              RowBox[{"metricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "upper", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "=", 
              RowBox[{"inverseMetricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";"}]}], 
         "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7600690223838043`*^9, 3.7600690710945597`*^9}, {
   3.76007187065856*^9, 3.760071925391111*^9}, {3.760071968703323*^9, 
   3.7600719772091*^9}, {3.76007201483885*^9, 3.760072104243979*^9}, {
   3.760072155910742*^9, 3.760072215374798*^9}, {3.7600723425338373`*^9, 
   3.760072381661373*^9}, {3.760072435564219*^9, 3.760072569218574*^9}, {
   3.7600726043412933`*^9, 3.760072611927273*^9}, {3.7600726462338448`*^9, 
   3.7600726664629583`*^9}, {3.760072728728697*^9, 3.7600731449515753`*^9}, {
   3.760073197986067*^9, 3.76007336193386*^9}, {3.760073443218858*^9, 
   3.76007351114426*^9}, {3.760073639712381*^9, 3.760073729363492*^9}, 
   3.7792817613814487`*^9, {3.779282023936783*^9, 3.779282028830703*^9}, {
   3.779282138032131*^9, 3.779282139703845*^9}, {3.779282172667161*^9, 
   3.779282215029464*^9}, {3.779282256612928*^9, 3.779282265084518*^9}, 
   3.7792823906385612`*^9, {3.779282433906096*^9, 3.779282491931753*^9}, {
   3.7792826758914423`*^9, 3.779282676621666*^9}, {3.8111708729558363`*^9, 
   3.811170875259647*^9}, {3.811327482875147*^9, 
   3.8113274830325108`*^9}},ExpressionUUID->"82417c37-f12d-4b31-a916-\
3f70b3ccfdb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"gets", " ", "the", " ", 
    RowBox[{"(", 
     RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetMetric", "[", "]"}], " ", ":=", " ", "$metric"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "gets", " ", "a", " ", "specific", " ", "component", " ", "of", " ", 
     "the", " ", 
     RowBox[{"(", 
      RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMetric", "[", 
      RowBox[{
       RowBox[{"i_", "/;", 
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"ExplicitUpperIndexQ", "@", "i"}], ",", 
          RowBox[{"ExplicitLowerIndexQ", "@", "i"}]}], "]"}]}], ",", 
       RowBox[{"j_", "/;", 
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"ExplicitUpperIndexQ", "@", "j"}], ",", 
          RowBox[{"ExplicitLowerIndexQ", "@", "j"}]}], "]"}]}]}], "]"}], " ", 
     ":=", " ", 
     RowBox[{"$metric", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.760073520274274*^9, 3.760073623997293*^9}, {
  3.760073749133471*^9, 3.760073758399481*^9}, {3.760079129540543*^9, 
  3.760079168932686*^9}},ExpressionUUID->"36c64e3c-ef00-434d-a8dc-\
79a38b160006"]
}, Closed]],

Cell[CellGroupData[{

Cell["SetChristoffels[] and GetChristoffels[]", "Subsection",
 CellChangeTimes->{{3.7600796959360323`*^9, 
  3.760079707709949*^9}},ExpressionUUID->"244fa1a1-2ef5-4610-be39-\
c5a865d0b932"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "sets", " ", "just", " ", "the", " ", "christoffel", " ", "symbol", " ", 
    RowBox[{"w", "/", "o"}], " ", "explicit", " ", "values"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SetChristoffel", "[", "christoffelSymbol_", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"$christoffel", " ", "=", " ", "christoffelSymbol"}], ";"}]}],
       "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "the", " ", "christoffel", " ", "symbol", " ", 
      "christoffelSymbol", " ", "in", " ", "xAct", " ", "notation", " ", 
      "and", " ", "assigns", " ", "the", " ", "values", " ", "from", " ", "a",
       " ", 
      RowBox[{"(", 
       RowBox[{"4", ",", "4", ",", "4"}], ")"}]}], "-", 
     RowBox[{
     "dimensional", " ", "list", " ", "christoffelList", " ", "of", " ", 
      "expressions"}]}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "it", " ", "only", " ", "allows", " ", "for", " ", "input", " ", "with", 
     " ", "one", " ", "upper", " ", "followed", " ", "by", " ", "two", " ", 
     "lower", " ", "indices", " ", "as", " ", "the", " ", "Christoffel", " ", 
     "is", " ", "not", " ", "a", " ", "tensor"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetChristoffel", "[", 
      RowBox[{"christoffelSymbol_", ",", " ", 
       RowBox[{"christoffelComponents_List", "/;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "christoffelComponents", "]"}], 
         "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4", ",", "4"}], "}"}]}]}]}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\n", "\t", 
       RowBox[{
        RowBox[{"$christoffel", " ", "=", " ", "christoffelSymbol"}], ";", 
        "\n", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"$christoffel", " ", "=", " ", "christoffelSymbol"}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"christoffelSymbol", "[", 
             RowBox[{"i", ",", 
              RowBox[{"-", "j"}], ",", 
              RowBox[{"-", "k"}]}], "]"}], " ", "=", " ", 
            RowBox[{"christoffelComponents", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "4"}], "}"}]}], "\n", "\t", "]"}], ";"}]}], "\n",
       "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.759648954951639*^9, 3.759649001196498*^9}, {
   3.759649055931678*^9, 3.759649082244481*^9}, {3.7596491608643303`*^9, 
   3.7596491774551773`*^9}, {3.7596493017564907`*^9, 3.759649380374263*^9}, {
   3.759649532098851*^9, 3.759649537254908*^9}, {3.759649606802886*^9, 
   3.759649617420043*^9}, {3.759649685360005*^9, 3.759649811466649*^9}, {
   3.759649849318046*^9, 3.759649851455797*^9}, {3.759649901361409*^9, 
   3.759649909038323*^9}, {3.759649953215805*^9, 3.759650061458602*^9}, 
   3.759650569354425*^9, {3.7597362152306137`*^9, 3.759736245022252*^9}, {
   3.760079834146722*^9, 3.760079868504706*^9}, {3.760080055291875*^9, 
   3.76008007035397*^9}, {3.760080114346263*^9, 3.760080151110725*^9}, {
   3.760080182802685*^9, 3.760080235068214*^9}, {3.760080326558588*^9, 
   3.7600805761756372`*^9}, {3.76008062285373*^9, 3.760080631139308*^9}, {
   3.760080920065236*^9, 3.760080929310594*^9}, {3.760081207476506*^9, 
   3.760081211269236*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"2520c103-06a8-44b1-9ecc-d6bfcd2fd319"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"gets", " ", "the", " ", 
    RowBox[{"(", 
     RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetChristoffel", "[", "]"}], " ", ":=", " ", "$christoffel"}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "gets", " ", "a", " ", "specific", " ", "component", " ", "of", " ", 
     "the", " ", 
     RowBox[{"(", 
      RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetChristoffel", "[", 
      RowBox[{
       RowBox[{"i_", "?", "ExplicitUpperIndexQ"}], ",", " ", 
       RowBox[{"j_", "?", "ExplicitLowerIndexQ"}], ",", " ", 
       RowBox[{"k_", "?", "ExplicitLowerIndexQ"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"$christoffel", "[", 
      RowBox[{"i", ",", "j", ",", "k"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.760080571737733*^9, 3.760080612889028*^9}, {
  3.760080662810542*^9, 3.760080706211175*^9}, {3.760081372785852*^9, 
  3.7600813766435757`*^9}, {3.760418738122007*^9, 
  3.7604187405111427`*^9}},ExpressionUUID->"43ce8f58-3c62-43da-a133-\
87964d2602ec"],

Cell["\<\
Later on one could privately load xCoba to calculate the Christoffel symbols \
from the metric.\
\>", "Text",
 CellChangeTimes->{{3.7600795375750427`*^9, 
  3.7600795795186777`*^9}},ExpressionUUID->"fa6632e3-4adf-446e-9a10-\
a71bf562b544"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalculateChristoffelsFromMetric", "[", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.76007959309459*^9, 
  3.7600796099998903`*^9}},ExpressionUUID->"66a1fab4-0589-433e-8224-\
afe6023f55cf"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["defining evolution ODE\[CloseCurlyQuote]s and initial values", "Section",
 CellChangeTimes->{{3.760418872194848*^9, 
  3.760418893494804*^9}},ExpressionUUID->"6f5dbe02-edc8-4e60-ae76-\
565ac0f1212d"],

Cell[CellGroupData[{

Cell["define the ODE", "Subsection",
 CellChangeTimes->{{3.760418898290104*^9, 
  3.7604189007740593`*^9}},ExpressionUUID->"2ce167d8-2950-4019-8022-\
306183c18170"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simply", " ", "defines", " ", "the", " ", "geodesic", " ", "equation", 
    " ", "as", " ", "a", " ", "1", "st", " ", "order", " ", "system", " ", 
    "of", " ", "8", " ", 
    RowBox[{"ODE", "'"}], "s", " ", "in", " ", "terms", " ", "of", " ", 
    "christoffel", " ", "symbols"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"GetNullGeodesic1stOrderODE", "[", 
      RowBox[{"pos_", ",", " ", "waveVector_", ",", " ", "affineParam_"}], 
      "]"}], " ", "where", " ", "pos", " ", "is", " ", "the", " ", "symbol", 
     " ", "for", " ", "the", " ", "position"}], ",", " ", 
    RowBox[{
    "waveVector", " ", "the", " ", "symbol", " ", "for", " ", "the", " ", 
     "wave", " ", "vector"}], ",", " ", 
    RowBox[{
    "and", " ", "affineParam", " ", "the", " ", "affine", " ", "parameter", 
     " ", "of", " ", "the", " ", "null", " ", "geodesic"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Reference", " ", "for", " ", "implemented", " ", "geodesic", " ", 
     RowBox[{"Eq", ".", " ", "cast"}], " ", "into", " ", "1", "st", " ", 
     "order", " ", 
     RowBox[{"ODE", ":", " ", "1801.10452"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Eq", ".", " ", 
       RowBox[{"(", "5", ")"}]}], " ", "&"}], " ", 
     RowBox[{
      RowBox[{"(", "6", ")"}], "."}]}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetNullGeodesic1stOrderODE", "[", "]"}], " ", ":=", " ", 
     RowBox[{"GetNullGeodesic1stOrderODE", "[", 
      RowBox[{"x", ",", " ", "k", ",", " ", "\[Lambda]"}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetNullGeodesic1stOrderODE", "[", 
      RowBox[{
      "pos_Symbol", ",", " ", "waveVector_Symbol", ",", " ", 
       "affineParam_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "1", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam", 
            "]"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "2", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam", 
            "]"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "3", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam", 
            "]"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "4", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam", 
            "]"}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"3", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"4", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}]}], "\n", "\t", 
         "}"}], "]"}]}], "\n", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.76041890883561*^9, {3.760419068078196*^9, 3.760419093781599*^9}, 
   3.760419175453005*^9, {3.7604196409044857`*^9, 
   3.760419644584538*^9}},ExpressionUUID->"c4e880a6-8a54-499b-bfdf-\
4d43e71ab746"]
}, Closed]],

Cell[CellGroupData[{

Cell["define Boyer-Lindquist coordinate rules", "Subsection",
 CellChangeTimes->{{3.760419867152108*^9, 3.760419876202402*^9}, {
  3.811317021031001*^9, 
  3.81131702289503*^9}},ExpressionUUID->"c6efdc96-2747-4f69-8a26-\
1bc1f5c98036"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConvertBoyerLindquistToCartesian", "[", 
    RowBox[{"{", 
     RowBox[{"r_", ",", "theta_", ",", "phi_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r", "^", "2"}], " ", "+", " ", 
        RowBox[{"$spin", "^", "2"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "theta", "]"}], "*", 
      RowBox[{"Cos", "[", "phi", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r", "^", "2"}], " ", "+", " ", 
        RowBox[{"$spin", "^", "2"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "theta", "]"}], "*", 
      RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
     RowBox[{"r", "*", 
      RowBox[{"Cos", "[", "theta", "]"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.760427120156196*^9, {3.811248639771359*^9, 3.8112486644478893`*^9}, 
   3.811248836769802*^9, {3.811251240378368*^9, 
   3.811251295789363*^9}},ExpressionUUID->"527f1fc5-7536-4708-988e-\
0f836b3189fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "to", " ", "transform", " ", "the", " ", 
     "observers", " ", "screen", " ", "coordinates", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", "."}], ",", " ", 
       RowBox[{
       "the", " ", "initial", " ", "conditions", " ", "for", " ", "the", " ", 
        "light", " ", "rays"}]}], ")"}], " ", "into", " ", "standard", " ", 
     "Boyer"}], "-", 
    RowBox[{"Lindquist", " ", 
     RowBox[{"(", "BL", ")"}], " ", "coordinates", " ", "of", " ", "the", " ",
      "BH"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"we", " ", "follow", " ", "1607.05767"}], ",", " ", 
    RowBox[{
     RowBox[{"Sec", ".", " ", "II"}], " ", "C"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "the", " ", "observer", " ", "screen", " ", "extends", " ", "in", " ", 
      "the", " ", "observers", " ", "x", " ", "and", " ", "y", " ", 
      "coordinates", " ", "with", " ", "the", " ", "origin", " ", "at", " ", 
      RowBox[{"(", 
       RowBox[{"0", ",", "rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], 
       ")"}], " ", "in", " ", "BL"}], "-", "coords"}], ",", " ", 
    RowBox[{
     RowBox[{"while", " ", "the", " ", "observers", " ", "z"}], "-", 
     RowBox[{
     "axis", " ", "is", " ", "aligned", " ", "with", " ", "the", " ", 
      "radial", " ", "direction", " ", "in", " ", "BL"}], "-", "coords"}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "a", " ", "is", " ", "the", " ", "rotation", " ", "parameter", " ", "of", 
     " ", "the", " ", "Kerr"}], "-", 
    RowBox[{"BH", " ", 
     RowBox[{"(", 
      RowBox[{"0", " ", "for", " ", "Schwarzschild"}], ")"}]}]}], " ", "*)"}],
   "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
     RowBox[{"could", " ", "be", " ", "hard"}], "-", 
     RowBox[{
     "coded", " ", "to", " ", "decrease", " ", "computation", " ", 
      "time"}]}]}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"get", " ", "the", " ", "spatial", " ", "coordinates"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetBoyerLindquistToSceenCoordsRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Sigma]", ",", "\[ScriptCapitalD]", ",", "X", ",", "Y", ",", "Z"}], 
        "}"}], ",", "\n", "\n", "\t", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"rObs", "^", "2"}], " ", "+", " ", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], " ", "-", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"X", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}], " ", "-", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Y", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{
          RowBox[{"rObs", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"\[Sigma]", " ", "=", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"X", "^", "2"}], " ", "+", " ", 
           RowBox[{"Y", "^", "2"}], " ", "+", " ", 
           RowBox[{"Z", "^", "2"}], " ", "-", " ", 
           RowBox[{"a", "^", "2"}]}], "2"]}], ";", "\n", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"r", " ", "\[Rule]", "  ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Sigma]", " ", "+", " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"a", "^", "2"}], "*", 
                 RowBox[{"Z", "^", "2"}]}]}], "]"}]}], "]"}]}], ",", "\n", 
           "\t\t", 
           RowBox[{"\[Theta]", " ", "\[Rule]", " ", 
            RowBox[{"ArcCos", "[", 
             FractionBox["Z", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"\[Sigma]", " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"a", "^", "2"}], "*", 
                   RowBox[{"Z", "^", "2"}]}]}], "]"}]}], "]"}]], "]"}]}], ",",
            "\n", "\t\t", 
           RowBox[{"\[Phi]", " ", "\[Rule]", " ", 
            RowBox[{"ArcTan", "[", 
             RowBox[{"Y", "/", "X"}], "]"}]}]}], "\n", "\t", "}"}], "]"}]}]}],
       "\n", "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "get", " ", "the", " ", "derivatives", " ", "of", " ", "the", " ", 
     "spatial", " ", "coordinates"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetBoyerLindquistDerivativesToSceenCoordsRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Sigma]", ",", "\[ScriptCapitalD]", ",", "X", ",", "Y", ",", "Z", 
         ",", "\[CapitalSigma]", ",", "\[ScriptCapitalR]", ",", 
         "\[CapitalPhi]"}], "}"}], ",", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
         "position"}], "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"rObs", "^", "2"}], " ", "+", " ", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], " ", "-", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"X", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}], " ", "-", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Y", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{
          RowBox[{"rObs", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"\[Sigma]", " ", "=", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"X", "^", "2"}], " ", "+", " ", 
           RowBox[{"Y", "^", "2"}], " ", "+", " ", 
           RowBox[{"Z", "^", "2"}], " ", "-", " ", 
           RowBox[{"a", "^", "2"}]}], "2"]}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
         "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
          "velocity"}], "*)"}], "\n", "\t", 
        RowBox[{"\[CapitalSigma]", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"a", "^", "2"}], "*", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        ";", "\n", "\t", 
        RowBox[{"\[ScriptCapitalR]", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"r", "^", "2"}], " ", "+", " ", 
             RowBox[{"a", "^", "2"}]}], "]"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{"r", ":>", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Sigma]", " ", "+", " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"a", "^", "2"}], "*", 
                 RowBox[{"Z", "^", "2"}]}]}], "]"}]}], "]"}]}], "}"}]}]}], 
        ";", "\n", "\t", 
        RowBox[{"\[CapitalPhi]", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Phi]", "-", "\[Phi]Obs"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", "\[Rule]", 
            RowBox[{"ArcTan", "[", 
             RowBox[{"Y", "/", "X"}], "]"}]}], "}"}]}]}], ";", "\n", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Der", "[", "r", "]"}], " ", "\[Rule]", "  ", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"r", "*", "\[ScriptCapitalR]", "*", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], "*", 
                RowBox[{"Cos", "[", "\[CapitalPhi]", "]"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"\[ScriptCapitalR]", "^", "2"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}], 
              "\[CapitalSigma]"]}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"\[ScriptCapitalR]", "*", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], "*", 
                RowBox[{"Cos", "[", "\[CapitalPhi]", "]"}]}], " ", "-", " ", 
               RowBox[{"r", "*", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}], 
              "\[CapitalSigma]"]}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", 
            FractionBox[
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], "*", 
              RowBox[{"Sin", "[", "\[CapitalPhi]", "]"}], "*", 
              RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
             "\[ScriptCapitalR]"]}]}], "\n", "\t", "}"}], "]"}]}]}], "\n", 
      "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"returns", " ", "the", " ", "initial", " ", "position"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\[Delta]", " ", "is", " ", "a", " ", "constant", " ", "which", " ", 
       "in", " ", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{",", 
          RowBox[{"+", 
           RowBox[{",", 
            RowBox[{"+", 
             RowBox[{",", "+"}]}]}]}]}]}], ")"}], " ", "signature", " ", "is",
        " ", "0", " ", "for", " ", "light"}], "-", 
      RowBox[{"like", " ", "particles", " ", 
       RowBox[{"(", "photons", ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "for", " ", "others"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cf", ".", " ", "1607.05767", ".", " ", "Since"}], " ", "we", 
       " ", "only", " ", "work", " ", "with", " ", "photons", " ", "for", " ",
        "now", " ", "we", " ", "use", " ", "\[Delta]"}], "=", "0"}]}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"GetBoyerLindquistInitialValues", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pos_Symbol", ",", " ", "waveVector_Symbol", ",", " ", 
        "affineParam0_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", " ", "\[Gamma]", ",", " ", 
        RowBox[{"covMetric", " ", "=", " ", 
         RowBox[{"GetMetric", "[", "]"}]}], ",", " ", "xForSum", ",", " ", 
        "kForSum", ",", " ", 
        RowBox[{"\[Delta]", "=", "0"}], ",", " ", 
        RowBox[{"t", "=", "$t"}], ",", " ", 
        RowBox[{"r", "=", "$r"}], ",", " ", 
        RowBox[{"\[Theta]", "=", "$\[Theta]"}], ",", " ", 
        RowBox[{"\[Phi]", "=", "$\[Phi]"}]}], "}"}], ",", "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"xForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
       ";", "\n", "\t", 
       RowBox[{"kForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Der", "[", "r", "]"}], ",", 
          RowBox[{"Der", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Der", "[", "\[Phi]", "]"}]}], "}"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
          "time"}], "-", 
         RowBox[{"component", " ", "derivative"}]}], "*)"}], "\n", "\t", 
       RowBox[{"\[Beta]", " ", "=", " ", 
        RowBox[{"-", " ", 
         FractionBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "i"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], 
          RowBox[{"covMetric", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]]}]}], ";", "\n", "\t", 
       RowBox[{"\[Gamma]", " ", "=", " ", 
        FractionBox[
         RowBox[{"\[Delta]", " ", "-", " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "i"}], ",", 
               RowBox[{"-", "j"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "2", ",", "4"}], "}"}]}], "]"}]}], 
         RowBox[{"covMetric", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "1", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "t"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "2", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "r"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "3", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "\[Theta]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "4", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "\[Phi]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "t", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "r", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "\[Theta]", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "\[Phi]", "]"}]}]}], "\n", "\t", "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Der", "[", "t", "]"}], "\[Rule]", " ", 
              RowBox[{"\[Beta]", " ", "+", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"\[Beta]", "^", "2"}], " ", "+", " ", "\[Gamma]"}], 
                "]"}]}]}], ",", " ", 
             RowBox[{"t", "\[Rule]", "0"}]}], "}"}]}], "/.", 
          RowBox[{
          "SimpleRayTracer`Private`\
GetBoyerLindquistDerivativesToSceenCoordsRule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "/.", 
         RowBox[{
         "SimpleRayTracer`Private`GetBoyerLindquistToSceenCoordsRule", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "]"}]}]}], 
     "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.760420060589633*^9, {3.760420115702449*^9, 3.760420125292972*^9}, {
   3.760420181040132*^9, 3.7604201987245283`*^9}, {3.7604202352973022`*^9, 
   3.760420313809626*^9}, {3.7604203678646183`*^9, 3.7604203691380663`*^9}, {
   3.7604204507517776`*^9, 3.760420561071247*^9}, {3.76042059432302*^9, 
   3.760420752182231*^9}, 3.760420809480749*^9, {3.760420864382139*^9, 
   3.760420891005486*^9}, {3.760421597099193*^9, 3.760421654554014*^9}, 
   3.760421949886793*^9, {3.760422032976903*^9, 3.7604220370598288`*^9}, {
   3.760422095996846*^9, 3.760422097605731*^9}, {3.779280161981073*^9, 
   3.77928018832543*^9}, {3.7792806912960167`*^9, 3.779280731911043*^9}, {
   3.7792809155223494`*^9, 3.7792809693580008`*^9}, {3.779281345042284*^9, 
   3.779281368286545*^9}, 3.779286906768394*^9, 3.811243995551462*^9, {
   3.8112505794441957`*^9, 3.811250580813683*^9}, {3.811316702655076*^9, 
   3.8113167101848497`*^9}, {3.8113167426800528`*^9, 3.81131681434332*^9}, {
   3.811316861032237*^9, 3.8113168614700003`*^9}, {3.811316924488565*^9, 
   3.811316942761928*^9}},ExpressionUUID->"ac8a9e24-e216-404f-bc49-\
8130e98f6ba7"]
}, Closed]],

Cell[CellGroupData[{

Cell["define Kerr coordinate rules", "Subsection",
 CellChangeTimes->{{3.811317010759397*^9, 
  3.811317015807095*^9}},ExpressionUUID->"82ca8588-a091-42b5-813e-\
6385ea0b3f6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "to", " ", "transform", " ", "the", " ", 
     "standard", " ", "Boyer"}], "-", 
    RowBox[{"Lindquist", " ", 
     RowBox[{"(", "BL", ")"}], " ", "coordinates", " ", "of", " ", "the", " ",
      "BH", " ", "into", " ", "horizon"}], "-", 
    RowBox[{"penetrating", " ", "spherical", " ", "ingoing", " ", "Kerr", " ", 
     RowBox[{"(", 
      RowBox[{"Kerr", "-", "Schild"}], ")"}], " ", "coordinates"}]}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"we", " ", "follow", " ", 
    RowBox[{"Eq", ".", " ", 
     RowBox[{"(", 
      RowBox[{"18", "-", "19"}], ")"}]}], " ", "in", " ", "1811.04711"}], 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
     RowBox[{"could", " ", "be", " ", "hard"}], "-", 
     RowBox[{
     "coded", " ", "to", " ", "decrease", " ", "computation", " ", 
      "time"}]}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetKerrToBoyerLindquistCoordsRule", "[", "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"$r", "^", "2"}], " ", "-", " ", 
          RowBox[{"2", " ", "$G0", " ", "$mass", " ", "$r"}], " ", "+", " ", 
          RowBox[{"$spin", "^", "2"}]}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "$r", " ", "and", " ", "$\[Theta]", " ", "remain", " ", 
           "untransformed"}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"form", " ", "from", " ", "literature"}], "*)"}], "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"$v", " ", "\[Rule]", " ", 
           RowBox[{"$t", " ", "+", " ", "$r", " ", "+", " ", 
            RowBox[{"$G0", " ", "$mass", " ", 
             RowBox[{
              InterpretationBox[
               StyleBox["Log",
                ShowAutoStyles->False,
                AutoSpacing->False],
               Log,
               Editable->False], "[", 
              FractionBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox["$G0", "2"], " ", 
                SuperscriptBox["$mass", "2"]}]], "]"}]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["$G0", "2"], " ", 
              SuperscriptBox["$mass", "2"], " ", 
              RowBox[{
               InterpretationBox[
                StyleBox["Log",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                Log,
                Editable->False], "[", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "-", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                   SuperscriptBox["$spin", "2"]}]]}], 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "+", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                   SuperscriptBox["$spin", "2"]}]]}]], "]"}]}], 
             SqrtBox[
              RowBox[{
               RowBox[{
                SuperscriptBox["$G0", "2"], " ", 
                SuperscriptBox["$mass", "2"]}], "-", 
               SuperscriptBox["$spin", "2"]}]]]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Der", "[", "$v", "]"}], " ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"Der", "[", "$t", "]"}], " ", "+", " ", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["$r", "2"], "+", 
               SuperscriptBox["$spin", "2"]}], 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
               "+", 
               SuperscriptBox["$r", "2"], "+", 
               SuperscriptBox["$spin", "2"]}]], 
             RowBox[{"Der", "[", "$r", "]"}]}]}]}], ",", "\n", "\t\t", 
          RowBox[{"$\[Chi]", " ", "\[Rule]", " ", 
           RowBox[{"$\[Phi]", " ", "+", " ", 
            RowBox[{
             FractionBox["$spin", 
              RowBox[{"2", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"$G0", "^", "2"}], 
                  RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                 RowBox[{"$spin", "^", "2"}]}], "]"}]}]], 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "+", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}], 
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "-", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}]], 
              "]"}]}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Der", "[", "$\[Chi]", "]"}], " ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"Der", "[", "$\[Phi]", "]"}], " ", "+", " ", 
            RowBox[{
             FractionBox["$spin", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
               "+", 
               SuperscriptBox["$r", "2"], "+", 
               SuperscriptBox["$spin", "2"]}]], 
             RowBox[{"Der", "[", "$r", "]"}]}]}]}]}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"self", "-", 
           RowBox[{"determined", " ", "form"}]}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"$v", " ", "\[Rule]", " ", 
            RowBox[{"$t", " ", "+", "$r", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["$G0", "2"], " ", 
               SuperscriptBox["$mass", "2"], " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]], "+", 
             RowBox[{"$G0", " ", "$mass", " ", 
              RowBox[{"Log", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], "]"}]}]}]}], ",", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "$v", "]"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"Der", "[", "$t", "]"}], " ", "+", " ", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}]], 
              RowBox[{"Der", "[", "$r", "]"}]}]}]}], ",", "\n", "\t\t", 
           RowBox[{"$\[Chi]", " ", "\[Rule]", " ", 
            RowBox[{"$\[Phi]", " ", "+", 
             FractionBox[
              RowBox[{"$spin", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]]}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "$\[Chi]", "]"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"Der", "[", "$\[Phi]", "]"}], " ", "+", " ", 
             RowBox[{
              FractionBox["$spin", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}]], 
              RowBox[{"Der", "[", "$r", "]"}]}]}]}]}], "*)"}], "\n", "\t", 
         "}"}], "]"}]}], "\n", "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetBoyerLindquistToKerrCoordsRule", "[", "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"$r", "^", "2"}], " ", "-", " ", 
          RowBox[{"2", " ", "$G0", " ", "$mass", " ", "$r"}], " ", "+", " ", 
          RowBox[{"$spin", "^", "2"}]}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "$r", " ", "and", " ", "$\[Theta]", " ", "remain", " ", 
           "untransformed"}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"form", " ", "from", " ", "literature"}], "*)"}], "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"$t", " ", "\[Rule]", " ", 
           RowBox[{"$v", " ", "-", " ", 
            RowBox[{"(", 
             RowBox[{"$r", "+", 
              RowBox[{"$G0", " ", "$mass", " ", 
               RowBox[{
                InterpretationBox[
                 StyleBox["Log",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 Log,
                 Editable->False], "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                  "+", 
                  SuperscriptBox["$r", "2"], "+", 
                  SuperscriptBox["$spin", "2"]}], 
                 RowBox[{"4", " ", 
                  SuperscriptBox["$G0", "2"], " ", 
                  SuperscriptBox["$mass", "2"]}]], "]"}]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["$G0", "2"], " ", 
                SuperscriptBox["$mass", "2"], " ", 
                RowBox[{
                 InterpretationBox[
                  StyleBox["Log",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  Log,
                  Editable->False], "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "-", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                    SuperscriptBox["$spin", "2"]}]]}], 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                    SuperscriptBox["$spin", "2"]}]]}]], "]"}]}], 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["$G0", "2"], " ", 
                  SuperscriptBox["$mass", "2"]}], "-", 
                 SuperscriptBox["$spin", "2"]}]]]}], ")"}]}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"$\[Phi]", " ", "\[Rule]", " ", 
           RowBox[{"$\[Chi]", " ", "-", " ", 
            RowBox[{
             FractionBox["$spin", 
              RowBox[{"2", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"$G0", "^", "2"}], 
                  RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                 RowBox[{"$spin", "^", "2"}]}], "]"}]}]], 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "+", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}], 
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "-", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}]], 
              "]"}]}]}]}]}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"self", "-", 
           RowBox[{"determined", " ", "form"}]}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"$t", " ", "\[Rule]", " ", 
            RowBox[{"$v", " ", "-", "$r", "-", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["$G0", "2"], " ", 
               SuperscriptBox["$mass", "2"], " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]], "-", 
             RowBox[{"$G0", " ", "$mass", " ", 
              RowBox[{"Log", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], "]"}]}]}]}], ",", "\n", 
           "\t\t", 
           RowBox[{"$\[Phi]", " ", "\[Rule]", " ", 
            RowBox[{"$\[Chi]", " ", "-", 
             FractionBox[
              RowBox[{"$spin", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]]}]}]}], "*)"}], "\n", "\t", 
         "}"}], "]"}]}], "\n", "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "there", " ", "might", " ", "be", " ", "a", " ", "more", " ", "clever", 
      " ", "choice", " ", "than", " ", "t"}], "=", "0"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GetKerrInitialValues", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pos_Symbol", ",", " ", "waveVector_Symbol", ",", " ", 
        "affineParam0_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", " ", "\[Gamma]", ",", " ", 
        RowBox[{"covMetric", " ", "=", " ", 
         RowBox[{"GetMetric", "[", "]"}]}], ",", " ", "xForSum", ",", " ", 
        "kForSum", ",", " ", 
        RowBox[{"\[Delta]", "=", "0"}], ",", " ", 
        RowBox[{"t", "=", "$t"}], ",", " ", 
        RowBox[{"r", "=", "$r"}], ",", " ", 
        RowBox[{"\[Theta]", "=", "$\[Theta]"}], ",", " ", 
        RowBox[{"\[Phi]", "=", "$\[Phi]"}], ",", " ", 
        RowBox[{"v", "=", "$v"}], ",", " ", 
        RowBox[{"\[Chi]", "=", "$\[Chi]"}]}], "}"}], ",", "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"xForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
       ";", "\n", "\t", 
       RowBox[{"kForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Der", "[", "r", "]"}], ",", 
          RowBox[{"Der", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Der", "[", "\[Phi]", "]"}]}], "}"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
          "time"}], "-", 
         RowBox[{"component", " ", "derivative"}]}], "*)"}], "\n", "\t", 
       RowBox[{"\[Beta]", " ", "=", " ", 
        RowBox[{"-", " ", 
         FractionBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "i"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], 
          RowBox[{"covMetric", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]]}]}], ";", "\n", "\t", 
       RowBox[{"\[Gamma]", " ", "=", " ", 
        FractionBox[
         RowBox[{"\[Delta]", " ", "-", " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "i"}], ",", 
               RowBox[{"-", "j"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "2", ",", "4"}], "}"}]}], "]"}]}], 
         RowBox[{"covMetric", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "1", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "v"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "2", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "r"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "3", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "\[Theta]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "4", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "\[Chi]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"\[Beta]", " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"\[Beta]", "^", "2"}], " ", "+", " ", "\[Gamma]"}], 
                 "]"}]}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"Der", "[", "r", "]"}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"Der", "[", "\[Theta]", "]"}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"Der", "[", "\[Chi]", "]"}]}]}], "\n", "\t", "}"}], "/.", 
            RowBox[{
            "SimpleRayTracer`Private`GetKerrToBoyerLindquistCoordsRule", "[", 
             "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"t", "\[Rule]", "0"}], "}"}]}], "/.", 
          RowBox[{
          
          "SimpleRayTracer`Private`\
GetBoyerLindquistDerivativesToSceenCoordsRule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "/.", 
         RowBox[{
         "SimpleRayTracer`Private`GetBoyerLindquistToSceenCoordsRule", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "]"}]}]}], 
     "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.760420060589633*^9, {3.760420115702449*^9, 3.760420125292972*^9}, {
   3.760420181040132*^9, 3.7604201987245283`*^9}, {3.7604202352973022`*^9, 
   3.760420313809626*^9}, {3.7604203678646183`*^9, 3.7604203691380663`*^9}, {
   3.7604204507517776`*^9, 3.760420561071247*^9}, {3.76042059432302*^9, 
   3.760420752182231*^9}, 3.760420809480749*^9, {3.760420864382139*^9, 
   3.760420891005486*^9}, {3.760421597099193*^9, 3.760421654554014*^9}, 
   3.760421949886793*^9, {3.760422032976903*^9, 3.7604220370598288`*^9}, {
   3.760422095996846*^9, 3.760422097605731*^9}, {3.779280161981073*^9, 
   3.77928018832543*^9}, {3.7792806912960167`*^9, 3.779280731911043*^9}, {
   3.7792809155223494`*^9, 3.7792809693580008`*^9}, {3.779281345042284*^9, 
   3.779281368286545*^9}, 3.779286906768394*^9, {3.811243867163438*^9, 
   3.811243905691111*^9}, {3.8112439408276453`*^9, 3.811243983110197*^9}, {
   3.811244022893416*^9, 3.811244032366387*^9}, {3.8112440727912273`*^9, 
   3.811244076719442*^9}, {3.8112441098962793`*^9, 3.81124413771926*^9}, {
   3.8112441704238777`*^9, 3.811244232616623*^9}, {3.811244273940709*^9, 
   3.8112443013218117`*^9}, {3.811244577143551*^9, 3.8112445796396637`*^9}, {
   3.811244622655759*^9, 3.811244671537238*^9}, 3.811245172986884*^9, {
   3.81124520400557*^9, 3.811245239815096*^9}, {3.811245296085711*^9, 
   3.811245305726946*^9}, {3.8112453658305607`*^9, 3.811245427122321*^9}, {
   3.8112463041795893`*^9, 3.811246305739472*^9}, {3.811246432653578*^9, 
   3.811246520740513*^9}, {3.811248701198209*^9, 3.811248727680135*^9}, {
   3.811249377951004*^9, 3.811249418239758*^9}, {3.811249781730497*^9, 
   3.811249783351654*^9}, {3.811249967174179*^9, 3.811249968781177*^9}, {
   3.811253511046977*^9, 3.8112535515326967`*^9}, {3.811253586070023*^9, 
   3.811253588073522*^9}, {3.81125364833119*^9, 3.8112536946044817`*^9}, {
   3.811254429029883*^9, 3.811254435627125*^9}, {3.811254506741282*^9, 
   3.8112545445984697`*^9}, {3.811254628345429*^9, 3.8112546695477533`*^9}, {
   3.81125470738721*^9, 3.811254759321761*^9}, {3.811254826282053*^9, 
   3.8112548425225782`*^9}, {3.811254895166461*^9, 3.811254960632812*^9}, {
   3.811305214447448*^9, 3.811305257971135*^9}, {3.811316659400197*^9, 
   3.811316691876234*^9}, {3.811316964437409*^9, 3.811316973770969*^9}, {
   3.811317453509388*^9, 3.811317522524303*^9}, {3.8113175548849993`*^9, 
   3.8113175722916594`*^9}, {3.811317607181836*^9, 3.8113176110296783`*^9}, 
   3.8113213277080317`*^9, {3.811321496151876*^9, 3.811321498395211*^9}, 
   3.811321732614086*^9, {3.811322764499069*^9, 3.811322772165862*^9}, {
   3.8120100809273863`*^9, 3.81201026735877*^9}, {3.8120103750735483`*^9, 
   3.812010393496214*^9}, {3.8122630704937553`*^9, 
   3.812263079520999*^9}},ExpressionUUID->"438f4348-4a98-4200-8903-\
da2323779d72"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s NDSolve routine"
}], "Section",
 CellChangeTimes->{{3.7792874843306723`*^9, 
  3.779287497368887*^9}},ExpressionUUID->"8c068908-f456-4f2b-9e29-\
09342dbd7a6f"],

Cell[CellGroupData[{

Cell["get a single trajectory", "Subsection",
 CellChangeTimes->{{3.7792860700341053`*^9, 
  3.779286076247108*^9}},ExpressionUUID->"e148aa6f-5514-4ec2-914b-\
dc3452671ca4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{"check", " ", "whether", " ", "a"}]}], "=", 
    RowBox[{
    "0", " ", "in", " ", "GetBoyerLindquistInitialValues", " ", "is", " ", 
     "an", " ", "ok", " ", "coordinate", " ", "choice", " ", "for", " ", 
     "any", " ", "metric"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "could", " ", "implement", " ", "check", " ", "that", " ", "metric", " ", 
     "contains", " ", "no", " ", "symbols", " ", "except", " ", "for", " ", 
     "coordinates", " ", "and", " ", "those", " ", "specified", " ", "in", 
     " ", "paramRules"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GetSingleLightRay", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GetSingleLightRayBL", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GetSingleLightRayKerr", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"GetSingleLightRay", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"GetSingleLightRayBL", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"GetSingleLightRayKerr", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetSingleLightRay", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xScreen_", ",", "yScreen_"}], "}"}], ",", "paramRules_List", 
       ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{
       "Print", "[", 
        "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_} and/or \
{xScreen_,yScreen_} not recognized as infinite precision numbers. \nPlease \
use rational input only as this improves the employed numerical methods. \n\
You can use Rationalize[input_,precision_]] where precision is the desired \
precision, e.g., 10^-100, to rationalize your numerical input.\>\"", "\n", 
        "\t", "]"}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GetSingleLightRay", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
        RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
      "paramRules_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{"Switch", "[", "\n", "\t\t", 
       RowBox[{"(*", "condition", "*)"}], "\n", "\t\t", 
       RowBox[{"WhichCoords", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"option", " ", "1"}], "*)"}], "\n", "\t\t", "BoyerLindquist",
         ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"GetSingleLightRayBL", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "paramRules", 
           ",", " ", "opts"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"option", " ", "2"}], "*)"}], "\n", "\t\t", "Kerr", ",", 
        "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"GetSingleLightRayKerr", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "paramRules", 
           ",", " ", "opts"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"default", " ", "other"}], "*)"}], "\n", "\t\t", "_", ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "Null", "]"}]}]}], "\t\t", "\n", "\t", 
       "]"}]}], "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.7792861070259457`*^9, 3.779286110611876*^9}, {
   3.779286310804563*^9, 3.779286314178377*^9}, {3.779286369760902*^9, 
   3.7792864046919928`*^9}, {3.7792864854800053`*^9, 3.779286529356661*^9}, {
   3.7792866438006153`*^9, 3.779286782285572*^9}, {3.779286974988172*^9, 
   3.779287049072961*^9}, {3.7792870966777697`*^9, 3.779287136205611*^9}, {
   3.7792872109708138`*^9, 3.7792873630325813`*^9}, {3.7792877027889547`*^9, 
   3.779287749964785*^9}, {3.779287813226694*^9, 3.77928785287257*^9}, {
   3.779287900625046*^9, 3.779287901188466*^9}, {3.779288105787228*^9, 
   3.779288119164147*^9}, {3.779288192300836*^9, 3.779288229211392*^9}, 
   3.7792882719653387`*^9, 3.7792888544801407`*^9, {3.77928893217876*^9, 
   3.779288934414097*^9}, {3.779288975252907*^9, 3.779289018607559*^9}, {
   3.779289055360734*^9, 3.779289057079339*^9}, {3.779289349190362*^9, 
   3.779289533472496*^9}, {3.779289574027647*^9, 3.7792896199687357`*^9}, {
   3.7792897881940403`*^9, 3.779289796182816*^9}, {3.779289867248068*^9, 
   3.779289868351954*^9}, {3.779289972192288*^9, 3.7792899760131397`*^9}, {
   3.779290018081846*^9, 3.779290027777256*^9}, {3.7792900777285767`*^9, 
   3.779290082471772*^9}, {3.7792902213482924`*^9, 3.77929027428638*^9}, 
   3.779290333578706*^9, {3.779290391350244*^9, 3.779290439702179*^9}, {
   3.7792905163824663`*^9, 3.77929053278405*^9}, {3.779290583114183*^9, 
   3.779290698688517*^9}, 3.7792907428047533`*^9, {3.779290775261815*^9, 
   3.779290811707424*^9}, {3.779427401506205*^9, 3.779427405680725*^9}, {
   3.779427498876009*^9, 3.7794275047147512`*^9}, {3.779439036099802*^9, 
   3.779439039991008*^9}, {3.7795145266314573`*^9, 3.77951452675163*^9}, {
   3.779515427342874*^9, 3.779515440023245*^9}, {3.79611785766726*^9, 
   3.796117857701445*^9}, {3.796144037900635*^9, 3.796144057001607*^9}, {
   3.7961441467282877`*^9, 3.796144163169611*^9}, {3.7961442463488207`*^9, 
   3.796144251306642*^9}, {3.7961443623132877`*^9, 3.79614437253141*^9}, {
   3.796146322953437*^9, 3.796146323127735*^9}, {3.796146396765353*^9, 
   3.7961464000223923`*^9}, {3.796147828864008*^9, 3.7961478289597197`*^9}, {
   3.796147897023831*^9, 3.796147897082684*^9}, {3.796148051285351*^9, 
   3.79614805331666*^9}, {3.796148310895978*^9, 3.7961483113458633`*^9}, {
   3.797700230535343*^9, 3.7977002311270123`*^9}, {3.7977008175839987`*^9, 
   3.797700817698118*^9}, {3.7977009257933702`*^9, 3.7977009309899387`*^9}, {
   3.797749355240024*^9, 3.797749355313033*^9}, {3.797754141986363*^9, 
   3.7977542075998096`*^9}, {3.797755199416485*^9, 3.797755225627524*^9}, {
   3.7978721279610033`*^9, 3.797872128254849*^9}, {3.7978724636571712`*^9, 
   3.797872472320848*^9}, {3.7978728229099283`*^9, 3.797872823236163*^9}, {
   3.797952054424643*^9, 3.797952088215592*^9}, {3.804567795875079*^9, 
   3.804567808117188*^9}, {3.80457006869761*^9, 3.804570106631714*^9}, {
   3.804570192963544*^9, 3.80457020254522*^9}, {3.8045702388456497`*^9, 
   3.804570269245551*^9}, {3.804570338771515*^9, 3.804570370183777*^9}, 
   3.8045704202453814`*^9, {3.804571238813974*^9, 3.804571483230579*^9}, {
   3.8045715510202312`*^9, 3.804571556049128*^9}, {3.808559558529582*^9, 
   3.808559558646867*^9}, {3.8085595957186193`*^9, 3.808559596270252*^9}, {
   3.808559729249123*^9, 3.8085597322784157`*^9}, {3.808559804892127*^9, 
   3.8085599175276937`*^9}, {3.808560508594569*^9, 3.808560732306959*^9}, {
   3.808566475687881*^9, 3.80856647686771*^9}, 3.80856652411518*^9, {
   3.8085674925505123`*^9, 3.8085674929637547`*^9}, {3.80856868497191*^9, 
   3.808568691006752*^9}, 3.808568722321179*^9, {3.808655204782296*^9, 
   3.808655205919058*^9}, {3.8111707513052483`*^9, 3.811170753838484*^9}, {
   3.8111707849162188`*^9, 3.8111708301582603`*^9}, {3.811171266199429*^9, 
   3.81117127058258*^9}, {3.811171652829363*^9, 3.8111716607902*^9}, {
   3.8112427077331877`*^9, 3.811242836112541*^9}, {3.8112429024885693`*^9, 
   3.811243197108479*^9}, {3.811243373001837*^9, 3.8112434396313353`*^9}, {
   3.811243489217575*^9, 3.81124352477687*^9}, {3.811243588748807*^9, 
   3.8112435977386837`*^9}, {3.811243664589202*^9, 3.811243671307602*^9}, {
   3.81963338855263*^9, 
   3.819633394880972*^9}},ExpressionUUID->"6ddbb78e-24a6-49c4-8f1f-\
1b7642c1cf6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSingleLightRayBL", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rCam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
       RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
     "paramRules_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"return", " ", "=", " ", "None"}], ",", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"workingPrecision", " ", "=", " ", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ","}], 
        "*)"}], "\n", "\t\t", 
       RowBox[{"inits", " ", "=", " ", 
        RowBox[{
         RowBox[{"GetBoyerLindquistInitialValues", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], "]"}],
          "/.", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"paramRules", ",", 
           RowBox[{"10", "^", 
            RowBox[{"-", "100"}]}]}], "]"}]}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"odes", " ", "=", " ", 
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"GetNullGeodesic1stOrderODE", "[", 
            RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"$t", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$r", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Theta]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Phi]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
            "}"}]}], "/.", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"paramRules", ",", 
            RowBox[{"10", "^", 
             RowBox[{"-", "100"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{"\[Lambda]Max", "=", " ", 
        RowBox[{"3", "rCam"}]}]}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"return", " ", "=", " ", 
       RowBox[{"(*", 
        RowBox[{"Check", "["}], "*)"}], "\n", "\t\t", 
       RowBox[{"Catch", "[", 
        RowBox[{"NDSolve", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"odes", ",", " ", "inits"}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Method", " ", "\[Rule]", " ", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{"\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ">", 
                 
                 RowBox[{"rCam", "*", 
                  RowBox[{"11", "/", "10"}]}]}], ",", "\n", "\t\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], ",", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"2", ",", "2"}], "]"}]}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Phi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], ">", 
                   RowBox[{"10", "^", "2"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"(", 
                    FractionBox["workingPrecision", "10"], ")"}], "*)"}], ",",
                   "\n", "\t\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Phi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", 
               "\t\t\t\t", "}"}]}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<trajectory escapes: at \[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the radial coordinate has surpassed the radial \
camera distance\>\""}], "]"}], ";", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"Throw", "[", 
                   RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}], 
                 ")"}], "\n", "\t\t\t\t\t", ",", "\n", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"TrueQ", "[", 
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                    "]"}], "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into Killing horizon: at \
\[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\< the 1/\!\(\*SuperscriptBox[\(g\), \(rr\)]\) has \
surpassed 10^\>\"", ",", "2", 
                    RowBox[{"(*", 
                    RowBox[{"N", "[", 
                    FractionBox["workingPrecision", "10"], "]"}], "*)"}], 
                    ",", "\"\< (chosen at rather random value). \n\t\t\t\t\t\t\
If the event and Killing horizon differ, the user may pass on a \
horizon-condition $r($\[Theta]) via the option HorizonCondition->___.\n\t\t\t\
\t\t\tAlso, note that very extreme spacetimes may have FALSELY been \
interpreted as a Killing horizon.\n\t\t\t\t\t\tSimilarly, if the MaxStepSize \
is too large horizons may have not been detected.\>\""}], "]"}], ";"}], " ", 
                   "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into user defined horizon condition: \
at \[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\<. Note that if the MaxStepSize is too large horizons \
may have not been detected. If in doubt, please check decreased MaxStepSize \
and ensure convergence.\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], ";", "\n",
                  "\t\t\t\t\t", 
                 RowBox[{"Throw", "[", 
                  RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}]}],
                "\n", "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", "}"}]}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Options", "[", "NDSolve", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}], 
                "]"}]}]}], "]"}], "]"}]}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"WorkingPrecision", "\[Rule]", "workingPrecision"}], ",", 
           " ", 
           RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "*)"}], "\n", "\t\t",
          "]"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{",", "\n", "\t\t", "None"}], "\n", "\t", "]"}], "*)"}], ";", 
      "\n", "\t", 
      RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811242781772443*^9, 3.811242787486335*^9}, {
   3.811246150005961*^9, 3.8112461640515747`*^9}, {3.8112463237097*^9, 
   3.81124632566973*^9}, {3.811246801244444*^9, 3.811246831973741*^9}, 
   3.8112468683849487`*^9, {3.811248961814536*^9, 3.81124897418289*^9}, {
   3.8113217773814096`*^9, 3.811321778404992*^9}, {3.811321870113841*^9, 
   3.811321874412033*^9}, 3.811322004410767*^9, {3.811322143781279*^9, 
   3.811322147071867*^9}, {3.812014439039405*^9, 3.812014448331991*^9}, {
   3.812014497110386*^9, 3.812014511031086*^9}, {3.812014604663294*^9, 
   3.8120146053694897`*^9}, {3.812016367044675*^9, 3.8120163671726637`*^9}, {
   3.812016456588681*^9, 3.812016457087833*^9}, 3.812016561936966*^9, {
   3.819445442147438*^9, 3.81944549062615*^9}, {3.819650025996196*^9, 
   3.8196500331465273`*^9}, {3.8196500941494102`*^9, 3.819650100986086*^9}, {
   3.819650349216599*^9, 3.819650350144067*^9}, {3.8196505264380703`*^9, 
   3.819650533473382*^9}, {3.8196506614799557`*^9, 3.81965067169071*^9}, 
   3.819651086118328*^9, {3.81965208034859*^9, 3.819652080414714*^9}, {
   3.819717679732692*^9, 3.8197177245020237`*^9}, {3.819717760614078*^9, 
   3.819717761991723*^9}},ExpressionUUID->"d4149ce8-7f84-411d-8be8-\
232693dd88a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSingleLightRayKerr", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rCam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
       RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
     "paramRules_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"return", " ", "=", " ", "None"}], ",", "\n", "\t\t", 
       RowBox[{"inits", " ", "=", " ", 
        RowBox[{
         RowBox[{"GetKerrInitialValues", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], "]"}],
          "/.", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"paramRules", ",", 
           RowBox[{"10", "^", 
            RowBox[{"-", "100"}]}]}], "]"}]}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"odes", " ", "=", " ", 
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"GetNullGeodesic1stOrderODE", "[", 
            RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"$v", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$r", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Theta]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Chi]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
            "}"}]}], "/.", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"paramRules", ",", 
            RowBox[{"10", "^", 
             RowBox[{"-", "100"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{"\[Lambda]Max", "=", " ", 
        RowBox[{"3", "rCam"}]}]}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"return", " ", "=", " ", 
       RowBox[{"(*", 
        RowBox[{"Check", "["}], "*)"}], "\n", "\t\t", 
       RowBox[{"Catch", "[", 
        RowBox[{"NDSolve", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"odes", ",", " ", "inits"}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Method", " ", "\[Rule]", " ", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{"\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ">", 
                 
                 RowBox[{"rCam", "*", 
                  RowBox[{"11", "/", "10"}]}]}], ",", "\n", "\t\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], ",", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"2", ",", "2"}], "]"}]}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], ">", 
                   RowBox[{"10", "^", "2"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"(", 
                    FractionBox["workingPrecision", "10"], ")"}], "*)"}], ",",
                   "\n", "\t\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", 
               "\t\t\t\t", "}"}]}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<trajectory escapes: at \[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the radial coordinate has surpassed the radial \
camera distance\>\""}], "]"}], ";", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"Throw", "[", 
                   RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}], 
                 ")"}], "\n", "\t\t\t\t\t", ",", "\n", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"TrueQ", "[", 
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                    "]"}], "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into Killing horizon: at \
\[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\< the 1/\!\(\*SuperscriptBox[\(g\), \(rr\)]\) has \
surpassed 10^\>\"", ",", "2", 
                    RowBox[{"(*", 
                    RowBox[{"N", "[", 
                    FractionBox["workingPrecision", "10"], "]"}], "*)"}], 
                    ",", "\"\< (chosen at rather random value). \n\t\t\t\t\t\t\
If the event and Killing horizon differ, the user may pass on a \
horizon-condition $r($\[Theta]) via the option HorizonCondition->___.\n\t\t\t\
\t\t\tAlso, note that very extreme spacetimes may have FALSELY been \
interpreted as a Killing horizon.\n\t\t\t\t\t\tSimilarly, if the MaxStepSize \
is too large horizons may have not been detected.\>\""}], "]"}], ";"}], " ", 
                   "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into user defined horizon condition: \
at \[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\<. Note that if the MaxStepSize is too large horizons \
may have not been detected. If in doubt, please check decreased MaxStepSize \
and ensure convergence.\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], ";", "\n",
                  "\t\t\t\t\t", 
                 RowBox[{"Throw", "[", 
                  RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}]}],
                "\n", "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", "}"}]}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Options", "[", "NDSolve", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}], 
                "]"}]}]}], "]"}], "]"}]}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"MaxStepSize", "\[Rule]", "1*^-2"}], ",", " ", 
           RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "*)"}], "\n", "\t\t",
          "]"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{",", "\n", "\t\t", "None"}], "\n", "\t", "]"}], "*)"}], ";", 
      "\n", "\t", 
      RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811243220511651*^9, 3.811243238803875*^9}, {
   3.811243612321782*^9, 3.81124362582587*^9}, {3.811246542859982*^9, 
   3.811246551206018*^9}, {3.811246599790957*^9, 3.8112466034144287`*^9}, {
   3.8112468384679813`*^9, 3.8112468403403397`*^9}, 3.811246879800641*^9, {
   3.811248940494213*^9, 3.8112489538641853`*^9}, {3.8113217846696253`*^9, 
   3.8113217993263702`*^9}, {3.8113218802259293`*^9, 3.811321883708218*^9}, {
   3.8113220595470533`*^9, 3.8113220798220778`*^9}, {3.811322134061405*^9, 
   3.8113221387276783`*^9}, {3.812016566015325*^9, 3.812016569510213*^9}, {
   3.8120182249439793`*^9, 3.812018225064212*^9}, 3.812019218549193*^9, {
   3.818912244220147*^9, 3.818912375712989*^9}, {3.8194394438689127`*^9, 
   3.819439460407794*^9}, {3.819439565835413*^9, 3.8194395683738956`*^9}, {
   3.8194396288706703`*^9, 3.819439664892231*^9}, 3.819439855488998*^9, {
   3.8194399019355383`*^9, 3.819439904946129*^9}, {3.81943999254438*^9, 
   3.819439997792186*^9}, {3.81944029934295*^9, 3.8194402994392757`*^9}, {
   3.819440369119047*^9, 3.819440400777129*^9}, 3.819440440105249*^9, {
   3.819440513822402*^9, 3.819440553787685*^9}, {3.819440668568556*^9, 
   3.8194406991125813`*^9}, {3.819440744739683*^9, 3.8194407748757143`*^9}, {
   3.819440890023161*^9, 3.819440900453109*^9}, {3.819441019270093*^9, 
   3.8194410276065493`*^9}, 3.819441174020059*^9, {3.819441386209837*^9, 
   3.819441425954102*^9}, {3.819476976109548*^9, 3.819476976186627*^9}, {
   3.819633554605693*^9, 3.819633655604856*^9}, {3.8196465089810038`*^9, 
   3.819646683246389*^9}, {3.819646773146585*^9, 3.819646783176256*^9}, {
   3.819646847580925*^9, 3.819647075620536*^9}, 3.81965033812006*^9, 
   3.819650685694874*^9, {3.8196508342602043`*^9, 3.8196508502942133`*^9}, {
   3.8196509031245213`*^9, 3.8196509157753973`*^9}, {3.8196509681530037`*^9, 
   3.819650972872119*^9}, {3.819651009090054*^9, 3.819651025551753*^9}, {
   3.8196510733866777`*^9, 3.819651075037464*^9}, {3.81965206534407*^9, 
   3.819652069300321*^9}, {3.819695805194529*^9, 
   3.81969580744942*^9}},ExpressionUUID->"1cdb77bb-ebb3-452f-bcd0-\
0e0681beb89d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotSingleTrajectory", "Subsection",
 CellChangeTimes->{
  3.811242211289876*^9},ExpressionUUID->"95513782-c6f1-4db8-b0f2-\
61badf0735fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TrajectoryQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrajectoryQ", "[", 
     RowBox[{"{", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "PlotSingleTrajectory", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Options", "[", "ParametricPlot3D", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"PlotHorizon", "\[Rule]", "False"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotSingleTrajectory", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "TrajectoryQ"}], ",", " ", "paramRules_List", ",", 
      " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
       "plot", ",", "\n", "\t\t", "plotRangeVal", ",", "\n", "\t\t", 
        "horizonCondition", ",", "\n", "\t\t", "xCartesian", ",", 
        "yCartesian", ",", "zCartesian"}], "\n", "\t", "}"}], ",", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "determine", " ", "a", " ", "useful", " ", "plot", " ", "range", " ", 
        "unless", " ", "user", " ", "has", " ", "passed", " ", "their", " ", 
        "own"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "PlotRange", "]"}], "===", 
          "Automatic"}], "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<plot range obtained by doubling the radial distance at which \
angular coordinate \[Theta] changes most rapidly: use PlotRange option to set \
own plot range.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"plotRangeVal", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "/.", 
             "sol"}], "/.", 
            RowBox[{"Last", "[", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"NMaximize", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "/.",
                     "sol"}], ",", "\[Lambda]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", ",", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                  "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", "->", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                  "}"}]}], "}"}]}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"plotRangeVal", " ", "=", " ", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}], 
             "plotRangeVal"}], "]"}]}], ";"}], "\n", "\t\t", ",", "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"plotRangeVal", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ";"}]}], "\n", 
        "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "create", " ", "main", " ", "plot", " ", "of", " ", "trajectory"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"plot", " ", "=", " ", 
        RowBox[{"ParametricPlot3D", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ConvertBoyerLindquistToCartesian", "[", 
               RowBox[{"{", 
                RowBox[{"$r", ",", "$\[Theta]", ",", "$\[Phi]"}], "}"}], 
               "]"}], "//.", 
              RowBox[{"Switch", "[", "\n", "\t\t\t\t", 
               RowBox[{
               "WhichCoords", ",", "\n", "\t\t\t\t", "BoyerLindquist", ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"$t", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"$r", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"$\[Theta]", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"$\[Phi]", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                  "}"}], ",", "\n", "\t\t\t\t", "Kerr", ",", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"GetBoyerLindquistToKerrCoordsRule", "[", "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                    "}"}]}], "]"}], ",", "\n", "\t\t\t\t", "_", ",", 
                RowBox[{
                 RowBox[{
                 "Print", "[", 
                  "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\n", "\t\t\t", 
               "]"}]}], "/.", "paramRules"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"sol", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], ",", "\n", "\t\t",
           "opts", ",", "\n", "\t\t", 
          RowBox[{"PlotRange", "\[Rule]", "plotRangeVal"}], ",", "\n", "\t\t", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", " ", 
          RowBox[{"PlotPoints", "\[Rule]", "5000"}], ",", "\n", "\t\t", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
            "}"}]}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "16", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], 
            "}"}]}], ",", " ", 
          RowBox[{"BoxStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Thick"}], "}"}], "]"}]}]}], "\n", "\t", 
         "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "plot", " ", "horizon", " ", "if", " ", "user", " ", "wants", " ", 
         "to"}], "*)"}], "\n", "\t", 
       RowBox[{"Switch", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"OptionValue", "[", "PlotHorizon", "]"}], "\n", "\t\t", ",", 
         "\n", "\t\t", "False", "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{"None", ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
         "_Graphics3D", "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"plot", " ", "=", " ", 
           RowBox[{"Show", "[", "\n", "\t\t\t", 
            RowBox[{"plot", ",", " ", "\n", "\t\t\t", 
             RowBox[{"OptionValue", "[", "PlotHorizon", "]"}]}], "\n", "\t\t",
             "]"}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", "True", "\n", 
         "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "PrintTemporary", "[", 
           "\"\<PlotHorizon: horizon is determined numerically using 500 \
points at random angles to approximate a surface solving \
1/\!\(\*SubscriptBox[\(g\), \(tt\)]\)==0 (might not be the generic horizon). \
You can change the number of points via PlotHorizon->numberOfPoints.\>\"", 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{
          "PrintTemporary", "[", 
           "\"\<Alternatively, you can pass the horizon as a Graphics3D \
object, or predetermine the horizon via \
sol=NumericalHorizonSurfacePlot3D[paramRules_List, numberOfPoints_] and pass \
the result via PlotHorizon->sol.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"plot", " ", "=", " ", 
           RowBox[{"Show", "[", "\n", "\t\t\t", 
            RowBox[{"plot", ",", " ", "\n", "\t\t\t", 
             RowBox[{
             "SimpleRayTracer`Private`NumericalHorizonSurfacePlot3D", "[", 
              RowBox[{"paramRules", ",", " ", "500"}], "]"}]}], "\n", "\t\t", 
            "]"}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", "_Integer", "\n",
          "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<PlotHorizon: horizon is determined numerically using \>\"", "<>", 
            RowBox[{"ToString", "@", 
             RowBox[{"OptionValue", "[", "PlotHorizon", "]"}]}], "<>", 
            "\"\< points at random angles to approximate a surface solving 1/\
\!\(\*SubscriptBox[\(g\), \(tt\)]\)==0 (might not be the generic \
horizon).\>\""}], "]"}], ";", "\n", "\t\t", 
          RowBox[{
          "PrintTemporary", "[", 
           "\"\<Alternatively, you can pass the horizon as a Graphics3D \
object, or predetermine the horizon via \
sol=NumericalHorizonSurfacePlot3D[paramRules_List, numberOfPoints_] and pass \
the result via PlotHorizon->sol.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"plot", " ", "=", " ", 
           RowBox[{"Show", "[", "\n", "\t\t\t", 
            RowBox[{"plot", ",", " ", "\n", "\t\t\t", 
             RowBox[{
             "SimpleRayTracer`Private`NumericalHorizonSurfacePlot3D", "[", 
              RowBox[{"paramRules", ",", " ", 
               RowBox[{"OptionValue", "[", "PlotHorizon", "]"}]}], "]"}]}], 
            "\n", "\t\t", "]"}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
         "___", "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
         "Print", "[", 
          "\"\<PlotHorizon: no proper option value given. Please use True, \
False, an integer number of numerical horizon plot points, or a Graphics3D \
object\>\"", "]"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"Return", "@", "plot"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotSingleTrajectory", "[", 
     RowBox[{"sol_", ",", " ", "paramRules_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
      "Print", "[", 
       "\"\<Looks like you input value for 'sol' is not a trajectory as \
generated by GetSingleLightRay[].\nPlease use the latter to generate a \
trajectory before attempting to plot.\>\"", "]"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"NumericalHorizonSurfacePlot3D", "[", 
   RowBox[{"paramRules_List", ",", " ", "numberOfPoints_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"guess", "  ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"$\[Theta]", "\[Rule]", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", 
          RowBox[{"$\[Phi]", "\[Rule]", "\[Pi]"}], ",", 
          RowBox[{"$r", "\[Rule]", 
           RowBox[{"Max", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "0.01", "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"$r", "/.", "#"}], ")"}], "&"}], "/@", 
               RowBox[{"Quiet", "@", 
                RowBox[{"NSolve", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "==", "0"}], ")"}], "/.",
                     "paramRules"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$\[Theta]", "->", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                    RowBox[{"$\[Phi]", "\[Rule]", 
                    RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}], ",", "$r", ",", 
                  "Reals"}], "]"}]}]}]}], "]"}], "]"}]}]}], "}"}], "//", 
        "N"}]}], ",", "\n", "\t\t", "discreteHorizonData", ",", "\n", "\t\t", 
      "return", ",", "\n", "\t\t", 
      RowBox[{"outermostGuess", " ", "=", " ", "100"}], ",", "\n", "\t\t", 
      RowBox[{"r", "=", "$r"}], ",", " ", 
      RowBox[{"\[Theta]", "=", "$\[Theta]"}], ",", " ", 
      RowBox[{"\[Phi]", "=", "$\[Phi]"}], ",", " ", "aaa"}], "\n", "\t", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Print", "@", "guess"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"DynamicModule", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"counter", "=", "0"}], ",", "\n", "\t\t\t", 
         RowBox[{"starttime", " ", "=", " ", 
          RowBox[{"AbsoluteTime", "[", "]"}]}]}], "\n", "\t\t", "}"}], ",", 
       "\n", "\t", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "PrintTemporary", "[", 
         "\"\<determining plot points for numerical horizon ... \>\"", "]"}], 
        ";", "\n", "\t\t", 
        RowBox[{"PrintTemporary", "[", 
         RowBox[{
         "\"\<estimated remaining time for evaluation: \>\"", ",", " ", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", "starttime", "]"}], ",", 
             RowBox[{"DateList", "[", 
              RowBox[{"starttime", "+", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                    "starttime"}], ")"}], "counter"], "*", 
                 RowBox[{"(", 
                  RowBox[{"numberOfPoints", " ", "-", " ", "counter"}], 
                  ")"}]}], ")"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", ",", 
               "\"\<Second\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";", "\n", 
        "\n", "\t\t", 
        RowBox[{"discreteHorizonData", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"#", ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"counter", "=", 
               RowBox[{"counter", "+", "1"}]}], ";", "\n", "\t\t\t\t", 
              RowBox[{"FindRoot", "[", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "/.", "paramRules"}], "/.", 
                    RowBox[{"$r", "\[Rule]", "aaa"}]}], "]"}], "/.", "#"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"aaa", ",", 
                  RowBox[{"guess", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
                  "outermostGuess"}], "}"}]}], "\n", "\t\t\t\t", "]"}]}]}], 
            "\n", "\t\t\t", "]"}], "&"}], "/@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "\[Rule]", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Pi]"}], "}"}], "]"}]}], ",", " ", 
              RowBox[{"\[Phi]", "\[Rule]", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"count", ",", "numberOfPoints"}], "}"}]}], "]"}]}]}], 
        ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
     RowBox[{"discreteHorizonData", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"aaa", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"aaa", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"aaa", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], "/.", "#"}], 
         ")"}], "&"}], "/@", "discreteHorizonData"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"return", " ", "=", " ", 
      RowBox[{"ListSurfacePlot3D", "[", 
       RowBox[{"discreteHorizonData", ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Black", "]"}]}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.759744101264596*^9, 3.759744109021751*^9}, {
   3.759744267094967*^9, 3.7597444262509193`*^9}, 3.759744659655658*^9, {
   3.759744695719781*^9, 3.7597447088531*^9}, {3.759744940009554*^9, 
   3.7597449460724287`*^9}, 3.759745059552495*^9, {3.759745106987706*^9, 
   3.759745140195506*^9}, {3.759745186716322*^9, 3.759745209837511*^9}, {
   3.759745259977487*^9, 3.75974526374895*^9}, {3.759745353968231*^9, 
   3.759745451043634*^9}, {3.759745500655208*^9, 3.759745508262939*^9}, 
   3.75974576034006*^9, {3.7597458127936993`*^9, 3.759745862382462*^9}, {
   3.75974590375031*^9, 3.759745903987946*^9}, {3.759745954644106*^9, 
   3.759745955721263*^9}, {3.760427320520371*^9, 3.760427385040226*^9}, {
   3.760427446509407*^9, 3.760427454295616*^9}, {3.760427484706399*^9, 
   3.760427741852337*^9}, {3.760427780674172*^9, 3.7604278190229073`*^9}, {
   3.760427974643867*^9, 3.760428106270808*^9}, {3.760428142107361*^9, 
   3.760428292624468*^9}, {3.760428338834928*^9, 3.760428400040382*^9}, {
   3.7604285769446697`*^9, 3.760428613041987*^9}, {3.760439023499901*^9, 
   3.760439250508668*^9}, {3.760439327749177*^9, 3.760439383323697*^9}, {
   3.7604398334699697`*^9, 3.760439839568098*^9}, {3.760440234261757*^9, 
   3.760440480178734*^9}, {3.7604420364493303`*^9, 3.7604421006523046`*^9}, {
   3.779288391660858*^9, 3.779288473498417*^9}, {3.7792885317737627`*^9, 
   3.779288605192141*^9}, {3.779288642744487*^9, 3.779288644548414*^9}, {
   3.779288961050674*^9, 3.779288961409335*^9}, {3.7792895884896097`*^9, 
   3.779289591240315*^9}, 3.779290475533759*^9, {3.779290554904663*^9, 
   3.779290555074301*^9}, {3.779290849758795*^9, 3.779290849986067*^9}, 
   3.779368731106758*^9, {3.7793687680277576`*^9, 3.779368848792696*^9}, {
   3.779369153728345*^9, 3.779369273868162*^9}, {3.7793694292730083`*^9, 
   3.779369436047365*^9}, 3.7793695091847258`*^9, {3.779369623846203*^9, 
   3.7793696514069366`*^9}, {3.779369683086999*^9, 3.7793697839270277`*^9}, {
   3.779369843652112*^9, 3.779370075903488*^9}, {3.7793701202688227`*^9, 
   3.779370154021222*^9}, {3.779370274606264*^9, 3.7793702834078007`*^9}, 
   3.77937034359875*^9, {3.779370429784585*^9, 3.779370475793282*^9}, {
   3.779370535702813*^9, 3.7793705931568832`*^9}, {3.77937077419071*^9, 
   3.7793707807527943`*^9}, {3.7793712775418787`*^9, 3.7793712796008463`*^9}, 
   3.7793731168286543`*^9, {3.779374694399295*^9, 3.7793748231457577`*^9}, {
   3.779375058855494*^9, 3.7793750643924503`*^9}, {3.779375396372168*^9, 
   3.779375460313096*^9}, {3.7793755007536*^9, 3.779375681485063*^9}, 
   3.779375736901847*^9, {3.779375789657154*^9, 3.779375830359783*^9}, 
   3.7793758802834253`*^9, {3.779375915764032*^9, 3.779375983192946*^9}, {
   3.779376035700231*^9, 3.7793760546020737`*^9}, {3.7793760956648912`*^9, 
   3.7793761314977293`*^9}, {3.7793761985183477`*^9, 3.779376199254426*^9}, {
   3.779376250817072*^9, 3.779376252574012*^9}, {3.7793762979043617`*^9, 
   3.779376304954384*^9}, {3.779376354447267*^9, 3.779376354604063*^9}, {
   3.779376386978204*^9, 3.779376393170664*^9}, 3.7794390438114843`*^9, {
   3.779439181057022*^9, 3.779439194500341*^9}, {3.779439681504156*^9, 
   3.7794397283444023`*^9}, {3.7795151246950207`*^9, 3.779515133345016*^9}, {
   3.77953281141479*^9, 3.779533059677617*^9}, {3.779533252033264*^9, 
   3.779533344783854*^9}, {3.7795334220441103`*^9, 3.7795334527273083`*^9}, {
   3.779533500607532*^9, 3.779533505822057*^9}, 3.7795335597367573`*^9, {
   3.779533596190959*^9, 3.779533638279377*^9}, 3.779533693908189*^9, {
   3.779533762303644*^9, 3.779533826879662*^9}, {3.7795338840252867`*^9, 
   3.7795338862878933`*^9}, {3.77953404240477*^9, 3.779534057080441*^9}, {
   3.779534098776208*^9, 3.779534123111322*^9}, {3.7795343712671137`*^9, 
   3.779534375919653*^9}, {3.779534476247015*^9, 3.779534511389699*^9}, {
   3.779534735790213*^9, 3.7795347489331303`*^9}, {3.779534822395434*^9, 
   3.7795350096979647`*^9}, {3.7795350438090477`*^9, 3.779535420744944*^9}, {
   3.779535512073263*^9, 3.779535595928171*^9}, {3.779535676843813*^9, 
   3.779535679920232*^9}, {3.779535751759555*^9, 3.779535757724416*^9}, {
   3.7795358442783737`*^9, 3.7795358754153214`*^9}, {3.779535968871601*^9, 
   3.779536123608189*^9}, {3.7795362846686163`*^9, 3.7795364645397663`*^9}, {
   3.779536594792487*^9, 3.779536643326157*^9}, 3.779536683386372*^9, {
   3.779536721204906*^9, 3.779536721903181*^9}, {3.77953683126691*^9, 
   3.779536842740855*^9}, {3.779536886077523*^9, 3.779536892611083*^9}, {
   3.789452627519835*^9, 3.789452634089108*^9}, {3.7894527623754387`*^9, 
   3.789452780114943*^9}, 3.789452841989017*^9, {3.78945293179173*^9, 
   3.7894529384781313`*^9}, {3.804571629136142*^9, 3.8045716557397623`*^9}, {
   3.804571799943461*^9, 3.804571818896736*^9}, {3.804571974413169*^9, 
   3.804572114126556*^9}, {3.8045721597833357`*^9, 3.804572166047477*^9}, {
   3.8045772586987963`*^9, 3.804577329524228*^9}, 3.8112486650308847`*^9, {
   3.811248835409995*^9, 3.811248867288196*^9}, {3.8112490013083887`*^9, 
   3.811249191931329*^9}, {3.8112493611088247`*^9, 3.8112493660439577`*^9}, {
   3.811249528425476*^9, 3.811249530751042*^9}, 3.8112512409037237`*^9, {
   3.81125397603469*^9, 3.81125400758972*^9}, 3.811254052945273*^9, {
   3.8113253665382*^9, 3.811325367418247*^9}, {3.8113254806274977`*^9, 
   3.811325511618719*^9}, {3.811325609533092*^9, 3.811325618935156*^9}, {
   3.819713095452237*^9, 3.819713099071018*^9}, {3.8197140537515707`*^9, 
   3.819714072417954*^9}, {3.8197193471569767`*^9, 
   3.819719347740264*^9}},ExpressionUUID->"15fb3f9b-9e2c-49d1-a4a9-\
7b0bdb1033ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["CheckConstantsOfMotionAlongRay", "Subsection",
 CellChangeTimes->{{3.811242188038979*^9, 
  3.811242196394052*^9}},ExpressionUUID->"5d8cd046-dc96-4043-ae62-\
5ed8ef726352"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CheckConstantsOfMotionAlongRay", "[", 
   RowBox[{"ray_", ",", "paramRules_", ",", "angMomVar_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\[Lambda]Min", "=", " ", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"ray", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"\[Lambda]Max", "=", " ", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"ray", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"energy", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GetMetric", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "j"}]}], "]"}], 
                RowBox[{
                 RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/.", 
            "paramRules"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"Trig", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$t", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$r", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Theta]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Phi]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
          "}"}]}], "/.", "ray"}]}], ",", "\n", "\t\t", 
      RowBox[{"angularMomentum", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetMetric", "[", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", 
                 RowBox[{"-", "j"}]}], "]"}], 
               RowBox[{
                RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
            "paramRules"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"Trig", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$t", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$r", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Theta]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Phi]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
          "}"}]}], "/.", "ray"}]}], ",", "\n", "\t\t", 
      RowBox[{"carterConst", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"+", " ", 
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"GetMetric", "[", 
                    RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "j"}]}], "]"}], 
                   RowBox[{
                    RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "^", 
                "2"}]}], "\n", "\t\t\t\t\t", "+", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], 
                 "]"}], "^", "2"}], 
               RowBox[{"(", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", " ", 
                   RowBox[{"angMomVar", "^", "2"}]}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"GetMetric", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "j"}]}], "]"}], 
                    RowBox[{
                    RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "^", 
                    "2"}], ")"}]}], "\n", "\t\t\t\t\t\t", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"GetMetric", "[", 
                    RowBox[{
                    RowBox[{"-", "4"}], ",", 
                    RowBox[{"-", "j"}]}], "]"}], 
                    RowBox[{
                    RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "^", 
                    "2"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], 
                    "]"}], "^", "2"}], ")"}]}]}], "\n", "\t\t\t\t\t\t", 
                ")"}]}]}], "\n", "\t\t\t\t", ")"}], "/.", "paramRules"}], ",",
            "\n", "\t\t\t\t", 
           RowBox[{"Trig", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$t", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$r", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Theta]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Phi]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
          "}"}]}], "/.", "ray"}]}], ",", "\n", "\t\t", "relativeErrorEnergy", 
      ",", " ", "relativeErrorAngularMomentum", ",", " ", 
      "relativeErrorCarterConstant"}], "\n", "\t", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"relativeErrorEnergy", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"energy", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}], "]"}]}]}],
           ")"}], " ", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"energy", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}], " ", 
          "-", " ", 
          RowBox[{"(", "energy", ")"}]}], 
         RowBox[{"(", 
          RowBox[{"energy", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}]]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"relativeErrorAngularMomentum", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angularMomentum", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}], "]"}]}]}],
           ")"}], " ", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"angularMomentum", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}], " ", 
          "-", " ", 
          RowBox[{"(", "angularMomentum", ")"}]}], 
         RowBox[{"(", 
          RowBox[{"angularMomentum", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}]]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"relativeErrorCarterConstant", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"carterConst", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}], "]"}]}]}],
           ")"}], " ", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"carterConst", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}], " ", 
          "-", " ", 
          RowBox[{"(", "carterConst", ")"}]}], 
         RowBox[{"(", 
          RowBox[{"carterConst", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}]]}], 
       "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"relativeErrorEnergy", " ", "===", " ", "0"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<energy seems to vanish identically\>\"", "]"}], 
        ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "@", 
         RowBox[{"LogPlot", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "energy", "]"}], ",", 
              RowBox[{"Abs", "[", "relativeErrorEnergy", "]"}]}], "}"}], 
            "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
            "}"}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t\t", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<energy\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<affine parameter \[Lambda]\>\"", ",", 
              "\"\<energy [relative error]\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "\n", "\t\t",
           "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"relativeErrorAngularMomentum", " ", "===", " ", "0"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<angular momentum seems to vanish identically\>\"", 
         "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "@", 
         RowBox[{"LogPlot", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "angularMomentum", "]"}], ",", 
              RowBox[{"Abs", "[", "relativeErrorAngularMomentum", "]"}]}], 
             "}"}], "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
            "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t\t", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<angular momentum\>\""}], ",", 
           
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<affine parameter \[Lambda]\>\"", ",", " ", 
              "\"\<momentum [relative error]\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "\n", "\t\t",
           "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"relativeErrorCarterConstant", " ", "===", " ", "0"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Carter constant seems to vanish identically\>\"", 
         "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "@", 
         RowBox[{"LogPlot", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "carterConst", "]"}], ",", 
              RowBox[{"Abs", "[", "relativeErrorCarterConstant", "]"}]}], 
             "}"}], "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
            "}"}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t\t", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Carter constant\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<affine parameter \[Lambda]\>\"", ",", 
              "\"\<Carter [relative error]\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "\n", "\t\t",
           "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<maximalErrors\>\"", ",", " ", 
         RowBox[{"NMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "relativeErrorEnergy", "]"}], ",", 
             RowBox[{
             "\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], "}"}],
            ",", "\[Lambda]"}], "]"}], ",", " ", 
         RowBox[{"NMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "relativeErrorAngularMomentum", "]"}], ",", 
             RowBox[{
             "\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], "}"}],
            ",", "\[Lambda]"}], "]"}], ",", " ", 
         RowBox[{"NMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "relativeErrorCarterConstant", "]"}], ",", 
             RowBox[{
             "\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], "}"}],
            ",", "\[Lambda]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"\"\<finalTimeErrors\>\"", ",", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"relativeErrorEnergy", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Max"}], "}"}]}], "]"}], 
         ",", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"relativeErrorAngularMomentum", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Max"}], "}"}]}], "]"}], 
         ",", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"relativeErrorCarterConstant", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Max"}], "}"}]}], 
          "]"}]}], "}"}]}], "\n", "\t", "}"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwdzltIkwEAxfGvRBQHNuZA0y5uC0MTaz5UzGgpReCl3NpDjlKZFwY1L8VE
i9Qi1tSQDIU9GGF+2c1EWIsaCOrspQZRMCeEIQUTURPNhUWNvv/3cPi9nANH
Y2s0120XBGG/FDQsea0vzq8UPr6vr8KbA28vYVpT4Com/oy0osWs78Q7nzZc
mH4wdg9dc9G2UUm1WOHG8tD8E3z3vPUpGtvFN9ieusuPjpzgNP69fjuMJzzm
BczpsUWwWju1gse8a/EvJc2WkmQcOd0va/3cpsI5T8pe7NA6s1FlUuXjw5as
IoxfNp7FwQ8fLRjZobso74Rw5hg/xToN6hu2DqChoDYXe0ydR/Fw/o0CrDz3
qAZdv/bZ0Teyx4ldju5rqJy0ulFdXyWb/cXp80oq/v2WnTiZF0CHQQzibLlN
+0oy60+SEb8vBItQaY/VYsfwmsMneWbblVvY0HiqDwdXW/pxc1X/AGePmGTH
88bm8bKr96vcLx5aRyGk28AfCfYYpmWkJ7+WHIq7ewgDyveyFxb9hTipUJTi
Um9cDZZNPKtHXVl3M85odE7cGm1yoyfzWxeOpxQPY8Zui4iV0WY/ehOrZ/D4
ztIQqt3RMP4HD5lBRQ==
  
  "],ExpressionUUID->"b5995626-7a0f-4f00-bfd5-1c9be582e1e1"]
}, Closed]],

Cell[CellGroupData[{

Cell["interval bisection to determine boundary", "Subsection",
 CellChangeTimes->{{3.779377625391596*^9, 
  3.779377646844839*^9}},ExpressionUUID->"efca2671-e0b9-40bb-9632-\
0f2ce7a0e30e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "BoundaryBisection", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintTemporaryOption", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}]}], "}"}], ",", 
      RowBox[{"Options", "[", "NDSolve", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryBisection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xInnerScreen_", "?", "RationalQ"}], ",", 
          RowBox[{"yInnerScreen_", "?", "RationalQ"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xOuterScreen_", "?", "RationalQ"}], ",", 
          RowBox[{"yOuterScreen_", "?", "RationalQ"}]}], "}"}]}], "}"}], ",", 
      " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
       "inits", ",", " ", "xScreen", ",", " ", "yScreen", ",", "odes", ",", 
        "\n", "\t\t", 
        RowBox[{"\[Lambda]Max", "=", " ", 
         RowBox[{"3", "rCam"}]}], ",", "\n", "\t\t", "result", ",", " ", 
        "return"}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"Switch", "[", "\n", "\t\t", 
        RowBox[{"(*", "condition", "*)"}], "\n", "\t\t", 
        RowBox[{"WhichCoords", ",", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"option", " ", "1"}], "*)"}], "\n", "\t\t", 
         "BoyerLindquist", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"odes", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"GetNullGeodesic1stOrderODE", "[", 
              RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$t", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Phi]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"inits", " ", "=", " ", 
           RowBox[{
            RowBox[{"GetBoyerLindquistInitialValues", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "0"}], "]"}], 
            "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",", 
         "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"option", " ", "2"}], "*)"}], "\n", "\t\t", "Kerr", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"odes", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"GetNullGeodesic1stOrderODE", "[", 
              RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$v", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Chi]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"inits", " ", "=", " ", 
           RowBox[{
            RowBox[{"GetKerrInitialValues", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], 
             "]"}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",", 
         "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"default", " ", "other"}], "*)"}], "\n", "\t\t", "_", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"Return", "[", "Null", "]"}]}]}], "\t\t", "\n", "\t", "]"}],
        ";", "\n", "\t", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
         
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"\"\<boundary bisection in progress ... using \>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{"!", 
               RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], "]"}],
              ",", "\"\<any NDSolve error as indication for a ray falling \
into the horizon\>\"", ",", " ", 
             "\"\<NDSolve errors and/or the user specified HorizonCondition \
as indication for a ray falling into the horizon\>\""}], "]"}]}], "]"}]}], 
        "]"}], ";", "\n", "\t", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"BoundaryBisectionInternal", "[", 
         RowBox[{"odes", ",", " ", "inits", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}], 
          ",", " ", "paramRules", ",", " ", "precisionAim", ",", " ", "opts", 
          ",", " ", 
          RowBox[{"PrintTemporaryOption", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
         "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Or", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xOuterScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yOuterScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
            "<", " ", 
            RowBox[{"2", "*", 
             RowBox[{"precisionAim", "^", "2"}]}]}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xInnerScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yInnerScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
            "<", " ", 
            RowBox[{"2", "*", 
             RowBox[{"precisionAim", "^", "2"}]}]}]}], "\n", "\t\t", "]"}], 
         "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", 
            " ", 
            RowBox[{
            "Print", "[", 
             "\"\<probably no shadow boundary between the two specified \
points.\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", "None"}], ";"}], "\n", "\t\t", ",",
          "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", 
            " ", 
            RowBox[{
            "Print", "[", 
             "\"\<shadow boundary was found within the specified \
interval.\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", "result"}], ";"}]}], "\n", "\t", 
        "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryBisection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",",
       " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
       "Print", "[", 
        "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_} and/or \
{{xInnerScreen_,yInnerScreen_}, {xOuterScreen_,yOuterScreen_}} not recognized \
as infinite precision numbers. \nPlease use rational input only as this \
improves the employed numerical methods. \nYou can use \
Rationalize[input_,precision_]] where precision is the desired precision, \
e.g., 10^-100, to rationalize your numerical input.\>\"", "\n", "\t", "]"}], 
       ";"}]}], "\n", "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "BoundaryBisectionInternal", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Options", "[", "BoundaryBisection", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryBisectionInternal", "::", "HorizonCondition"}], "=", 
    "\"\<Trajectory fell into user-defined horizon.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BoundaryBisectionInternal", "[", 
    RowBox[{"odes_", ",", " ", "inits_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]_", ",", "\[Lambda]Min_", ",", "\[Lambda]Max_"}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"xScreen_", ",", " ", "yScreen_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",", 
     " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"sol", ",", "\n", "\t\t", 
       RowBox[{"stepNumber", " ", "=", " ", "0"}]}], "\n", "\t", "}"}], ",", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PrintTemporary", "[", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], ";"}], 
      "*)"}], "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{
           RowBox[{"\"\<current bisection: x \[Element] [\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "@", "xInnerScreen"}], "]"}], "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "@", "xOuterScreen"}], "]"}], "<>", 
            "\"\<] and y \[Element] [\>\""}], ",", " ", 
           RowBox[{"N", "@", "yInnerScreen"}], ",", " ", "\"\<, \>\"", ",", 
           " ", 
           RowBox[{"N", "@", "yOuterScreen"}], ",", " ", "\"\<].\>\""}], 
          "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "^", "2"}], 
          " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "^", 
           "2"}]}], " ", ">", " ", 
         RowBox[{"precisionAim", "^", "2"}]}], "\n", "\t\t", ",", "\n", 
        "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "@", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{"!", 
               RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], "]"}],
              ",", "\"\<proceed without horizon condition\>\"", ",", " ", 
             "\"\<apply horizon condition\>\"", ",", " ", "\"\<other\>\""}], 
            "]"}]}], ";"}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"sol", " ", "=", " ", 
          RowBox[{"Check", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Catch", "[", 
             RowBox[{"NDSolve", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Join", "[", "\n", "\t\t\t\t\t", 
                RowBox[{"odes", ",", "\n", "\t\t\t\t\t", 
                 RowBox[{"inits", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"xScreen", " ", "\[Rule]", " ", 
                    RowBox[{"xInnerScreen", " ", "+", " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                    "2"]}]}], ",", " ", 
                    RowBox[{"yScreen", " ", "\[Rule]", " ", 
                    RowBox[{"yInnerScreen", " ", "+", " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                    "2"]}]}]}], "}"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n",
                "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
                "}"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"Method", " ", "\[Rule]", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], ",", "Automatic", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], "\n", "\t\t\t\t\t\t", "}"}]}], ",", " ", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "\"\<trajectory fell into user-defined horizon: at \
\[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the user-defined HorizonCondition has been \
numerically detected.\>\""}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                    "\"\<Note that this essentially detects the observers \
image of the user-defined surface 'HorizonCondition'.\>\""}], "\n", 
                    "\t\t\t\t\t\t\t", "]"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    "BoundaryBisectionInternal", "::", "HorizonCondition"}], 
                    "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}],
                     ")"}], "\n", "\t\t\t\t\t\t", "}"}]}]}], "\n", 
                   "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ",", 
               "\n", "\t\t\t\t", 
               RowBox[{"WorkingPrecision", "\[Rule]", 
                RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ",", 
               " ", 
               RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}]}], "\n", 
              "\t\t\t", "]"}], "]"}], ",", "\n", "\t\t\t", "Null"}], "\n", 
           "\t\t", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"PrintTemporary", "@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"sol", "===", "Null"}], "||", 
               RowBox[{
                RowBox[{"Head", "@", "sol"}], "===", "String"}]}], ",", 
              "\"\<fell into\>\"", ",", "\"\<passed \[Infinity]\>\""}], 
             "]"}]}], ";"}], "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sol", "===", "Null"}], "||", 
            RowBox[{
             RowBox[{"Head", "@", "sol"}], "===", "String"}]}], ",", "\n", 
           "\t\t\t", 
           RowBox[{"BoundaryBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}],
              ",", " ", "paramRules", ",", " ", "precisionAim", ",", " ", 
             "opts", ",", " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"BoundaryBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}]}], "}"}], ",", " ", "paramRules", ",", " ",
              "precisionAim", ",", " ", "opts", ",", " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", 
          RowBox[{"{", 
           RowBox[{"xOuterScreen", 
            RowBox[{"(*", 
             RowBox[{"xInnerScreen", " ", "+", " ", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "2"]}], 
             "*)"}], ",", " ", "yOuterScreen"}], 
           RowBox[{"(*", 
            RowBox[{"yInnerScreen", " ", "+", " ", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "2"]}], 
            "*)"}], "}"}], "]"}], "]"}], ",", "\n", "\t\t", "None"}], "\n", 
       "\t", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.762264478284326*^9, 3.7622645714294643`*^9}, {
   3.762264612440357*^9, 3.7622651564800453`*^9}, {3.762265234737225*^9, 
   3.762265235289755*^9}, 3.762265520753099*^9, {3.76226585858959*^9, 
   3.762265890070489*^9}, 3.7622659896436768`*^9, 3.762266027774556*^9, {
   3.762266133411278*^9, 3.762266158358369*^9}, {3.762266219307097*^9, 
   3.762266241947832*^9}, {3.762266285783313*^9, 3.7622663105660133`*^9}, {
   3.7622663420730247`*^9, 3.7622663666122227`*^9}, {3.762266641634967*^9, 
   3.7622667118982477`*^9}, {3.7622668275055437`*^9, 3.762266843507139*^9}, {
   3.762266948582898*^9, 3.762266970946217*^9}, {3.762267255991432*^9, 
   3.762267310033244*^9}, {3.762267551755147*^9, 3.7622675602694397`*^9}, {
   3.762601730426545*^9, 3.7626017305508127`*^9}, {3.762601818729526*^9, 
   3.762601819935824*^9}, {3.762607783443364*^9, 3.762607783586253*^9}, 
   3.762626576930924*^9, {3.762631228489312*^9, 3.7626312921166687`*^9}, {
   3.762631362841811*^9, 3.7626313825025663`*^9}, 3.7626314143477163`*^9, {
   3.762631452239636*^9, 3.762631515984799*^9}, {3.762631548370284*^9, 
   3.7626315486185207`*^9}, {3.762631589013564*^9, 3.762631667102582*^9}, {
   3.762631705381699*^9, 3.762631707653545*^9}, {3.7626317484147053`*^9, 
   3.7626317770839157`*^9}, {3.76263180921074*^9, 3.762631812280842*^9}, {
   3.762631864925859*^9, 3.7626318683159447`*^9}, {3.7626321019931602`*^9, 
   3.762632150880775*^9}, {3.7626322277727213`*^9, 3.762632282340322*^9}, {
   3.762632320760777*^9, 3.762632328006611*^9}, {3.7626323621442347`*^9, 
   3.7626323649966373`*^9}, {3.7626626606881037`*^9, 
   3.7626626660951366`*^9}, {3.762662820455427*^9, 3.7626628217840557`*^9}, {
   3.7626628585118103`*^9, 3.76266293609128*^9}, {3.7626662097880993`*^9, 
   3.76266622145157*^9}, {3.762666255751625*^9, 3.762666273207389*^9}, 
   3.762666315849453*^9, {3.7626665104923687`*^9, 3.762666510890818*^9}, 
   3.762666687640984*^9, {3.7626667184264*^9, 3.762666798285746*^9}, 
   3.7626669772830877`*^9, {3.762667028180292*^9, 3.762667091105297*^9}, {
   3.762667137751093*^9, 3.762667157733101*^9}, {3.762667210370604*^9, 
   3.7626672115349627`*^9}, {3.762667344796444*^9, 3.762667351993372*^9}, {
   3.7626673879988194`*^9, 3.762667411638344*^9}, {3.762667609906641*^9, 
   3.7626676736117*^9}, {3.762667806236433*^9, 3.762667865148437*^9}, {
   3.762667920580346*^9, 3.762667949185178*^9}, {3.762667995205318*^9, 
   3.762667996578601*^9}, {3.762668108702504*^9, 3.76266811748343*^9}, {
   3.762668156180419*^9, 3.762668164880004*^9}, {3.762668199079962*^9, 
   3.7626682073609324`*^9}, {3.762668258961289*^9, 3.7626682827669*^9}, {
   3.762668318509782*^9, 3.762668324142873*^9}, {3.7626683630175257`*^9, 
   3.7626683756710033`*^9}, {3.762668419826619*^9, 3.762668428764001*^9}, {
   3.7626684669837217`*^9, 3.7626684671559668`*^9}, {3.7626685338515873`*^9, 
   3.762668538128339*^9}, {3.7626685999268217`*^9, 3.762668666486958*^9}, {
   3.7626687208852*^9, 3.762668739382001*^9}, {3.762668784626787*^9, 
   3.7626687900489807`*^9}, {3.762668919183055*^9, 3.76266892733505*^9}, {
   3.762668985239419*^9, 3.7626689937210283`*^9}, {3.762669075326058*^9, 
   3.762669078106495*^9}, {3.762669274803514*^9, 3.762669301498617*^9}, {
   3.779377665649514*^9, 3.779377669305029*^9}, {3.779377710603936*^9, 
   3.7793777430197573`*^9}, {3.779415826456152*^9, 3.7794158291165133`*^9}, {
   3.77941589579589*^9, 3.779415986210146*^9}, {3.7794160276783543`*^9, 
   3.779416028942786*^9}, {3.77941613137753*^9, 3.779416178655292*^9}, {
   3.7794162858054953`*^9, 3.7794163592960863`*^9}, {3.779416425903408*^9, 
   3.7794164373693533`*^9}, {3.7794164775689697`*^9, 3.779416487438374*^9}, 
   3.779416743302903*^9, 3.779416819751218*^9, {3.77941687136585*^9, 
   3.779416904845587*^9}, {3.77942104180756*^9, 3.779421042553977*^9}, {
   3.7794211447587833`*^9, 3.779421188717379*^9}, {3.77942122075749*^9, 
   3.77942122928485*^9}, {3.779421276805831*^9, 3.7794213074989223`*^9}, {
   3.7794213525788794`*^9, 3.7794214323260517`*^9}, {3.779421463216646*^9, 
   3.7794218937876053`*^9}, {3.779421958027547*^9, 3.779421965076682*^9}, {
   3.7794220285243807`*^9, 3.779422049489955*^9}, {3.7794222770060177`*^9, 
   3.7794223108167963`*^9}, {3.7794223482199917`*^9, 
   3.7794224099442587`*^9}, {3.779422463090363*^9, 3.77942249685259*^9}, {
   3.7794228748665237`*^9, 3.779422918921805*^9}, {3.779423042789453*^9, 
   3.779423057468137*^9}, {3.7794231306498947`*^9, 3.779423143715757*^9}, {
   3.779423184475849*^9, 3.779423294862706*^9}, {3.7794233425572147`*^9, 
   3.7794233569152327`*^9}, {3.779423422881489*^9, 3.779423489159829*^9}, {
   3.7794236427842817`*^9, 3.779423664872575*^9}, {3.779423707556151*^9, 
   3.779423710073676*^9}, {3.7794304472369127`*^9, 3.77943060735343*^9}, {
   3.779430695910595*^9, 3.779430741149501*^9}, {3.7794308240338917`*^9, 
   3.7794308376082983`*^9}, {3.779430920616456*^9, 3.779430922538332*^9}, {
   3.779434003630227*^9, 3.7794343616141453`*^9}, {3.7794344740801687`*^9, 
   3.779434477177952*^9}, {3.779434534755209*^9, 3.779434567713806*^9}, {
   3.7794346029876623`*^9, 3.779434665926079*^9}, {3.779434813975806*^9, 
   3.779434831120783*^9}, {3.779439047290502*^9, 3.779439048414557*^9}, {
   3.80457231759693*^9, 3.804572334727085*^9}, {3.8045723709137907`*^9, 
   3.8045724326502666`*^9}, {3.8158091161755247`*^9, 3.815809125528517*^9}, {
   3.815809163091724*^9, 3.8158092094125137`*^9}, 3.8158092472666273`*^9, {
   3.815809277845408*^9, 3.815809291679175*^9}, {3.8158094355637627`*^9, 
   3.8158094413483143`*^9}, {3.81580968070788*^9, 3.815809692863934*^9}, {
   3.8158099785188503`*^9, 3.81580998098843*^9}, {3.8176224248932343`*^9, 
   3.817622444236833*^9}, {3.8176226058599777`*^9, 3.8176227570313473`*^9}, {
   3.81762313081721*^9, 3.817623137571168*^9}, {3.8176231757899*^9, 
   3.817623206624297*^9}, {3.817623245391831*^9, 3.817623412811398*^9}, {
   3.817623781104396*^9, 3.817623786475671*^9}, {3.817623925906025*^9, 
   3.817623956263599*^9}, 3.817623997519437*^9, {3.8176240627065496`*^9, 
   3.817624082236129*^9}, {3.8176242316568737`*^9, 3.817624310481474*^9}, {
   3.817624430737088*^9, 3.817624431441848*^9}, {3.817624486948318*^9, 
   3.8176245276893063`*^9}, {3.817624593849927*^9, 3.817624647671858*^9}, {
   3.8176247424160833`*^9, 3.8176247574114237`*^9}, {3.817624815903224*^9, 
   3.8176248331016617`*^9}, {3.817624888202545*^9, 3.817624893938861*^9}, {
   3.817624988351741*^9, 3.817624992988699*^9}, {3.81762509689284*^9, 
   3.817625141115861*^9}, {3.817625177646285*^9, 3.817625206177925*^9}, {
   3.8176254059599733`*^9, 3.817625410951496*^9}, {3.817625650229691*^9, 
   3.817625652479659*^9}, {3.8176257604881973`*^9, 3.817625760746031*^9}, {
   3.81762580565847*^9, 3.81762580590163*^9}, {3.81762603638479*^9, 
   3.817626096906609*^9}, 3.817626131107461*^9, 3.8176293878110657`*^9, {
   3.817629530457847*^9, 3.817629620107368*^9}, {3.817629820254776*^9, 
   3.817629829603567*^9}, {3.8176308197297*^9, 3.817630828086237*^9}, {
   3.817631174895032*^9, 3.817631175551565*^9}, {3.817631448719946*^9, 
   3.817631452165091*^9}, {3.819433813430503*^9, 3.819433814257022*^9}, {
   3.819435152308457*^9, 3.8194352772032537`*^9}, 3.819435338731509*^9, {
   3.8194353850056477`*^9, 3.8194353893191137`*^9}, {3.819435671107695*^9, 
   3.819435683863482*^9}, 3.819435847064063*^9, {3.819436248012967*^9, 
   3.819436264165213*^9}, {3.819436305986123*^9, 3.819436324319208*^9}, {
   3.819436523776743*^9, 3.819436533630352*^9}, {3.8194366077395077`*^9, 
   3.819436620284267*^9}, {3.8194366976785517`*^9, 3.819436698949939*^9}, {
   3.8194367355193453`*^9, 3.8194367648404703`*^9}, {3.819436831315743*^9, 
   3.819436860555125*^9}, {3.8194369340104923`*^9, 3.8194369342948523`*^9}, {
   3.819437003279662*^9, 3.8194370054177837`*^9}, {3.8194370600272923`*^9, 
   3.819437060760879*^9}, {3.8194371376185226`*^9, 3.81943713896012*^9}, {
   3.819437223494967*^9, 3.819437226495181*^9}, {3.8194372634471483`*^9, 
   3.819437267543151*^9}, {3.8194374060385447`*^9, 3.8194374135085506`*^9}, 
   3.819437490269925*^9, {3.823071125909843*^9, 3.823071171747271*^9}, {
   3.823071221389441*^9, 3.8230712472648287`*^9}, {3.823071553580442*^9, 
   3.8230715920815477`*^9}, {3.8230716545978537`*^9, 3.823071661917639*^9}, {
   3.8230876606597853`*^9, 3.8230876692325068`*^9}, {3.823087938116742*^9, 
   3.823087956102886*^9}, {3.823090077643589*^9, 3.823090104931314*^9}, 
   3.823090149080985*^9},ExpressionUUID->"d7abafc7-c197-4eae-afff-\
bfe55954ea86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetParametricShadowBoundary", "]"}], " ", ":=", 
    " ", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}], ",", 
       RowBox[{"Options", "[", "BoundaryBisection", "]"}]}], "]"}]}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetParametricShadowBoundary", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xCenter_", "?", "RationalQ"}], ",", 
        RowBox[{"yCenter_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"radialSweepDistance_", "?", "RationalQ"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Psi]min_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Psi]max_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Psi]stepSize_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      "paramRules_", ",", " ", "precisionAim_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\[Psi]table", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"\[Psi]Val", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Psi]Val", ",", "\[Psi]min", ",", "\[Psi]max", ",", 
             "\[Psi]stepSize"}], "}"}]}], "]"}]}], ",", "\n", "\t\t", 
        "return"}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"DynamicModule", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"counter", "=", "0"}], ",", "\n", "\t\t\t", 
           RowBox[{"starttime", " ", "=", " ", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ",", "\n", "\t\t\t", 
           "printValue1"}], "\n", "\t\t", "}"}], ",", "\n", "\t", "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<boundary bisection in progress ... for image angle \
\[Psi]=\>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"N", "@", "printValue1"}], "]"}]}], "]"}], ";", "\n", 
          "\t\t", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<estimated remaining time for evaluation: \>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", "starttime", "]"}], ",", 
               RowBox[{"DateList", "[", 
                RowBox[{"starttime", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                    "starttime"}], ")"}], "counter"], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "@", "\[Psi]table"}], " ", "-", " ", 
                    "counter"}], ")"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", 
                 ",", "\"\<Second\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";",
           "\n", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"printValue1", "=", "#"}], ";", "\n", "\t\t\t", 
                RowBox[{"counter", " ", "=", " ", 
                 RowBox[{"counter", " ", "+", " ", "1"}]}], ";", "\n", 
                "\t\t\t", "#"}], ",", "\n", "\t\t\t", 
               RowBox[{"BoundaryBisection", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], 
                  "}"}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xCenter", ",", "yCenter"}], "}"}], ",", " ", 
                   RowBox[{"Rationalize", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}], ",", " ", 
                    RowBox[{"yCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}]}], "}"}], ",", "100"}], "]"}], 
                    ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "}"}], ",", " ", "\n", 
                 "\t\t\t\t", "paramRules", ",", " ", "\n", "\t\t\t\t", 
                 "precisionAim", ",", "\n", "\t\t\t\t", 
                 RowBox[{"PrintTemporaryOption", "\[Rule]", "False"}], ",", 
                 "\n", "\t\t\t\t", "opts"}], "\n", "\t\t\t", "]"}]}], "\n", 
              "\t\t", "}"}], "&"}], "/@", "\[Psi]table"}]}], ";"}]}], "\n", 
        "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"return", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", "xCenter"}], 
                  ")"}], "^", "2"}], " ", "+", "  ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", "yCenter"}], 
                  ")"}], "^", "2"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         "return"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetParametricShadowBoundary", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"xCenter_", ",", "yCenter_"}], "}"}], ",", " ", 
     "radialSweepDistance_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Psi]min_", ",", "\[Psi]max_", ",", "\[Psi]stepSize_"}], 
      "}"}], ",", " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_}, \
radialSweepDistance, {xCenter_,yCenter_}, and/or \
{\[Psi]min_,\[Psi]max_,\[Psi]stepSize_} not recognized as infinite precision \
numbers. \nPlease use rational input only as this improves the employed \
numerical methods. \nYou can use Rationalize[input_,precision_]] where \
precision is the desired precision, e.g., 10^-100, to rationalize your \
numerical input.\>\"", "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.779428661874032*^9, 3.779428752099593*^9}, {
   3.779428886685162*^9, 3.779429091601529*^9}, {3.779429135631493*^9, 
   3.779429234186401*^9}, {3.7794292711394663`*^9, 3.7794294540305433`*^9}, {
   3.77942961509375*^9, 3.779429633060935*^9}, {3.779429671647929*^9, 
   3.779429672669039*^9}, {3.779429942328917*^9, 3.779430057165277*^9}, {
   3.7794301393312693`*^9, 3.779430207512785*^9}, {3.7794302911469707`*^9, 
   3.779430292030859*^9}, {3.779430966548071*^9, 3.779430977122168*^9}, {
   3.779431096328026*^9, 3.7794311604731703`*^9}, {3.779431205091792*^9, 
   3.779431398062357*^9}, {3.779431459521824*^9, 3.7794315658295193`*^9}, {
   3.779431618087348*^9, 3.779431765799613*^9}, 3.77943179662923*^9, {
   3.779431909884495*^9, 3.7794319157532043`*^9}, {3.779432660794362*^9, 
   3.779432744910604*^9}, {3.7794390539164867`*^9, 3.779439079489696*^9}, {
   3.804572546549924*^9, 3.804572658048655*^9}, {3.804576650213037*^9, 
   3.804576680601592*^9}, {3.804576774577001*^9, 3.804576816093568*^9}, {
   3.804576852871743*^9, 3.8045769029079447`*^9}, {3.804577052824107*^9, 
   3.8045770582866373`*^9}, {3.804577155555228*^9, 3.8045771564203253`*^9}, {
   3.8176298781582623`*^9, 3.817629925191259*^9}, 3.8176299596525803`*^9, 
   3.8176312507122583`*^9, 3.819438030083851*^9, {3.823089753813869*^9, 
   3.823089787265168*^9}},ExpressionUUID->"2bfd0531-7d83-4123-8d1d-\
f82c9951c3f8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
bisection to determine light rings (equatorial-plane crossings)\
\>", "Subsection",
 CellChangeTimes->{{3.818844167883945*^9, 
  3.8188441835303288`*^9}},ExpressionUUID->"4cf434ca-cbbe-4856-9a15-\
4a409e868410"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "RingBisection", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"PrintTemporaryOption", "\[Rule]", "True"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RingBisection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xInnerScreen_", "?", "RationalQ"}], ",", 
          RowBox[{"yInnerScreen_", "?", "RationalQ"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xOuterScreen_", "?", "RationalQ"}], ",", 
          RowBox[{"yOuterScreen_", "?", "RationalQ"}]}], "}"}]}], "}"}], ",", 
      " ", "paramRules_", ",", " ", "ringNumber_", ",", " ", "precisionAim_", 
      ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
       "inits", ",", " ", "xScreen", ",", " ", "yScreen", ",", "odes", ",", 
        "\n", "\t\t", 
        RowBox[{"\[Lambda]Max", "=", " ", 
         RowBox[{"3", "rCam"}]}], ",", "\n", "\t\t", "result", ",", " ", 
        "return"}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"Switch", "[", "\n", "\t\t", 
        RowBox[{"(*", "condition", "*)"}], "\n", "\t\t", 
        RowBox[{"WhichCoords", ",", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"option", " ", "1"}], "*)"}], "\n", "\t\t", 
         "BoyerLindquist", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"odes", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"GetNullGeodesic1stOrderODE", "[", 
              RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$t", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Phi]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"inits", " ", "=", " ", 
           RowBox[{
            RowBox[{"GetBoyerLindquistInitialValues", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "0"}], "]"}], 
            "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",", 
         "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"option", " ", "2"}], "*)"}], "\n", "\t\t", "Kerr", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"odes", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"GetNullGeodesic1stOrderODE", "[", 
              RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$v", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Chi]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"inits", " ", "=", " ", 
           RowBox[{
            RowBox[{"GetKerrInitialValues", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], 
             "]"}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",", 
         "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"default", " ", "other"}], "*)"}], "\n", "\t\t", "_", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"Return", "[", "Null", "]"}]}]}], "\t\t", "\n", "\t", "]"}],
        ";", "\n", "\t", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
         
         RowBox[{
         "PrintTemporary", "[", 
          "\"\<light ring bisection in progress ... \>\"", "]"}]}], "]"}], 
       ";", "\n", "\t", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"RingBisectionInternal", "[", 
         RowBox[{"odes", ",", " ", "inits", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}], 
          ",", " ", "paramRules", ",", " ", "ringNumber", ",", " ", 
          "precisionAim", ",", " ", "opts", ",", " ", 
          RowBox[{"PrintTemporaryOption", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
         "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Or", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xOuterScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yOuterScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
            "<", " ", 
            RowBox[{"2", "*", 
             RowBox[{"precisionAim", "^", "2"}]}]}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xInnerScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yInnerScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
            "<", " ", 
            RowBox[{"2", "*", 
             RowBox[{"precisionAim", "^", "2"}]}]}]}], "\n", "\t\t", "]"}], 
         "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", 
            " ", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<probably no \>\"", "<>", 
              RowBox[{"ToString", "@", "ringNumber"}], "<>", 
              "\"\<-th light ring between the two specified points.\>\""}], 
             "]"}]}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", "None"}], ";"}], "\n", "\t\t", ",",
          "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", 
            " ", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Light-ring boundary number \>\"", "<>", 
              RowBox[{"ToString", "@", "ringNumber"}], "<>", 
              "\"\< was found within the specified interval.\>\""}], "]"}]}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", "result"}], ";"}]}], "\n", "\t", 
        "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RingBisection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",",
       " ", "paramRules_", ",", " ", "ringNumber_", ",", " ", "precisionAim_",
       ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
       "Print", "[", 
        "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_} and/or \
{{xInnerScreen_,yInnerScreen_}, {xOuterScreen_,yOuterScreen_}} not recognized \
as infinite precision numbers. \nPlease use rational input only as this \
improves the employed numerical methods. \nYou can use \
Rationalize[input_,precision_]] where precision is the desired precision, \
e.g., 10^-100, to rationalize your numerical input.\>\"", "\n", "\t", "]"}], 
       ";"}]}], "\n", "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "RingBisectionInternal", "]"}], " ", ":=", " ", 
    RowBox[{"Options", "[", "RingBisection", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RingBisectionInternal", "::", "HorizonCondition"}], "=", 
    "\"\<Trajectory fell into user-defined horizon.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RingBisectionInternal", "[", 
    RowBox[{"odes_", ",", " ", "inits_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]_", ",", "\[Lambda]Min_", ",", "\[Lambda]Max_"}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"xScreen_", ",", " ", "yScreen_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",", 
     " ", "paramRules_", ",", " ", "ringNumber_", ",", " ", "precisionAim_", 
     ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"sol", ",", "\n", "\t\t", "count"}], "\n", "\t", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"\"\<current bisection: x \[Element] [\>\"", ",", 
           RowBox[{"N", "@", "xInnerScreen"}], ",", "\"\<, \>\"", ",", 
           RowBox[{"N", "@", "xOuterScreen"}], ",", 
           "\"\<] and y \[Element] [\>\"", ",", 
           RowBox[{"N", "@", "yInnerScreen"}], ",", "\"\<, \>\"", ",", 
           RowBox[{"N", "@", "yOuterScreen"}], ",", "\"\<].\>\""}], "]"}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "^", "2"}], 
          " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "^", 
           "2"}]}], " ", ">", " ", 
         RowBox[{"precisionAim", "^", "2"}]}], "\n", "\t\t", ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"-", "2"}]}], ";", "\n", "\t\t", 
         RowBox[{"sol", " ", "=", " ", 
          RowBox[{"NDSolve", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Join", "[", "\n", "\t\t\t\t", 
             RowBox[{"odes", ",", "\n", "\t\t\t\t", 
              RowBox[{"inits", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xScreen", " ", "\[Rule]", " ", 
                  RowBox[{"xInnerScreen", " ", "+", " ", 
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                    "2"]}]}], ",", " ", 
                 RowBox[{"yScreen", " ", "\[Rule]", " ", 
                  RowBox[{"yInnerScreen", " ", "+", " ", 
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                    "2"]}]}]}], "}"}]}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
              RowBox[{
               RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
             "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"Method", " ", "\[Rule]", " ", 
             RowBox[{"{", "\n", "\t\t\t\t", 
              RowBox[{"\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t", 
               RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
                RowBox[{"{", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], 
                    ",", "\[Lambda]"}], "]"}], "\[Equal]", "0"}], ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"$r", "<", "0.5"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}]}], "\n", "\t\t\t\t", "}"}]}], ",", " ", 
               "\n", "\t\t\t\t", 
               RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
                RowBox[{"{", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"count", " ", "=", " ", 
                    RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{"\"\<light-ring count increased to \>\"", ",", 
                    RowBox[{
                    RowBox[{"N", "@", "count"}], "\"\< at radius r=\>\""}], 
                    ",", 
                    RowBox[{"N", "@", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "]"}]}], " ", "]"}], ";"}], ")"}], ",", "\n", 
                  "\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"count", " ", "=", " ", "\[Infinity]"}], ";", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{
                    "PrintTemporary", "[", 
                    "\"\<small radius cutoff hit ... stop integrating and \
increase bisection\>\"", "]"}]}], "]"}], ";", "\n", "\t\t\t\t\t", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}],
                    ")"}]}], "\n", "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", 
              "}"}]}], "\n", "\t\t\t", ",", "\n", "\t\t\t", 
            RowBox[{"WorkingPrecision", "\[Rule]", "30"}], ",", " ", 
            RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "\n", "\t\t", 
           "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"count", "\[GreaterEqual]", "ringNumber"}], ",", "\n", 
           "\t\t\t", 
           RowBox[{"RingBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}],
              ",", " ", "paramRules", ",", " ", "ringNumber", ",", " ", 
             "precisionAim", ",", " ", "opts", ",", " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"RingBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}]}], "}"}], ",", " ", "paramRules", ",", " ",
              "ringNumber", ",", " ", "precisionAim", ",", " ", "opts", ",", 
             " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xInnerScreen", " ", "+", " ", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "2"]}], 
            ",", " ", 
            RowBox[{"yInnerScreen", " ", "+", " ", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "2"]}]}],
            "}"}], "]"}], "]"}], "\n", "\t\t", ",", "\n", "\t\t", "None"}], 
       "\n", "\t", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.762264478284326*^9, 3.7622645714294643`*^9}, {
   3.762264612440357*^9, 3.7622651564800453`*^9}, {3.762265234737225*^9, 
   3.762265235289755*^9}, 3.762265520753099*^9, {3.76226585858959*^9, 
   3.762265890070489*^9}, 3.7622659896436768`*^9, 3.762266027774556*^9, {
   3.762266133411278*^9, 3.762266158358369*^9}, {3.762266219307097*^9, 
   3.762266241947832*^9}, {3.762266285783313*^9, 3.7622663105660133`*^9}, {
   3.7622663420730247`*^9, 3.7622663666122227`*^9}, {3.762266641634967*^9, 
   3.7622667118982477`*^9}, {3.7622668275055437`*^9, 3.762266843507139*^9}, {
   3.762266948582898*^9, 3.762266970946217*^9}, {3.762267255991432*^9, 
   3.762267310033244*^9}, {3.762267551755147*^9, 3.7622675602694397`*^9}, {
   3.762601730426545*^9, 3.7626017305508127`*^9}, {3.762601818729526*^9, 
   3.762601819935824*^9}, {3.762607783443364*^9, 3.762607783586253*^9}, 
   3.762626576930924*^9, {3.762631228489312*^9, 3.7626312921166687`*^9}, {
   3.762631362841811*^9, 3.7626313825025663`*^9}, 3.7626314143477163`*^9, {
   3.762631452239636*^9, 3.762631515984799*^9}, {3.762631548370284*^9, 
   3.7626315486185207`*^9}, {3.762631589013564*^9, 3.762631667102582*^9}, {
   3.762631705381699*^9, 3.762631707653545*^9}, {3.7626317484147053`*^9, 
   3.7626317770839157`*^9}, {3.76263180921074*^9, 3.762631812280842*^9}, {
   3.762631864925859*^9, 3.7626318683159447`*^9}, {3.7626321019931602`*^9, 
   3.762632150880775*^9}, {3.7626322277727213`*^9, 3.762632282340322*^9}, {
   3.762632320760777*^9, 3.762632328006611*^9}, {3.7626323621442347`*^9, 
   3.7626323649966373`*^9}, {3.7626626606881037`*^9, 
   3.7626626660951366`*^9}, {3.762662820455427*^9, 3.7626628217840557`*^9}, {
   3.7626628585118103`*^9, 3.76266293609128*^9}, {3.7626662097880993`*^9, 
   3.76266622145157*^9}, {3.762666255751625*^9, 3.762666273207389*^9}, 
   3.762666315849453*^9, {3.7626665104923687`*^9, 3.762666510890818*^9}, 
   3.762666687640984*^9, {3.7626667184264*^9, 3.762666798285746*^9}, 
   3.7626669772830877`*^9, {3.762667028180292*^9, 3.762667091105297*^9}, {
   3.762667137751093*^9, 3.762667157733101*^9}, {3.762667210370604*^9, 
   3.7626672115349627`*^9}, {3.762667344796444*^9, 3.762667351993372*^9}, {
   3.7626673879988194`*^9, 3.762667411638344*^9}, {3.762667609906641*^9, 
   3.7626676736117*^9}, {3.762667806236433*^9, 3.762667865148437*^9}, {
   3.762667920580346*^9, 3.762667949185178*^9}, {3.762667995205318*^9, 
   3.762667996578601*^9}, {3.762668108702504*^9, 3.76266811748343*^9}, {
   3.762668156180419*^9, 3.762668164880004*^9}, {3.762668199079962*^9, 
   3.7626682073609324`*^9}, {3.762668258961289*^9, 3.7626682827669*^9}, {
   3.762668318509782*^9, 3.762668324142873*^9}, {3.7626683630175257`*^9, 
   3.7626683756710033`*^9}, {3.762668419826619*^9, 3.762668428764001*^9}, {
   3.7626684669837217`*^9, 3.7626684671559668`*^9}, {3.7626685338515873`*^9, 
   3.762668538128339*^9}, {3.7626685999268217`*^9, 3.762668666486958*^9}, {
   3.7626687208852*^9, 3.762668739382001*^9}, {3.762668784626787*^9, 
   3.7626687900489807`*^9}, {3.762668919183055*^9, 3.76266892733505*^9}, {
   3.762668985239419*^9, 3.7626689937210283`*^9}, {3.762669075326058*^9, 
   3.762669078106495*^9}, {3.762669274803514*^9, 3.762669301498617*^9}, {
   3.779377665649514*^9, 3.779377669305029*^9}, {3.779377710603936*^9, 
   3.7793777430197573`*^9}, {3.779415826456152*^9, 3.7794158291165133`*^9}, {
   3.77941589579589*^9, 3.779415986210146*^9}, {3.7794160276783543`*^9, 
   3.779416028942786*^9}, {3.77941613137753*^9, 3.779416178655292*^9}, {
   3.7794162858054953`*^9, 3.7794163592960863`*^9}, {3.779416425903408*^9, 
   3.7794164373693533`*^9}, {3.7794164775689697`*^9, 3.779416487438374*^9}, 
   3.779416743302903*^9, 3.779416819751218*^9, {3.77941687136585*^9, 
   3.779416904845587*^9}, {3.77942104180756*^9, 3.779421042553977*^9}, {
   3.7794211447587833`*^9, 3.779421188717379*^9}, {3.77942122075749*^9, 
   3.77942122928485*^9}, {3.779421276805831*^9, 3.7794213074989223`*^9}, {
   3.7794213525788794`*^9, 3.7794214323260517`*^9}, {3.779421463216646*^9, 
   3.7794218937876053`*^9}, {3.779421958027547*^9, 3.779421965076682*^9}, {
   3.7794220285243807`*^9, 3.779422049489955*^9}, {3.7794222770060177`*^9, 
   3.7794223108167963`*^9}, {3.7794223482199917`*^9, 
   3.7794224099442587`*^9}, {3.779422463090363*^9, 3.77942249685259*^9}, {
   3.7794228748665237`*^9, 3.779422918921805*^9}, {3.779423042789453*^9, 
   3.779423057468137*^9}, {3.7794231306498947`*^9, 3.779423143715757*^9}, {
   3.779423184475849*^9, 3.779423294862706*^9}, {3.7794233425572147`*^9, 
   3.7794233569152327`*^9}, {3.779423422881489*^9, 3.779423489159829*^9}, {
   3.7794236427842817`*^9, 3.779423664872575*^9}, {3.779423707556151*^9, 
   3.779423710073676*^9}, {3.7794304472369127`*^9, 3.77943060735343*^9}, {
   3.779430695910595*^9, 3.779430741149501*^9}, {3.7794308240338917`*^9, 
   3.7794308376082983`*^9}, {3.779430920616456*^9, 3.779430922538332*^9}, {
   3.779434003630227*^9, 3.7794343616141453`*^9}, {3.7794344740801687`*^9, 
   3.779434477177952*^9}, {3.779434534755209*^9, 3.779434567713806*^9}, {
   3.7794346029876623`*^9, 3.779434665926079*^9}, {3.779434813975806*^9, 
   3.779434831120783*^9}, {3.779439047290502*^9, 3.779439048414557*^9}, {
   3.80457231759693*^9, 3.804572334727085*^9}, {3.8045723709137907`*^9, 
   3.8045724326502666`*^9}, {3.8158091161755247`*^9, 3.815809125528517*^9}, {
   3.815809163091724*^9, 3.8158092094125137`*^9}, 3.8158092472666273`*^9, {
   3.815809277845408*^9, 3.815809291679175*^9}, {3.8158094355637627`*^9, 
   3.8158094413483143`*^9}, {3.81580968070788*^9, 3.815809692863934*^9}, {
   3.8158099785188503`*^9, 3.81580998098843*^9}, {3.8176224248932343`*^9, 
   3.817622444236833*^9}, {3.8176226058599777`*^9, 3.8176227570313473`*^9}, {
   3.81762313081721*^9, 3.817623137571168*^9}, {3.8176231757899*^9, 
   3.817623206624297*^9}, {3.817623245391831*^9, 3.817623412811398*^9}, {
   3.817623781104396*^9, 3.817623786475671*^9}, {3.817623925906025*^9, 
   3.817623956263599*^9}, 3.817623997519437*^9, {3.8176240627065496`*^9, 
   3.817624082236129*^9}, {3.8176242316568737`*^9, 3.817624310481474*^9}, {
   3.817624430737088*^9, 3.817624431441848*^9}, {3.817624486948318*^9, 
   3.8176245276893063`*^9}, {3.817624593849927*^9, 3.817624647671858*^9}, {
   3.8176247424160833`*^9, 3.8176247574114237`*^9}, {3.817624815903224*^9, 
   3.8176248331016617`*^9}, {3.817624888202545*^9, 3.817624893938861*^9}, {
   3.817624988351741*^9, 3.817624992988699*^9}, {3.81762509689284*^9, 
   3.817625141115861*^9}, {3.817625177646285*^9, 3.817625206177925*^9}, {
   3.8176254059599733`*^9, 3.817625410951496*^9}, {3.817625650229691*^9, 
   3.817625652479659*^9}, {3.8176257604881973`*^9, 3.817625760746031*^9}, {
   3.81762580565847*^9, 3.81762580590163*^9}, {3.81762603638479*^9, 
   3.817626096906609*^9}, 3.817626131107461*^9, 3.8176293878110657`*^9, {
   3.817629530457847*^9, 3.817629620107368*^9}, {3.817629820254776*^9, 
   3.817629829603567*^9}, {3.8176308197297*^9, 3.817630828086237*^9}, {
   3.817631174895032*^9, 3.817631175551565*^9}, {3.817631448719946*^9, 
   3.817631452165091*^9}, {3.8188442611299458`*^9, 3.8188442723597097`*^9}, {
   3.8188443036749477`*^9, 3.818844356554945*^9}, {3.818844414520097*^9, 
   3.8188444173390093`*^9}, {3.8188444539183693`*^9, 3.818844546125374*^9}, {
   3.818844581628591*^9, 3.818844627656494*^9}, {3.818844700343772*^9, 
   3.8188449969201527`*^9}, {3.818845212335483*^9, 3.818845279687011*^9}, {
   3.818845351574741*^9, 3.8188453591867037`*^9}, {3.8188455029338217`*^9, 
   3.818845506257143*^9}, 3.81884555509201*^9, {3.8188456013088837`*^9, 
   3.8188456239976463`*^9}, 3.818845682375901*^9, {3.818845720168942*^9, 
   3.818845720348606*^9}, {3.818845775005444*^9, 3.818845779494933*^9}, {
   3.818845839910718*^9, 3.8188458708260803`*^9}, {3.81884594717977*^9, 
   3.8188459477077217`*^9}, {3.818846116855351*^9, 3.81884612605018*^9}, 
   3.818846193215582*^9, {3.8188462442535048`*^9, 3.818846246509719*^9}, 
   3.8188463111799603`*^9, {3.818846432521553*^9, 3.818846434116095*^9}, {
   3.8188464693141947`*^9, 3.818846481546784*^9}, {3.818846536730318*^9, 
   3.81884656642415*^9}, {3.818846602950892*^9, 3.818846662428618*^9}, {
   3.8188467267018337`*^9, 3.818846732872571*^9}, {3.818846765356104*^9, 
   3.818846778570858*^9}, 3.8188469188182793`*^9, {3.81884699539568*^9, 
   3.818847010474565*^9}, {3.8188470589915*^9, 3.818847060052648*^9}, {
   3.818847408161113*^9, 3.81884743895529*^9}, {3.818848865700385*^9, 
   3.818848868160227*^9}, {3.818849232705287*^9, 3.818849267618517*^9}, {
   3.81884929817677*^9, 3.818849333335677*^9}, {3.818849491710774*^9, 
   3.818849507012661*^9}, {3.818849558750208*^9, 3.8188495637674627`*^9}, {
   3.818849779002179*^9, 3.818849780905867*^9}, {3.8188499602495613`*^9, 
   3.818849997046144*^9}, {3.81885003081791*^9, 3.818850031845416*^9}, {
   3.8188501270131273`*^9, 3.818850211491929*^9}, 3.81885030881717*^9, {
   3.81885036530515*^9, 3.8188503878806133`*^9}, {3.819432377913095*^9, 
   3.819432398404195*^9}, {3.8196309691508713`*^9, 3.819631020392981*^9}, {
   3.825312551156829*^9, 3.825312551202325*^9}, {3.825312735032632*^9, 
   3.8253127794070463`*^9}, {3.825322018077054*^9, 3.825322018114025*^9}, {
   3.825322432024629*^9, 3.825322459956457*^9}, {3.8253224900477457`*^9, 
   3.8253224901071253`*^9}, {3.825322648024035*^9, 3.825322674349296*^9}, {
   3.825322795919701*^9, 
   3.8253228019299717`*^9}},ExpressionUUID->"830a90d3-3bf8-41d1-95b4-\
f4dc9e535dfe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetParametricLightRingBoundary", "]"}], " ", ":=",
     " ", 
    RowBox[{"{", 
     RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetParametricLightRingBoundary", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xCenter_", "?", "RationalQ"}], ",", 
        RowBox[{"yCenter_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"radialSweepDistance_", "?", "RationalQ"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Psi]min_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Psi]max_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Psi]stepSize_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      "paramRules_", ",", " ", "ringNumber_", ",", " ", "precisionAim_", ",", 
      " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\[Psi]table", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"\[Psi]Val", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Psi]Val", ",", "\[Psi]min", ",", "\[Psi]max", ",", 
             "\[Psi]stepSize"}], "}"}]}], "]"}]}], ",", "\n", "\t\t", 
        "xBoundary", ",", " ", "yBoundary", ",", "\n", "\t\t", "return"}], 
       "\n", "\t", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"DynamicModule", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"counter", "=", "0"}], ",", "\n", "\t\t\t", 
           RowBox[{"starttime", " ", "=", " ", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ",", "\n", "\t\t\t", 
           "printValue1"}], "\n", "\t\t", "}"}], ",", "\n", "\t", "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<light ring bisection (including internal determination of a \
shadow bisection) in progress ... for image angle \[Psi]=\>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"N", "@", "printValue1"}], "]"}]}], "]"}], ";", "\n", 
          "\t\t", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<or in terms of coordinates between (xMin, yMin) = \>\"", ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{"xCenter", ",", "yCenter"}], "}"}], ",", " ", 
            "\"\< and (xMax, yMax) = \>\"", ",", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"N", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xCenter", " ", "+", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "printValue1", "]"}], "*", 
                  "radialSweepDistance"}]}], ",", " ", 
                RowBox[{"yCenter", " ", "+", " ", 
                 RowBox[{
                  RowBox[{"Sin", "[", "printValue1", "]"}], "*", 
                  "radialSweepDistance"}]}]}], "}"}]}], "]"}]}], "]"}], ";", 
          "\n", "\t\t", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<estimated remaining time for evaluation: \>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", "starttime", "]"}], ",", 
               RowBox[{"DateList", "[", 
                RowBox[{"starttime", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                    "starttime"}], ")"}], "counter"], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "@", "\[Psi]table"}], " ", "-", " ", 
                    "counter"}], ")"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", 
                 ",", "\"\<Second\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";",
           "\n", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"printValue1", "=", "#"}], ";", "\n", "\t\t\t", 
                RowBox[{"counter", " ", "=", " ", 
                 RowBox[{"counter", " ", "+", " ", "1"}]}], ";", "\n", 
                "\t\t\t", "#"}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xBoundary", ",", "yBoundary"}], "}"}], " ", "=", 
                " ", 
                RowBox[{"BoundaryBisection", "[", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], 
                   "}"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xCenter", ",", "yCenter"}], "}"}], ",", " ", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}], ",", " ", 
                    RowBox[{"yCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}]}], "}"}], ",", "100"}], "]"}], 
                    ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "}"}], ",", " ", "\n", 
                  "\t\t\t\t", "paramRules", ",", " ", "\n", "\t\t\t\t", 
                  "precisionAim", ",", "\n", "\t\t\t\t", 
                  RowBox[{"PrintTemporaryOption", "\[Rule]", "False"}], ",", 
                  "\n", "\t\t\t\t", "opts"}], "\n", "\t\t\t", "]"}]}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"RingBisection", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], 
                  "}"}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Rationalize", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xBoundary", ",", "yBoundary"}], "}"}], ",", 
                    "1*^-100"}], "]"}], ",", " ", 
                   RowBox[{"Rationalize", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}], ",", " ", 
                    RowBox[{"yCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}]}], "}"}], ",", "100"}], "]"}], 
                    ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "}"}], ",", " ", "\n", 
                 "\t\t\t\t", "paramRules", ",", " ", "\n", "\t\t\t\t", 
                 "ringNumber", ",", "\n", "\t\t\t\t", "precisionAim", ",", 
                 "\n", "\t\t\t\t", 
                 RowBox[{"PrintTemporaryOption", "\[Rule]", "False"}], ",", 
                 "\n", "\t\t\t\t", "opts"}], "\n", "\t\t\t", "]"}]}], "\n", 
              "\t\t", "}"}], "&"}], "/@", "\[Psi]table"}]}], ";"}]}], "\n", 
        "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"return", " ", "=", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"N", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", "xCenter"}], 
                    ")"}], "^", "2"}], " ", "+", "  ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", "yCenter"}], 
                    ")"}], "^", "2"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
           "return"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"N", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}], "-", "xCenter"}], 
                    ")"}], "^", "2"}], " ", "+", "  ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", "yCenter"}], 
                    ")"}], "^", "2"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], "/@", 
           "return"}]}], "\n", "\t", "}"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetParametricLightRingBoundary", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"xCenter_", ",", "yCenter_"}], "}"}], ",", " ", 
     "radialSweepDistance_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Psi]min_", ",", "\[Psi]max_", ",", "\[Psi]stepSize_"}], 
      "}"}], ",", " ", "paramRules_", ",", " ", "ringNumber_", ",", " ", 
     "precisionAim_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_}, \
radialSweepDistance, {xCenter_,yCenter_}, and/or \
{\[Psi]min_,\[Psi]max_,\[Psi]stepSize_} not recognized as infinite precision \
numbers. \nPlease use rational input only as this improves the employed \
numerical methods. \nYou can use Rationalize[input_,precision_]] where \
precision is the desired precision, e.g., 10^-100, to rationalize your \
numerical input.\>\"", "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.779428661874032*^9, 3.779428752099593*^9}, {
   3.779428886685162*^9, 3.779429091601529*^9}, {3.779429135631493*^9, 
   3.779429234186401*^9}, {3.7794292711394663`*^9, 3.7794294540305433`*^9}, {
   3.77942961509375*^9, 3.779429633060935*^9}, {3.779429671647929*^9, 
   3.779429672669039*^9}, {3.779429942328917*^9, 3.779430057165277*^9}, {
   3.7794301393312693`*^9, 3.779430207512785*^9}, {3.7794302911469707`*^9, 
   3.779430292030859*^9}, {3.779430966548071*^9, 3.779430977122168*^9}, {
   3.779431096328026*^9, 3.7794311604731703`*^9}, {3.779431205091792*^9, 
   3.779431398062357*^9}, {3.779431459521824*^9, 3.7794315658295193`*^9}, {
   3.779431618087348*^9, 3.779431765799613*^9}, 3.77943179662923*^9, {
   3.779431909884495*^9, 3.7794319157532043`*^9}, {3.779432660794362*^9, 
   3.779432744910604*^9}, {3.7794390539164867`*^9, 3.779439079489696*^9}, {
   3.804572546549924*^9, 3.804572658048655*^9}, {3.804576650213037*^9, 
   3.804576680601592*^9}, {3.804576774577001*^9, 3.804576816093568*^9}, {
   3.804576852871743*^9, 3.8045769029079447`*^9}, {3.804577052824107*^9, 
   3.8045770582866373`*^9}, {3.804577155555228*^9, 3.8045771564203253`*^9}, {
   3.8176298781582623`*^9, 3.817629925191259*^9}, 3.8176299596525803`*^9, 
   3.8176312507122583`*^9, {3.818997077852659*^9, 3.818997147511628*^9}, {
   3.818997195291678*^9, 3.8189972592687893`*^9}, 3.818997365488493*^9, {
   3.818997397816402*^9, 3.8189974524625483`*^9}, {3.8189980834432592`*^9, 
   3.818998083580677*^9}, {3.8189986394048758`*^9, 3.818998665983466*^9}, {
   3.818999064050057*^9, 3.818999084883649*^9}, {3.818999389241189*^9, 
   3.818999390612666*^9}, {3.818999442613721*^9, 3.8189994662999363`*^9}, {
   3.8189999025585213`*^9, 3.818999905713437*^9}, {3.819001504080196*^9, 
   3.8190015084333887`*^9}, {3.819432663456129*^9, 3.819432752749357*^9}, {
   3.819432786481064*^9, 3.81943281098622*^9}, {3.819437669189741*^9, 
   3.819437749282721*^9}},ExpressionUUID->"bb8c6f18-493a-4744-b2af-\
12732ee3f110"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
numerically solving the radiative transfer equation to obtain images\
\>", "Subsection",
 CellChangeTimes->{{3.80457762425771*^9, 
  3.804577643462044*^9}},ExpressionUUID->"3d1f93e9-0b5b-4db7-9691-\
8be21dd47a58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GetRadiativeTransferEquationForDiskModel", "]"}], 
   " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"DiskCutoff", "\[Rule]", "False"}], "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetRadiativeTransferEquationForDiskModel", "::", "uNorm"}], " ", 
    "=", " ", "\"\<velocity u is not appropriately normalized\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetRadiativeTransferEquationForDiskModel", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A_", ",", "alpha_", ",", "h_", ",", "l0_"}], "}"}], ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "u", ",", "\n", "\t\t", "uu", ",", "\n", "\t\t", "uBar", ",", "\n", 
       "\t\t", "RR", ",", "\n", "\t\t", "ll", ",", "\n", "\t\t", 
       RowBox[{"qq", "=", 
        RowBox[{"1", "/", "2"}]}], ",", "\n", "\t\t", 
       RowBox[{"beta", "=", 
        RowBox[{"5", "/", "2"}]}], ",", "\n", "\t\t", "\[Nu]\[Nu]", ",", "\n",
        "\t\t", 
       RowBox[{"\[Nu]p", "=", "1"}], ",", "\n", "\t\t", "nn", ",", "\n", 
       "\t\t", 
       RowBox[{"n0", "=", "3"}], 
       RowBox[{"(*", 
        RowBox[{"*", 
         RowBox[{"10", "^", 
          RowBox[{"-", "18"}]}]}], "*)"}], ",", "\n", "\t\t", "j\[Nu]", ",", 
       "\n", "\t\t", "\[Alpha]\[Nu]", ",", "\n", "\t\t", "ode", ",", "\n", 
       "\t\t", 
       RowBox[{"toRayCoordsRule", " ", "=", " ", 
        RowBox[{"Switch", "[", "\n", "\t\t\t\t", 
         RowBox[{
         "WhichCoords", ",", "\n", "\t\t\t\t", "BoyerLindquist", ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"$t", "\[Rule]", 
             RowBox[{
              RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
            RowBox[{"$r", "\[Rule]", 
             RowBox[{
              RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
            RowBox[{"$\[Theta]", "\[Rule]", 
             RowBox[{
              RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
            RowBox[{"$\[Phi]", "\[Rule]", 
             RowBox[{
              RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
           "}"}], ",", "\n", "\t\t\t\t", "Kerr", ",", "\n", "\t\t\t\t", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"GetBoyerLindquistToKerrCoordsRule", "[", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"$v", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$r", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$\[Theta]", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$\[Chi]", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
             "}"}]}], "]"}], ",", "\n", "\t\t\t\t", "_", ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\n", "\t\t\t", "]"}]}]}], 
      "\n", "\t", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"set", " ", "some", " ", 
       RowBox[{"(", 
        RowBox[{"ray", "-", "dependent"}], ")"}], " ", "constants"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{"RR", " ", ":=", " ", 
       RowBox[{"$r", "*", 
        RowBox[{"Sin", "[", "$\[Theta]", "]"}]}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"ll", " ", ":=", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         FractionBox["l0", 
          RowBox[{"(", 
           RowBox[{"1", "+", "RR"}], ")"}]]}], 
        RowBox[{"RR", "^", 
         RowBox[{"(", 
          RowBox[{"1", "+", "qq"}], ")"}]}]}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "not", " ", "clear", " ", "to", " ", "me", " ", "where", " ", "this", 
        " ", "minus", " ", "sign", " ", "comes", " ", "from", " ", "but", " ",
         "it", " ", "is", " ", "necessary", " ", "in", " ", "order", " ", 
        "to", " ", "match", " ", "the", " ", "EXACT_GRRT", " ", "models"}], 
       "*)"}], "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "define", " ", "fluid", " ", "velocity", " ", "vector", " ", "of", " ",
         "the", " ", "disk"}], "*)"}], "\n", "\t", 
      RowBox[{"Switch", "[", "\n", "\t\t", 
       RowBox[{
       "WhichCoords", "\n", "\t\t", ",", "\n", "\t\t", "BoyerLindquist", "\n",
         "\t\t", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "fluid", " ", "velocity", " ", "in", " ", "BL", " ", "coordinates", 
          " ", "as", " ", "in", " ", 
          RowBox[{"Eq", ".", 
           RowBox[{"~", 
            RowBox[{"(", "8", ")"}]}]}], " ", "in", " ", "EHT_GRRT", " ", 
          "code", " ", "comparison"}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"u", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "ll"}], "}"}]}], 
         ";"}], "\n", "\t\t", ",", "\n", "\t\t", "Kerr", "\n", "\t\t", ",", 
        "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "implement", " ", "the", " ", "covariant", " ", "fluid", " ", 
          "velocity", " ", "transformed", " ", "from", " ", "BL", " ", "into",
           " ", "ingoing", " ", "Kerr", " ", "coordinates"}], "*)"}], "\n", 
        "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"derivation", " ", "given", " ", "in", " ", 
           RowBox[{
            RowBox[{"SpimpleRayTracer", "/", "literature"}], "/", "fluid"}]}],
           "-", "velocity_BL", "-", "toingoingKerr", "-", 
          RowBox[{"trafo", ".", "pdf"}]}], "*)"}], "\n", "\t\t", 
        RowBox[{"u", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["$r", "2"], "+", 
             RowBox[{"$spin", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "ll"}], "+", "$spin"}], ")"}]}]}], 
            RowBox[{
             SuperscriptBox["$r", "2"], "-", " ", 
             RowBox[{"2", " ", "$G0", " ", "$mass", " ", "$r"}], " ", "+", 
             " ", 
             SuperscriptBox["$spin", "2"]}]], ",", "0", ",", "ll"}], "}"}]}], 
        "\n", "\t\t", ",", "\n", "\t\t", "_", "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", 
         RowBox[{"Break", "[", "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{
       "normalize", " ", "the", " ", "fluid", " ", "velocity", " ", "using", 
        " ", "the", " ", "implemented", " ", "metric"}], "*)"}], "\n", "\t", 
      RowBox[{"uu", " ", "=", " ", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GetMetric", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], 
                RowBox[{"u", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], 
                RowBox[{"u", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"Trig", "\[Rule]", "False"}], ",", 
            RowBox[{"TimeConstraint", "\[Rule]", "5"}]}], "]"}], "]"}]], 
        "u"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "confirm", " ", "that", " ", "the", " ", "velocity", " ", "is", " ", 
        "appropriately", " ", "normalized"}], "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Simplify", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"GetMetric", "[", 
                  RowBox[{"i", ",", "j"}], "]"}]}], 
                RowBox[{"uu", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], 
                RowBox[{"uu", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "//.", 
             "toRayCoordsRule"}], "]"}], "===", "1"}], ")"}]}], ",", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"GetRadiativeTransferEquationForDiskModel", "::", "uNorm"}],
           ",", " ", "None"}], "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{
      "PrintTemporary", "[", 
       "\"\<fluid velocity normalized and simplified\>\"", "]"}], ";", "\n", 
      "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "from", " ", "that", " ", "one", " ", "can", " ", "define", " ", "the",
         " ", "frequency"}], "*)"}], "\t\t", "\n", "\t", 
      RowBox[{"\[Nu]\[Nu]", " ", ":=", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"uu", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], 
          RowBox[{
           RowBox[{"k", "[", "i", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"calculate", " ", "number", " ", "density"}], "*)"}], "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{
       "depening", " ", "on", " ", "option", " ", "value", " ", "set", " ", 
        "a", " ", "cutoff", " ", "of", " ", "the", " ", "disk", " ", "at", 
        " ", "classical", " ", "horizon", " ", "values"}], "*)"}], "\n", "\t", 
      RowBox[{"nn", " ", ":=", " ", 
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"n0", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                FractionBox["$r", "10"], ")"}], "^", "2"}], " ", "+", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"h", "*", 
                 RowBox[{"Cos", "[", "$\[Theta]", "]"}]}], ")"}], "^", 
               "2"}]}], ")"}]}], "]"}], "*", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "DiskCutoff", "]"}], ",", 
            RowBox[{"SmoothHeaviside", "[", 
             RowBox[{
              RowBox[{"$r", " ", "-", " ", 
               RowBox[{"(", 
                RowBox[{"$mass", " ", "+", " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"$mass", "^", "2"}], " ", "-", " ", 
                   RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}], ",", " ", 
              
              RowBox[{"10", "^", "4"}]}], "]"}], ",", "1", ",", "1"}], 
           "]"}]}], ",", 
         RowBox[{"Trig", "\[Rule]", "False"}]}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"calculate", " ", "emissivity"}], "*)"}], "\n", "\t", 
      RowBox[{"j\[Nu]", " ", ":=", " ", 
       RowBox[{"nn", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["\[Nu]\[Nu]", "\[Nu]p"], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"-", "alpha"}], ")"}]}]}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"calculate", " ", "absorbtivity"}], "*)"}], "\n", "\t", 
      RowBox[{"\[Alpha]\[Nu]", " ", ":=", " ", 
       RowBox[{"A", "*", "nn", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["\[Nu]\[Nu]", "\[Nu]p"], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"beta", "+", "alpha"}], ")"}]}], ")"}]}]}]}], ";", "\n", 
      "\t", 
      RowBox[{"(*", 
       RowBox[{"integrate", " ", "intensity"}], "*)"}], "\n", "\t", 
      RowBox[{"ode", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"I\[Nu]\[Nu]3", "[", "\[Lambda]", "]"}], ",", 
            "\[Lambda]"}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Simplify", "[", 
                RowBox[{
                 FractionBox["j\[Nu]", 
                  RowBox[{"\[Nu]\[Nu]", "^", "2"}]], ",", 
                 RowBox[{"Trig", "\[Rule]", "False"}]}], "]"}], " ", "-", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"A", "\[Equal]", "0"}], ",", "0", ",", 
                 RowBox[{"Simplify", "[", 
                  RowBox[{
                   RowBox[{"\[Nu]\[Nu]", "*", "\[Alpha]\[Nu]", "*", 
                    RowBox[{"I\[Nu]\[Nu]3", "[", "\[Lambda]", "]"}]}], ",", 
                   RowBox[{"Trig", "\[Rule]", "False"}]}], "]"}]}], "]"}]}], 
              ",", 
              RowBox[{"10", "^", "5"}]}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"10", "^", "5"}]}]}], "]"}]}], ")"}], "//.", 
        "toRayCoordsRule"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "ode", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",\

 CellChangeTimes->{{3.795233608512165*^9, 3.795233675912801*^9}, {
   3.795233706396598*^9, 3.795233718298169*^9}, {3.795234563702283*^9, 
   3.795234566992609*^9}, {3.795235947509119*^9, 3.7952360483238707`*^9}, {
   3.7952360928363028`*^9, 3.795236321232111*^9}, {3.795236373137459*^9, 
   3.79523640888802*^9}, {3.795236507796545*^9, 3.795236693755444*^9}, {
   3.795238103294375*^9, 3.795238210960771*^9}, {3.795238333732801*^9, 
   3.795238341086536*^9}, {3.7952385730693817`*^9, 3.795238629909748*^9}, {
   3.795238694445106*^9, 3.79523886082333*^9}, {3.795238988483471*^9, 
   3.795239461170354*^9}, {3.7952395637251062`*^9, 3.795239611946067*^9}, {
   3.7952417764162903`*^9, 3.795241830978814*^9}, {3.795241874569454*^9, 
   3.795241900465221*^9}, {3.795241941542528*^9, 3.7952419609706593`*^9}, {
   3.795242089156272*^9, 3.795242100856852*^9}, {3.795267879876334*^9, 
   3.7952678824673367`*^9}, {3.7952690663008137`*^9, 3.795269068167944*^9}, 
   3.795269117207427*^9, {3.795269150484519*^9, 3.7952691754462833`*^9}, {
   3.795269311879033*^9, 3.79526932236978*^9}, {3.795269842359365*^9, 
   3.7952698424326057`*^9}, {3.7952701345305023`*^9, 3.795270159905944*^9}, {
   3.7952704271409883`*^9, 3.795270427256731*^9}, {3.79531996125597*^9, 
   3.795319961348627*^9}, {3.79532000710385*^9, 3.795320030791402*^9}, {
   3.796108684471612*^9, 3.796108689580904*^9}, {3.7961090564182987`*^9, 
   3.796109159227212*^9}, {3.79610925267561*^9, 3.7961092955357037`*^9}, {
   3.796110023362728*^9, 3.79611013505295*^9}, {3.796110196143466*^9, 
   3.79611024493792*^9}, {3.796110275584152*^9, 3.79611029089334*^9}, {
   3.796110329235403*^9, 3.796110367563191*^9}, {3.796110404237803*^9, 
   3.7961104208237886`*^9}, {3.796110538594989*^9, 3.796110553017474*^9}, {
   3.79611059087533*^9, 3.7961105967017107`*^9}, {3.796110630714336*^9, 
   3.796110630815394*^9}, {3.796110687606379*^9, 3.796110699386538*^9}, {
   3.796110742259212*^9, 3.796110864713811*^9}, {3.796110894959405*^9, 
   3.796110911886758*^9}, {3.796110968761422*^9, 3.796110980299448*^9}, {
   3.796111014699698*^9, 3.796111016904352*^9}, {3.796111090208993*^9, 
   3.796111133927898*^9}, {3.7961111825395203`*^9, 3.796111273631485*^9}, {
   3.796111318055891*^9, 3.796111393382729*^9}, {3.7961114261193542`*^9, 
   3.796111493147908*^9}, {3.796111551073146*^9, 3.796111581408979*^9}, {
   3.79611161200141*^9, 3.7961116141366463`*^9}, {3.79611164492562*^9, 
   3.7961116855409203`*^9}, {3.79611172336625*^9, 3.796111723835594*^9}, {
   3.7961118188852253`*^9, 3.796111856429285*^9}, {3.7961119381862707`*^9, 
   3.796111941850028*^9}, {3.796111981424274*^9, 3.79611205684488*^9}, 
   3.796112111698874*^9, {3.7961121419807177`*^9, 3.7961121687027903`*^9}, {
   3.7961129820565643`*^9, 3.796112999106234*^9}, {3.7961132767301483`*^9, 
   3.796113349805835*^9}, {3.796113387491808*^9, 3.7961135470939493`*^9}, 
   3.796113777967844*^9, 3.7961169371783543`*^9, 3.7961170684482603`*^9, {
   3.7961172140668287`*^9, 3.7961172438128433`*^9}, 3.796117285762701*^9, {
   3.796117911523096*^9, 3.796118011959235*^9}, {3.7961210733142967`*^9, 
   3.796121090419591*^9}, {3.79614236103118*^9, 3.796142386535913*^9}, {
   3.796142416894487*^9, 3.796142465581019*^9}, {3.796142551349762*^9, 
   3.796142551867477*^9}, {3.7961428100439672`*^9, 3.7961428110317087`*^9}, {
   3.7961428413763037`*^9, 3.796142854220026*^9}, {3.7961429352593946`*^9, 
   3.796142984116289*^9}, 3.796143021583222*^9, {3.7961430592209044`*^9, 
   3.796143060312727*^9}, {3.796143243170875*^9, 3.7961432746029367`*^9}, {
   3.796143348166684*^9, 3.7961433483365183`*^9}, {3.796143398653557*^9, 
   3.796143404415454*^9}, {3.7961434448288517`*^9, 3.796143480406063*^9}, {
   3.796143529831027*^9, 3.796143612676214*^9}, {3.796143662845851*^9, 
   3.796143689759898*^9}, {3.796143745785774*^9, 3.796143873793577*^9}, {
   3.796143920696466*^9, 3.796143935887487*^9}, {3.796143981139781*^9, 
   3.7961439812824373`*^9}, {3.796144318867399*^9, 3.796144332131134*^9}, {
   3.79614445856389*^9, 3.796144484774417*^9}, {3.79614468173621*^9, 
   3.796144694012376*^9}, {3.7961447319464293`*^9, 3.79614473441125*^9}, 
   3.7961448404566307`*^9, {3.796144941215062*^9, 3.796145266887333*^9}, {
   3.796145926619495*^9, 3.79614630748508*^9}, {3.796146382648937*^9, 
   3.796146382989661*^9}, {3.7961464718570557`*^9, 3.7961464955242977`*^9}, 
   3.7961465319903917`*^9, {3.79614663112099*^9, 3.79614669491043*^9}, {
   3.796146731536212*^9, 3.796146755338169*^9}, {3.796146835188497*^9, 
   3.796146836592311*^9}, {3.796146907298428*^9, 3.7961469301765327`*^9}, {
   3.796146986118918*^9, 3.796146997991346*^9}, {3.796147068388597*^9, 
   3.7961470685741243`*^9}, 3.796147638330673*^9, 3.7961477024046383`*^9, {
   3.7961477378093643`*^9, 3.796147738030197*^9}, {3.796147784699298*^9, 
   3.796147784838162*^9}, {3.796147816839644*^9, 3.79614781713231*^9}, {
   3.796147984720893*^9, 3.796148011284251*^9}, {3.796148108251285*^9, 
   3.79614810906903*^9}, {3.79614826652736*^9, 3.796148297474358*^9}, {
   3.7961483666242533`*^9, 3.796148366689227*^9}, {3.796148398215726*^9, 
   3.7961484863618183`*^9}, {3.7961947598528214`*^9, 3.796194854001783*^9}, {
   3.797649790289605*^9, 3.797649802510625*^9}, {3.7976498442989283`*^9, 
   3.797649852157399*^9}, 3.7976498895229273`*^9, {3.797649954940075*^9, 
   3.797649955215013*^9}, {3.797650061301713*^9, 3.797650065832225*^9}, {
   3.7976501328574266`*^9, 3.7976501333288593`*^9}, 3.797650208568781*^9, {
   3.797650261674979*^9, 3.797650284613946*^9}, {3.797650319864677*^9, 
   3.7976504006626453`*^9}, {3.797651719400365*^9, 3.797651768201415*^9}, {
   3.7976518147516127`*^9, 3.797651815560378*^9}, {3.797651859876431*^9, 
   3.797651864559867*^9}, {3.797651950103849*^9, 3.7976520164157257`*^9}, {
   3.79765207319766*^9, 3.797652118772781*^9}, {3.797652224822435*^9, 
   3.797652226389956*^9}, 3.797652276700781*^9, {3.79765233622394*^9, 
   3.797652336727702*^9}, 3.797652375840479*^9, {3.7976524082301207`*^9, 
   3.797652408732185*^9}, {3.797652464097126*^9, 3.7976524934028788`*^9}, {
   3.7976526215613413`*^9, 3.79765264542867*^9}, {3.797697463227458*^9, 
   3.79769748392384*^9}, {3.797697575085107*^9, 3.7976975767024508`*^9}, {
   3.79769763057836*^9, 3.797697630626033*^9}, {3.797700042900885*^9, 
   3.797700044981358*^9}, {3.7977001061635*^9, 3.7977001065832872`*^9}, {
   3.797700329084063*^9, 3.797700343437491*^9}, {3.7977005876334257`*^9, 
   3.797700589401307*^9}, {3.797700912260257*^9, 3.797700921368032*^9}, 
   3.7977013196441803`*^9, {3.797749132294837*^9, 3.79774915356067*^9}, {
   3.797749193968219*^9, 3.797749280485166*^9}, {3.797749432478623*^9, 
   3.797749433495533*^9}, {3.797749568053268*^9, 3.797749586275173*^9}, 
   3.79774965290219*^9, {3.797749716231186*^9, 3.797749741917171*^9}, 
   3.797749819366588*^9, {3.797749874684544*^9, 3.7977499061798143`*^9}, {
   3.79774995378049*^9, 3.797749954188352*^9}, {3.79775001323869*^9, 
   3.79775004087213*^9}, {3.797754098716029*^9, 3.797754104109126*^9}, {
   3.797755235505933*^9, 3.7977552355774193`*^9}, {3.7977554365943623`*^9, 
   3.797755436699792*^9}, {3.797757094764443*^9, 3.797757099468989*^9}, {
   3.797758131113636*^9, 3.797758133167006*^9}, {3.797952182054038*^9, 
   3.7979521897244*^9}, {3.797952232068304*^9, 3.797952232323876*^9}, {
   3.797952296217132*^9, 3.79795239352137*^9}, {3.797952492209282*^9, 
   3.797952596101677*^9}, {3.79795265876291*^9, 3.797952704639625*^9}, {
   3.7979532019351673`*^9, 3.797953354759781*^9}, 3.7979534154360123`*^9, {
   3.797953460422117*^9, 3.797953497490069*^9}, {3.7979535594360933`*^9, 
   3.797953559589308*^9}, {3.7979536378168907`*^9, 3.797953712289459*^9}, {
   3.797954966642273*^9, 3.7979549722627077`*^9}, {3.797955010156127*^9, 
   3.797955012302403*^9}, {3.798014062216929*^9, 3.798014063808563*^9}, {
   3.803719203708788*^9, 3.803719301541402*^9}, {3.803719344508471*^9, 
   3.803719358344208*^9}, {3.803719391900715*^9, 3.8037193976191683`*^9}, {
   3.803719875063053*^9, 3.803719876032737*^9}, {3.803719948815885*^9, 
   3.803719948935895*^9}, {3.80372004655439*^9, 3.8037200466761427`*^9}, {
   3.8037201334947863`*^9, 3.8037201340529137`*^9}, {3.803813719691986*^9, 
   3.803813755375712*^9}, {3.803813856468202*^9, 3.803813865082074*^9}, {
   3.803974686260642*^9, 3.803974714282331*^9}, {3.803974764636549*^9, 
   3.803974780590397*^9}, {3.803974851757737*^9, 3.803974871934725*^9}, {
   3.803975007585401*^9, 3.80397502682397*^9}, {3.803975194840716*^9, 
   3.80397521498101*^9}, {3.803975266289927*^9, 3.803975291231208*^9}, {
   3.8039756459551573`*^9, 3.80397566763306*^9}, {3.804337831791156*^9, 
   3.804337840618857*^9}, {3.804337945728628*^9, 3.804337970440749*^9}, {
   3.804338145992833*^9, 3.804338147502936*^9}, {3.80433825543579*^9, 
   3.804338255629632*^9}, {3.8043384910324793`*^9, 3.8043384936601543`*^9}, 
   3.8043385864517803`*^9, {3.8043387034812107`*^9, 3.80433872819282*^9}, 
   3.804338884857293*^9, {3.804339173305327*^9, 3.804339181528223*^9}, {
   3.804339244335491*^9, 3.8043392507744217`*^9}, {3.8043393073913927`*^9, 
   3.804339362965024*^9}, {3.8043394250883703`*^9, 3.8043394257664347`*^9}, {
   3.804339463169178*^9, 3.804339881144802*^9}, {3.804340008588313*^9, 
   3.804340010865076*^9}, {3.804340120246994*^9, 3.804340199455492*^9}, {
   3.804340336803603*^9, 3.8043403639126797`*^9}, {3.8043403961752*^9, 
   3.8043404314251966`*^9}, {3.8043405815267572`*^9, 3.80434060481841*^9}, {
   3.8043407606994143`*^9, 3.804340783334857*^9}, {3.8043408342318697`*^9, 
   3.804340849272462*^9}, {3.8043408971669483`*^9, 3.804340897262048*^9}, {
   3.804340948705791*^9, 3.8043409763416767`*^9}, {3.804491721290203*^9, 
   3.804491725199541*^9}, {3.8044924098425493`*^9, 3.804492409972198*^9}, 
   3.804492481681704*^9, 3.8044932559771843`*^9, 3.804493365611636*^9, {
   3.80449352800609*^9, 3.8044935328273287`*^9}, {3.8044942132382708`*^9, 
   3.80449423021126*^9}, {3.804494368001539*^9, 3.8044943825136337`*^9}, {
   3.8044944606879473`*^9, 3.804494461176103*^9}, 3.8044945593264217`*^9, 
   3.804495189767745*^9, 3.8044952852552843`*^9, 3.804495340255883*^9, 
   3.80449545837567*^9, 3.804495521349544*^9, {3.804496082969963*^9, 
   3.8044961523468103`*^9}, {3.804496190037284*^9, 3.804496224087018*^9}, {
   3.8044962576152267`*^9, 3.804496262090352*^9}, {3.804496314423461*^9, 
   3.8044963201655483`*^9}, {3.80449701963914*^9, 3.804497069750084*^9}, {
   3.804497109350356*^9, 3.804497192916048*^9}, {3.8044972235715017`*^9, 
   3.804497232815531*^9}, {3.804497286193499*^9, 3.804497293973884*^9}, {
   3.804497334220055*^9, 3.8044973615260277`*^9}, {3.804497635098008*^9, 
   3.8044976485046253`*^9}, {3.804497793806905*^9, 3.804497798080741*^9}, {
   3.8045117191185226`*^9, 3.8045117281087837`*^9}, {3.8045124023182287`*^9, 
   3.804512408342649*^9}, {3.804577703238565*^9, 3.804577757595705*^9}, {
   3.8045805786375647`*^9, 3.80458058723171*^9}, {3.804580633685163*^9, 
   3.80458063421099*^9}, {3.808028052205414*^9, 3.808028053933962*^9}, {
   3.808028149042663*^9, 3.808028149325382*^9}, {3.812001017029855*^9, 
   3.812001030426153*^9}, {3.8120279743580112`*^9, 3.8120279775653877`*^9}, {
   3.812028015215111*^9, 3.812028071429481*^9}, {3.812035472176793*^9, 
   3.81203547786236*^9}, {3.812083578904784*^9, 3.8120836215113373`*^9}, 
   3.812083903727742*^9, {3.812084323038913*^9, 3.812084383518718*^9}, 
   3.812088110535983*^9, {3.812088188146734*^9, 3.812088188219911*^9}, {
   3.812088218648975*^9, 3.812088223108671*^9}, {3.812088253785836*^9, 
   3.8120882668126173`*^9}, {3.812088323651075*^9, 3.8120883444308443`*^9}, 
   3.812088392466425*^9, {3.8120886501652718`*^9, 3.812088651415806*^9}, {
   3.812088837875976*^9, 3.81208884088494*^9}, {3.8120898373951597`*^9, 
   3.812089837905354*^9}, {3.812090394248789*^9, 3.812090428741643*^9}, {
   3.819776675207965*^9, 3.819776681751067*^9}, 3.819776723147471*^9, 
   3.819776759075902*^9, {3.820033550974777*^9, 3.820033561782978*^9}, {
   3.820034485758382*^9, 3.820034570444242*^9}, {3.820034936432967*^9, 
   3.8200349387716713`*^9}, {3.820036006068681*^9, 3.820036033656454*^9}, {
   3.8200360788729343`*^9, 3.82003611507633*^9}, {3.8200363286088057`*^9, 
   3.8200363293384533`*^9}, {3.820036611634048*^9, 3.820036620960991*^9}, {
   3.8200366540860023`*^9, 3.820036661225871*^9}, {3.820036784537121*^9, 
   3.820036806175456*^9}, {3.820037468735202*^9, 3.820037531960846*^9}, {
   3.820037832419776*^9, 3.820037838993194*^9}, {3.820037930166995*^9, 
   3.820037934706908*^9}, {3.820038315740596*^9, 3.82003831615425*^9}, {
   3.820067120053215*^9, 3.820067123891898*^9}, {3.820067155154928*^9, 
   3.820067160016543*^9}, {3.8200672179856863`*^9, 3.820067250800144*^9}, {
   3.820067355847849*^9, 3.820067398059482*^9}, {3.820067439545906*^9, 
   3.82006746070359*^9}, {3.8200696335111723`*^9, 3.8200696793096647`*^9}, 
   3.820076573978063*^9, {3.8201359765771313`*^9, 3.820135988721676*^9}, {
   3.820136111012933*^9, 3.8201362212767687`*^9}, {3.820136596518196*^9, 
   3.82013666444482*^9}, {3.820136780247575*^9, 3.820136780371304*^9}, {
   3.82014118303049*^9, 3.820141183200787*^9}, 3.8201541548458014`*^9, {
   3.8202968430803823`*^9, 3.820296887222002*^9}, {3.8202969965560617`*^9, 
   3.8202970832732277`*^9}, {3.820297140308364*^9, 3.8202973401984787`*^9}, {
   3.820297387253092*^9, 3.820297389077895*^9}, 3.820297517310397*^9, {
   3.820297760664981*^9, 3.82029781384678*^9}, {3.82029786432257*^9, 
   3.820297874760764*^9}, {3.820298172616823*^9, 3.820298179785964*^9}, {
   3.820298269878587*^9, 3.820298286405457*^9}, {3.820298477024695*^9, 
   3.8202984973596153`*^9}, {3.820316138761133*^9, 3.820316237276123*^9}, {
   3.820316361960766*^9, 3.820316365504437*^9}, {3.8203186904822397`*^9, 
   3.820318691563651*^9}, {3.8203187344409437`*^9, 3.820318772714231*^9}, {
   3.8203188125231857`*^9, 3.820318828665638*^9}, 3.820318870436817*^9, {
   3.820318935884948*^9, 3.820319000138648*^9}, {3.8203190318283873`*^9, 
   3.820319115765252*^9}, {3.8203191743279753`*^9, 3.8203191872779007`*^9}, {
   3.820319361459008*^9, 3.8203194247864027`*^9}, {3.8203208426435223`*^9, 
   3.820320856835493*^9}, 3.820321206354804*^9, 3.820321311286681*^9, {
   3.820321357966611*^9, 3.8203213679026737`*^9}, {3.820321470808093*^9, 
   3.8203214869177027`*^9}},ExpressionUUID->"da5d5b74-82c0-4dc8-83ca-\
4035dc4b1787"],

Cell["Check against Eq.(5) in short paper draft.", "Text",
 CellChangeTimes->{{3.824557728310885*^9, 
  3.824557747178566*^9}},ExpressionUUID->"5c60950f-5f8c-4378-ab14-\
14e2bf4fe42e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"nnDraft", " ", "=", " ", 
    RowBox[{"n0", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"r", "^", "2"}], "100"], ")"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"h", "^", "2"}], 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
      "]"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nnDraft", " ", "==", " ", 
      RowBox[{"Simplify", "[", 
       RowBox[{"n0", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              FractionBox["$r", "10"], ")"}], "^", "2"}], " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "*", 
               RowBox[{"Cos", "[", "$\[Theta]", "]"}]}], ")"}], "^", "2"}]}], 
           ")"}]}], "]"}]}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"$r", "\[Rule]", "r"}], ",", 
       RowBox[{"$\[Theta]", "\[Rule]", "\[Theta]"}]}], "}"}]}], "//", 
    "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8245577534168262`*^9, 
  3.8245578908700047`*^9}},ExpressionUUID->"15abc466-982b-4fe6-a7b3-\
4070e5c7aed1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.824557853279488*^9, 3.824557879553692*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"f8c25698-061e-466b-ac32-f4fbde7a280f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetIntensity", "]"}], " ", ":=", " ", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"Options", "[", "GetSingleLightRay", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"StopIntegrationAtLightRingNumber", "\[Rule]", "False"}], 
         ",", 
         RowBox[{"RadiativeTransferMaxStepSize", "\[Rule]", "Automatic"}]}], 
        "}"}]}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetIntensity", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
        RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
      "paramRules_List", ",", " ", "ode_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
       "ray", ",", "\n", "\t\t", "intensity", ",", "\n", "\t\t", 
        "\[Lambda]Min", ",", "\[Lambda]Max", ",", "\[Lambda]Hor", ",", 
        "\[Lambda]HorRule", ",", "\n", "\t\t", "count"}], "\n", "\t", "}"}], 
      "\n", "\t", ",", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "the", " ", "current", " ", "ray"}], "*)"}], "\n", 
      "\t", 
      RowBox[{
       RowBox[{"ray", " ", "=", " ", 
        RowBox[{
         RowBox[{"GetSingleLightRay", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "paramRules", 
           ",", "\n", "\t\t", 
           RowBox[{"WorkingPrecision", "\[Rule]", 
            RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"HorizonCondition", "->", 
            RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}]}], "\n", 
          "\t", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "get", " ", "parameterized", " ", "start", " ", "and", " ", "end", 
         " ", "point"}], "*)"}], "\n", "\t", 
       RowBox[{"\[Lambda]Min", " ", "=", " ", 
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"ray", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"\[Lambda]Max", " ", "=", " ", 
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"ray", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "@", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}]}], ";"}], 
        "*)"}], "\n", "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{"find", " ", "the", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Killing", " ", "or", " ", "user"}], "-", "defined"}], 
          ")"}], " ", "horizon", " ", "value", " ", "of", " ", "\[Lambda]"}], 
        "*)"}], "\t", "\n", "\t", 
       RowBox[{"\[Lambda]HorRule", " ", "=", " ", 
        RowBox[{"Quiet", "@", 
         RowBox[{"FindRoot", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"TrueQ", "[", 
                 RowBox[{"!", 
                  RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                 "]"}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"GetMetric", "[", 
                  RowBox[{"2", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"Replace", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Less", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"LessEqual", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"Greater", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"GreaterEqual", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}]}], "}"}]}], "]"}]}], "\n", 
               "\t\t", "]"}], "/.", "paramRules"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", "ray"}], ",", "\n", "\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", 
             FractionBox[
              RowBox[{"\[Lambda]Min", "+", "\[Lambda]Max"}], "2"], ",", 
             "\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}]}], "\n", "\t", 
          "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "@", "\[Lambda]HorRule"}], ";"}], "*)"}], "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"to", " ", "be", " ", "improved"}], ")"}], " ", "in", 
            " ", "case", " ", "of", " ", "Killing"}], "-", 
           RowBox[{
           "horzon", " ", "condition", " ", "the", " ", "above", " ", 
            "FindRoot", " ", "is", " ", "a", " ", "bit", " ", 
            RowBox[{"tricky", "/", "problematic"}], " ", "because", " ", "it",
             " ", "tends", " ", "to", " ", "find", " ", "inner", " ", 
            "horizons"}]}], " ", "..."}], " ", "hence", " ", "we", " ", "try",
          " ", "again"}], "*)"}], "\n", "\t", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], "]"}], 
         ",", "\n", "\t\t", 
         RowBox[{"\[Lambda]HorRule", " ", "=", " ", 
          RowBox[{"Quiet", "@", 
           RowBox[{"FindRoot", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"GetMetric", "[", 
                  RowBox[{"2", ",", "2"}], "]"}], "\[Equal]", "0"}], "/.", 
                "paramRules"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"$r", "\[Rule]", 
                  RowBox[{
                   RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                 ",", 
                 RowBox[{"$\[Theta]", "\[Rule]", 
                  RowBox[{
                   RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}]}], 
                "}"}]}], "/.", "ray"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"\[Lambda]", "/.", "\[Lambda]HorRule"}], "]"}], "-", 
                
                FractionBox[
                 RowBox[{"\[Lambda]Min", "+", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"\[Lambda]", "/.", "\[Lambda]HorRule"}], "]"}]}], 
                 "rCam"]}], ",", "\[Lambda]Min", ",", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"\[Lambda]", "/.", "\[Lambda]HorRule"}], "]"}], "-", 
                
                FractionBox[
                 RowBox[{"\[Lambda]Min", "+", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"\[Lambda]", "/.", "\[Lambda]HorRule"}], "]"}]}], 
                 RowBox[{"rCam", "*", "10"}]]}]}], "}"}]}], "\n", "\t\t", 
            "]"}]}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "@", "\[Lambda]HorRule"}], ";"}], "*)"}], "\n", 
       "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"if", " ", "Killing", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"or", " ", "user"}], "-", "defined"}], ")"}], " ", 
          "horizon", " ", "was", " ", "found"}], ",", " ", 
         RowBox[{"integrate", " ", "from", " ", 
          RowBox[{"there", ".", " ", "if"}], " ", "not"}], ",", " ", 
         RowBox[{
         "integrate", " ", "from", " ", "large", " ", "radial", " ", 
          "distance"}]}], "*)"}], "\n", "\t", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"TrueQ", "[", 
                  RowBox[{"!", 
                   RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                  "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{"GetMetric", "[", 
                  RowBox[{"2", ",", "2"}], "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{"Replace", "[", 
                  RowBox[{
                   RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Less", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"LessEqual", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"Greater", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"GreaterEqual", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"Plus", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"-", "b"}]}], "]"}]}]}], "}"}]}], "]"}]}], "\n", 
                "\t\t", "]"}], "/.", "paramRules"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"$r", "\[Rule]", 
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                ",", 
                RowBox[{"$\[Theta]", "\[Rule]", 
                 RowBox[{
                  RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}]}], 
               "}"}]}], "/.", "ray"}], "/.", "\[Lambda]HorRule"}], "]"}], " ",
           "<", " ", "1*^-5"}], "\n", "\t\t", ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\[Lambda]Hor", " ", "=", " ", 
           RowBox[{"\[Lambda]", "/.", "\[Lambda]HorRule"}]}], ";", "\n", 
          "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"TrueQ", "[", 
                RowBox[{"!", 
                 RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                "]"}], ",", "\"\<Killing\>\"", ",", "\"\<User-defined\>\""}], 
              "]"}], "<>", "\"\< horizon at r=\>\""}], ",", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "/.", 
               "ray"}], "/.", 
              RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Hor"}]}], "]"}], ",", 
            "\"\< detected for \[Lambda]=\>\"", ",", 
            RowBox[{"N", "@", "\[Lambda]Hor"}]}], "]"}], ";"}], "\n", "\t\t", 
         ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\[Lambda]Hor", "=", "\[Lambda]Max"}], ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<No event horizon found. Will start intensity integration from \
\[Lambda]Max=\>\"", ",", 
            RowBox[{"N", "@", "\[Lambda]Hor"}]}], "]"}], ";"}], "\n", "\t\t", 
         ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\[Lambda]Hor", "=", "\[Lambda]Max"}], ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<No event horizon found. Will start intensity integration from \
\[Lambda]Max=\>\"", ",", 
            RowBox[{"N", "@", "\[Lambda]Hor"}]}], "]"}], ";"}]}], "\n", "\t", 
        "]"}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "/.", 
             "ray"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Hor"}], 
             "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "]"}], ";"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "integrate", " ", "intensity", " ", "via", " ", "NDSolve", " ", 
          "using", " ", "user"}], "-", 
         RowBox[{
         "specified", " ", "WorkingPrecision", " ", "and", " ", 
          "PrecisionGoal"}]}], "*)"}], "\n", "\t", "\n", "\t", 
       RowBox[{"count", "=", "0"}], ";", "\n", "\t", 
       RowBox[{"intensity", " ", "=", " ", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"NDSolve", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ode", "/.", "paramRules"}], "/.", "ray"}], ",", " ", 
               
               RowBox[{
                RowBox[{"I\[Nu]\[Nu]3", "[", "\[Lambda]Min", "]"}], 
                "\[Equal]", "0"}]}], "}"}], ",", "\n", "\t\t", 
             RowBox[{"I\[Nu]\[Nu]3", "[", "\[Lambda]", "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Hor"}],
               "}"}], ",", "\n", "\t\t", 
             RowBox[{"WorkingPrecision", "\[Rule]", 
              RowBox[{
               RowBox[{"11", "/", "10"}], "*", 
               RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}]}], ",",
              " ", 
             RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}], ",", " ", 
             RowBox[{"PrecisionGoal", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrecisionGoal", "]"}]}], ",", "\n",
              "\t\t", 
             RowBox[{"MaxStepSize", "\[Rule]", 
              RowBox[{
              "OptionValue", "[", "RadiativeTransferMaxStepSize", "]"}]}], 
             ",", "\n", "\t\t", 
             RowBox[{"Method", " ", "\[Rule]", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"NumberQ", "[", 
                 RowBox[{
                 "OptionValue", "[", "StopIntegrationAtLightRingNumber", 
                  "]"}], "]"}], "\n", "\t\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{"\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t", 
                  RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
                   RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"$\[Theta]", ",", "\[Pi]"}], "]"}], "\[Equal]", 
                    FractionBox["\[Pi]", "2"]}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], "/.", "ray"}], ")"}], "*)"}], "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "/.",
                     "ray"}], ",", "\[Lambda]"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ")"}], "\n", "\t\t\t\t", "}"}]}], ",", " ", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
                   RowBox[{"{", 
                    RowBox[{"(", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"count", " ", "=", " ", 
                    RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"$\[Theta]", "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], "/.", "ray"}], "]"}], ";"}], "*)"}], "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{"\"\<light-ring count increased to \>\"", ",", 
                    RowBox[{
                    RowBox[{"N", "@", "count"}], "\"\< at \[Theta]=\>\""}], 
                    ",", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "/.",
                     "ray"}], "]"}]}], "]"}]}], "]"}], ";"}], ")"}], "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"count", ">", 
                    RowBox[{"OptionValue", "[", 
                    "StopIntegrationAtLightRingNumber", "]"}]}], "]"}], ")"}],
                     ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{
                    "\"\<integration stopped at user-selected light-ring \
number \>\"", ",", 
                    RowBox[{
                    "OptionValue", "[", "StopIntegrationAtLightRingNumber", 
                    "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t\t\t\t", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], 
                    "]"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], ";"}], "\n", 
                    "\t\t\t\t", ")"}], "}"}]}]}], "\n", "\t\t\t", "}"}], ",", 
                "\n", "\t\t\t", "Automatic"}], "\n", "\t\t", "]"}]}]}], "\n", 
            "\t", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"InterpolatingFunction", "::", "dmval"}], ",", 
            RowBox[{"General", "::", "munfl"}]}], "}"}]}], "]"}]}], ";", "\n",
        "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "not", " ", "even", " ", "sure", " ", "how", " ", "it", " ", "can", 
         " ", "happen", " ", "that", " ", "NDSolve", " ", "does", " ", "not", 
         " ", "reach", " ", "boundary", " ", "without", " ", "warning", " ", 
         "but", " ", "it", " ", "does", " ", 
         RowBox[{"occur", " ", "--"}], " ", "stupid", " ", "Mathematica"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "we", " ", "only", " ", "give", " ", "a", " ", "temporary", " ", 
          "warning", " ", "since", " ", "the", " ", "endpoint", " ", "is"}], 
         ",", " ", 
         RowBox[{
         "in", " ", "all", " ", "observed", " ", "cases", " ", "to", " ", 
          "date"}], ",", " ", 
         RowBox[{
         "still", " ", "close", " ", "to", " ", "the", " ", "screen", " ", 
          "but", " ", "this", " ", "could", " ", "result", " ", "in", " ", 
          "issues"}]}], "*)"}], "\n", "\t", 
       RowBox[{"Quiet", "@", 
        RowBox[{"If", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]Hor", " ", ">", " ", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"intensity", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], " ", "&&", 
           " ", 
           RowBox[{"!", 
            RowBox[{"NumberQ", "[", 
             RowBox[{
             "OptionValue", "[", "StopIntegrationAtLightRingNumber", "]"}], 
             "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"PrintTemporary", "[", 
            RowBox[{
            "\"\<numerical integration did not reach screen but stalled at \>\
\"", ",", " ", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"intensity", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "]"}], 
           ";"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"intensity", " ", "=", " ", 
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"I\[Nu]\[Nu]3", "[", "\[Lambda]", "]"}], "/.", 
            "intensity"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", 
             RowBox[{"Min", "[", 
              RowBox[{"\[Lambda]Hor", ",", 
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"intensity", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
            "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"InterpolatingFunction", "::", "dmval"}], ",", 
            RowBox[{"General", "::", "munfl"}]}], "}"}]}], "]"}]}], ";", "\n",
        "\t", 
       RowBox[{"Return", "[", "intensity", "]"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"GetIntensity", ",", " ", 
    RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"GetIntensity", ",", " ", 
    RowBox[{"PrecisionGoal", "\[Rule]", "6"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.804577761313162*^9, 3.804577766210228*^9}, {
   3.8045778236577177`*^9, 3.8045779066164417`*^9}, {3.8045779383379917`*^9, 
   3.8045779755735817`*^9}, {3.80457804557622*^9, 3.804578051714027*^9}, {
   3.804579503435364*^9, 3.804579503809216*^9}, {3.804579577406053*^9, 
   3.804579587881155*^9}, {3.80457962081491*^9, 3.8045796551134663`*^9}, 
   3.804579690364089*^9, {3.804579769350502*^9, 3.804579788642949*^9}, {
   3.804579859219693*^9, 3.804579912115103*^9}, {3.804579983431341*^9, 
   3.804580007528591*^9}, {3.804580072675683*^9, 3.804580075964884*^9}, 
   3.804580163551276*^9, 3.804580319977669*^9, 3.804581257771652*^9, {
   3.807957578366678*^9, 3.807957592867497*^9}, {3.808029995825995*^9, 
   3.808030033871419*^9}, {3.80803045890508*^9, 3.808030463856369*^9}, {
   3.8080305070068493`*^9, 3.8080305318316193`*^9}, {3.80803058624442*^9, 
   3.80803063227969*^9}, {3.808030691906644*^9, 3.8080306975519257`*^9}, 
   3.808030732254085*^9, {3.8080307848991823`*^9, 3.8080307863118896`*^9}, 
   3.808678955096608*^9, {3.808679001120017*^9, 3.808679015418435*^9}, {
   3.8086791955048723`*^9, 3.808679200958824*^9}, {3.8086792413145113`*^9, 
   3.808679250824231*^9}, {3.80867936675214*^9, 3.808679386779628*^9}, {
   3.8087132051784067`*^9, 3.8087132155709248`*^9}, {3.808713395146941*^9, 
   3.8087133989111567`*^9}, {3.808713644833757*^9, 3.808713650610804*^9}, {
   3.808713924050517*^9, 3.808713924418941*^9}, {3.8087149418247633`*^9, 
   3.808714944084139*^9}, {3.8087150813268843`*^9, 3.808715141063443*^9}, {
   3.808715231881662*^9, 3.808715316431787*^9}, {3.808716528090201*^9, 
   3.808716737710402*^9}, 3.8120858961319113`*^9, 3.8120859627438927`*^9, {
   3.812087303385459*^9, 3.812087327845304*^9}, {3.8120874046713448`*^9, 
   3.8120874175950117`*^9}, {3.812087485144353*^9, 3.8120874875315523`*^9}, {
   3.812088773025022*^9, 3.812088777042658*^9}, {3.81209019188938*^9, 
   3.8120902305421877`*^9}, {3.812090369293272*^9, 3.812090372333263*^9}, 
   3.8190287518968163`*^9, {3.81943143767994*^9, 3.819431442323669*^9}, {
   3.819476719303681*^9, 3.8194767334458513`*^9}, {3.819651534783486*^9, 
   3.819651536300407*^9}, {3.8196527181012506`*^9, 3.819652904256391*^9}, {
   3.8196857387617397`*^9, 3.819685846712624*^9}, {3.819685902932756*^9, 
   3.819685906537731*^9}, {3.819685957296887*^9, 3.819685966991757*^9}, {
   3.8196861077425632`*^9, 3.819686113800289*^9}, 3.8196861797357397`*^9, {
   3.819686225026881*^9, 3.819686261083786*^9}, {3.819686325161813*^9, 
   3.81968634357738*^9}, {3.8196863776519957`*^9, 3.8196865326487923`*^9}, {
   3.8196866072335052`*^9, 3.819686616870899*^9}, {3.8196866768939657`*^9, 
   3.819686685810602*^9}, {3.819686797099807*^9, 3.819686862353095*^9}, {
   3.8196868944243927`*^9, 3.819686908882063*^9}, {3.8196871114009123`*^9, 
   3.8196871129563417`*^9}, {3.819687189459804*^9, 3.8196871913440723`*^9}, {
   3.819687229473873*^9, 3.819687246418331*^9}, {3.8196872863433332`*^9, 
   3.8196872992558117`*^9}, {3.819687409911833*^9, 3.819687519011088*^9}, {
   3.819687591404305*^9, 3.819687695794607*^9}, {3.819687742341078*^9, 
   3.819687761984877*^9}, {3.819687814172542*^9, 3.8196878373673773`*^9}, {
   3.819688735311558*^9, 3.819688867907509*^9}, 3.819690017784471*^9, {
   3.819696248171739*^9, 3.8196963546996813`*^9}, {3.819696485545389*^9, 
   3.8196966133265038`*^9}, {3.819696697508911*^9, 3.8196968609743433`*^9}, {
   3.819696895479395*^9, 3.819696899449341*^9}, 3.819697235732298*^9, 
   3.819697277228415*^9, {3.819697336301971*^9, 3.819697341433921*^9}, {
   3.819697465521368*^9, 3.819697478134563*^9}, 3.819697641383047*^9, {
   3.8196977405648193`*^9, 3.819697800202737*^9}, {3.819697970910902*^9, 
   3.819697981469399*^9}, {3.8196980502179947`*^9, 3.819698109033369*^9}, {
   3.8196982131667833`*^9, 3.819698229731741*^9}, {3.819698666675787*^9, 
   3.819698720999296*^9}, {3.8196987607513447`*^9, 3.819698840590021*^9}, {
   3.819699008078652*^9, 3.8196990127933598`*^9}, {3.8196993170828247`*^9, 
   3.819699325070817*^9}, {3.819699532271381*^9, 3.8196995716210413`*^9}, {
   3.819700243675377*^9, 3.81970024742253*^9}, {3.819700590739958*^9, 
   3.8197006041277533`*^9}, 3.819700667004722*^9, {3.819700735178914*^9, 
   3.81970073792658*^9}, {3.819700856775696*^9, 3.819700865537019*^9}, {
   3.8197013908193407`*^9, 3.819701407321577*^9}, {3.8197016754067287`*^9, 
   3.819701685634416*^9}, {3.81970172681503*^9, 3.819701789176488*^9}, {
   3.819701866993494*^9, 3.819701876140997*^9}, {3.819725940272698*^9, 
   3.8197259601493187`*^9}, {3.819726013663843*^9, 3.819726020865273*^9}, {
   3.820148495142337*^9, 3.820148541314192*^9}, {3.820149081264119*^9, 
   3.820149081336218*^9}, {3.8201504334515944`*^9, 3.820150435019763*^9}, {
   3.820150522938504*^9, 3.82015052884787*^9}, {3.820150697908753*^9, 
   3.8201507016528597`*^9}, {3.820150812131715*^9, 3.82015085415685*^9}, {
   3.820150889701481*^9, 3.8201509049846077`*^9}, {3.820150981995105*^9, 
   3.820151015792952*^9}, {3.820151120407474*^9, 3.820151125123061*^9}, {
   3.8201512379125032`*^9, 3.820151285522953*^9}, {3.820151343367531*^9, 
   3.820151349110407*^9}, {3.8201514194702377`*^9, 3.820151422602091*^9}, {
   3.820151609167857*^9, 3.820151621649172*^9}, {3.8201520770450277`*^9, 
   3.820152077983171*^9}, {3.820152253342684*^9, 3.820152267612631*^9}, {
   3.8201524542212276`*^9, 3.8201524593504353`*^9}, {3.820152546655273*^9, 
   3.820152584677369*^9}, {3.820152679117653*^9, 3.8201526792503757`*^9}, {
   3.821186707052911*^9, 3.821186790112784*^9}, {3.821187105666052*^9, 
   3.821187128660329*^9}, {3.821187211354445*^9, 3.82118724459412*^9}, {
   3.821187324427206*^9, 3.821187337925507*^9}, {3.821187377741242*^9, 
   3.821187497641107*^9}, {3.821187577649816*^9, 3.821187663514202*^9}, {
   3.821188704755159*^9, 3.821188729712965*^9}, {3.821188778718153*^9, 
   3.821188822841372*^9}, {3.82118887850844*^9, 3.821188880208652*^9}, {
   3.82118892566924*^9, 3.821188929527153*^9}, {3.821189023437119*^9, 
   3.821189048188198*^9}, {3.821189234677343*^9, 3.821189260078191*^9}, {
   3.821189407510008*^9, 3.821189421829397*^9}, {3.821189470000437*^9, 
   3.8211894745929193`*^9}, {3.821189803776966*^9, 3.821189805241003*^9}, 
   3.821189847255321*^9, {3.821189882029084*^9, 3.821190074357896*^9}, {
   3.821193177454821*^9, 3.8211931848585873`*^9}, 3.821193223632036*^9, {
   3.8211982815467033`*^9, 3.821198305172164*^9}, {3.8211987763306913`*^9, 
   3.821198785941189*^9}, {3.821199911218751*^9, 3.821199936188949*^9}, {
   3.821200477299233*^9, 3.8212004789762793`*^9}, {3.821200559776616*^9, 
   3.821200559840753*^9}, {3.8212006467549562`*^9, 3.821200652381775*^9}, {
   3.821200709267061*^9, 3.821200716857915*^9}, 3.821200800787858*^9, {
   3.8212008752835217`*^9, 3.821200875355611*^9}, {3.8212009292688313`*^9, 
   3.8212009302271*^9}, {3.821201090034628*^9, 3.8212011016407337`*^9}, {
   3.821201192582397*^9, 3.821201202829109*^9}, {3.821201246021645*^9, 
   3.821201247591456*^9}, {3.8212012892360477`*^9, 3.821201289318714*^9}, {
   3.821201329939691*^9, 3.821201336225843*^9}, {3.821201571374505*^9, 
   3.8212015805250187`*^9}, {3.821201652560239*^9, 3.821201694258636*^9}, {
   3.821201776524911*^9, 3.821201778866428*^9}, {3.8212018666432056`*^9, 
   3.821201868042324*^9}, 3.8212019109937696`*^9, {3.82120195886106*^9, 
   3.8212019589185457`*^9}, {3.821202021553581*^9, 3.821202021620286*^9}, {
   3.8212022083701077`*^9, 3.821202217777075*^9}, {3.821202274558093*^9, 
   3.8212022769616632`*^9}, {3.821202451980871*^9, 3.821202456444727*^9}, {
   3.821202495557909*^9, 3.821202539867414*^9}, 3.8212026024656553`*^9, {
   3.821202763067788*^9, 3.8212027666014643`*^9}, {3.8212028089395247`*^9, 
   3.8212028318099737`*^9}, 3.821202906409892*^9, 3.821202981254154*^9, {
   3.82120352582518*^9, 3.821203659313328*^9}, {3.821203758902326*^9, 
   3.821203762734954*^9}, {3.821203850715781*^9, 3.821203856181263*^9}, 
   3.82395072588134*^9, {3.8239508605708*^9, 3.823950886083497*^9}, {
   3.823950924281495*^9, 3.823950956353647*^9}, {3.823951310261664*^9, 
   3.823951366228306*^9}, {3.826516736894121*^9, 
   3.826516779588915*^9}},ExpressionUUID->"44544fdd-7d99-41bd-83d1-\
bc69630955da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetIntensityData", "]"}], " ", ":=", " ", 
    RowBox[{"Options", "[", "GetIntensity", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetIntensityData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      "paramRules_List", ",", " ", "screenPoints_List", ",", " ", "ode_", ",",
       " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", "return", "\n", "\t", "}"}], ",", "\n", "\t",
       "\n", "\t", 
      RowBox[{
       RowBox[{"DynamicModule", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"counter", "=", "0"}], ",", "\n", "\t\t\t", 
           RowBox[{"starttime", " ", "=", " ", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ",", "\n", "\t\t\t", 
           RowBox[{"currentImagePoint", " ", "=", " ", 
            RowBox[{"screenPoints", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "\t\t", "}"}], ",", 
         "\n", "\t", "\n", "\t\t", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<numerical integration of radiative transfer equation in \
progress ... for image point (x=\>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"N", "@", 
              RowBox[{"currentImagePoint", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
            "\"\<, y=\>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"N", "@", 
              RowBox[{"currentImagePoint", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", 
            "\"\<)\>\""}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<estimated remaining time for evaluation: \>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", "starttime", "]"}], ",", 
               RowBox[{"DateList", "[", 
                RowBox[{"starttime", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                    "starttime"}], ")"}], "counter"], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "@", "screenPoints"}], " ", "-", " ", 
                    "counter"}], ")"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", 
                 ",", "\"\<Second\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";",
           "\n", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", "Print", "}"}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"counter", " ", "=", " ", 
                   RowBox[{"counter", "+", "1"}]}], ";", "\n", "\t\t\t\t", 
                  RowBox[{"currentImagePoint", " ", "=", " ", "#"}], ";", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"Flatten", "@", "#"}]}]}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"Check", "[", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"GetIntensity", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], 
                    "}"}], ",", "#", ",", "paramRules", ",", "ode", ",", 
                    "opts"}], "]"}], "\n", "\t\t\t\t\t", ",", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{
                    "\"\<Image point (x,y)=\>\"", ",", " ", "#", ",", 
                    "\"\< caused some error message throw -- check \
GetIntensity[] of single point to see error messages.\>\""}], "]"}], ";", " ",
                     "\n", "\t\t\t\t\t", "None"}]}], "\n", "\t\t\t\t", 
                  "]"}]}], "\n", "\t\t\t", "}"}], "&"}], "/@", 
              RowBox[{"RandomSample", "[", "screenPoints", "]"}]}]}], "\n", 
            "\t\t", "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"return", ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", "_", ",", 
              RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "]"}], " ", "<", " ", 
          RowBox[{"Length", "@", "screenPoints"}]}], ",", " ", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Numerical integration of the radiative transfer equation did \
not converge for \>\"", ",", " ", 
           RowBox[{
            RowBox[{"Length", "@", "screenPoints"}], "-", 
            RowBox[{"Count", "[", 
             RowBox[{"return", ",", 
              RowBox[{"{", 
               RowBox[{"_", ",", "_", ",", 
                RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "]"}]}], ",", " ", 
           "\"\</\>\"", ",", " ", 
           RowBox[{"Length", "@", "screenPoints"}], ",", 
           "\"\< screen points. Try to incrase WorkinPrecision and test \
single points to see error messages.\>\""}], "]"}]}], "\n", "\t", "]"}], ";", 
       "\n", "\t", "\n", "\t", "return"}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "make", " ", "a", " ", "version", " ", "that", " ", "automatically", " ", 
    "uses", " ", "disk", " ", "model", " ", "3", " ", "from", " ", 
    "EXACT_GRRT", " ", "comparison"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"GetIntensityData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rCam_", "?", "RationalQ"}], ",", 
      RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
      RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
    "paramRules_List", ",", " ", "screenPoints_List", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"A", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"alpha", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"h", " ", "=", " ", 
       RowBox[{"10", "/", "3"}]}], ",", " ", 
      RowBox[{"l0", " ", "=", " ", 
       RowBox[{"-", "1"}]}], ",", "\n", "\t\t", "ode"}], "\n", "\t", "}"}], 
    ",", "\n", "\t", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{"instantiate", " ", "the", " ", "disk", " ", "model"}], "*)"}], 
    "\n", "\t", 
    RowBox[{
     RowBox[{"ode", " ", "=", " ", 
      RowBox[{"GetRadiativeTransferEquationForDiskModel", "[", 
       RowBox[{"{", 
        RowBox[{"A", ",", "alpha", ",", "h", ",", "l0"}], "}"}], "]"}]}], ";",
      "\n", "\t", "\n", "\t", 
     RowBox[{"GetIntensityData", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], ",", 
       " ", "paramRules", ",", " ", "screenPoints", ",", " ", "ode", ",", " ",
        "opts"}], "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.8045802883567743`*^9, 3.804580432787237*^9}, {
   3.804580508483551*^9, 3.804580556195161*^9}, {3.80458060393042*^9, 
   3.8045806040503883`*^9}, 3.804580645633111*^9, {3.8045806844627*^9, 
   3.80458084438041*^9}, {3.80458088990554*^9, 3.804580900494295*^9}, {
   3.8045809346234913`*^9, 3.804581142544895*^9}, {3.80458118377785*^9, 
   3.804581316482765*^9}, {3.8045813520812893`*^9, 3.804581355371131*^9}, {
   3.804581616327839*^9, 3.8045816358921824`*^9}, {3.804581668248233*^9, 
   3.804581689927382*^9}, {3.8045817387956247`*^9, 3.80458173894847*^9}, {
   3.804581827827013*^9, 3.80458183151066*^9}, {3.8045819736906767`*^9, 
   3.804581985246312*^9}, {3.804582133889452*^9, 3.80458213882055*^9}, {
   3.804582173449835*^9, 3.804582242268839*^9}, {3.8045822840461397`*^9, 
   3.804582431388372*^9}, {3.804582528249408*^9, 3.80458255574682*^9}, {
   3.8045826239550047`*^9, 3.804582630002372*^9}, {3.804582728106986*^9, 
   3.8045827282644587`*^9}, {3.804582775055331*^9, 3.804582775858148*^9}, {
   3.804582865967381*^9, 3.804582869787141*^9}, {3.804583125802697*^9, 
   3.8045831490385723`*^9}, 3.8080322352820187`*^9, {3.808713473680571*^9, 
   3.808713511906631*^9}, {3.8087135443924093`*^9, 3.808713570488864*^9}, {
   3.808715221495378*^9, 3.808715221922241*^9}, {3.819027927464828*^9, 
   3.8190279278066473`*^9}, 3.8190280477527637`*^9, 3.819028144814083*^9, {
   3.819028638580971*^9, 3.8190286585517483`*^9}, {3.8190287064647284`*^9, 
   3.819028738735052*^9}, {3.819028855948999*^9, 3.8190290183520308`*^9}, {
   3.819029276109847*^9, 3.81902927763505*^9}, {3.819710890696978*^9, 
   3.819710922001771*^9}, {3.819710971795171*^9, 3.819710984529674*^9}, {
   3.820151969532254*^9, 3.820151969673991*^9}, {3.821188438074514*^9, 
   3.8211884540608273`*^9}, {3.821188537301049*^9, 3.8211885475492697`*^9}, {
   3.8211886108056517`*^9, 3.82118861517096*^9}, {3.823950262016777*^9, 
   3.823950292726967*^9}},ExpressionUUID->"6cd2c98c-9e5b-4396-88c6-\
434159d3f8e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["end private", "Section",
 CellChangeTimes->{{3.760077912659463*^9, 
  3.760077914943944*^9}},ExpressionUUID->"e0bd1514-825f-4242-9ac1-\
89d3843d7dbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.760074041242437*^9, 3.760074050882641*^9}, {
  3.779281427941218*^9, 
  3.779281428164085*^9}},ExpressionUUID->"a23912b9-bdc7-4bf3-89e6-\
308e50945364"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["... end package", "Title",
 CellChangeTimes->{{3.760068549615602*^9, 3.760068553890718*^9}, {
  3.760068651788693*^9, 
  3.7600686551322117`*^9}},ExpressionUUID->"ed201445-cfe1-47f8-9b4b-\
84f8aeb87d5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.760068673402979*^9, 3.7600686741632147`*^9}, {
  3.7600740456300898`*^9, 
  3.760074046264381*^9}},ExpressionUUID->"29cd71e5-3116-4b03-8a39-\
3762496ba6ec"]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{960, 1025},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 307, 8, 31, "Input",ExpressionUUID->"77075486-5282-43d8-8f4c-2640cde0b011"],
Cell[CellGroupData[{
Cell[889, 32, 277, 4, 99, "Title",ExpressionUUID->"e1de7b50-f3e1-4431-bdde-ec835925983a"],
Cell[1169, 38, 189, 3, 36, "Text",ExpressionUUID->"1825afe7-ff8a-4c59-8c56-35df6d3a33c5"],
Cell[1361, 43, 610, 12, 76, "Code",ExpressionUUID->"2dc640ed-d7ae-41f6-abed-eef75faaee9f"],
Cell[1974, 57, 195, 3, 36, "Text",ExpressionUUID->"163775db-cc2d-4157-b960-0ed7348f1b00"],
Cell[2172, 62, 857, 14, 98, "Code",ExpressionUUID->"53eaacf0-ecae-4728-aa5d-acc9a7616236"],
Cell[3032, 78, 317, 7, 84, "Text",ExpressionUUID->"cfdf6fc0-078b-4281-b7bb-a791b15af319"],
Cell[3352, 87, 733, 13, 53, "Code",ExpressionUUID->"abdab360-a506-46a2-a8f6-63fb657a1a96"],
Cell[4088, 102, 728, 18, 120, "Code",ExpressionUUID->"b161de56-d291-4fe3-a82b-5815176073d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4853, 125, 184, 3, 99, "Title",ExpressionUUID->"c6a22289-b7c9-4689-995e-ede231415f97"],
Cell[CellGroupData[{
Cell[5062, 132, 172, 3, 68, "Section",ExpressionUUID->"c1e3d575-c49f-4869-be69-c4693156b5b3"],
Cell[5237, 137, 1055, 17, 120, "Code",ExpressionUUID->"64ab91e6-42ae-4efd-8ad8-76724d66eb33"]
}, Closed]],
Cell[CellGroupData[{
Cell[6329, 159, 226, 4, 54, "Section",ExpressionUUID->"a0814f68-03ca-4cd8-965a-42482b371eb1"],
Cell[6558, 165, 408, 9, 76, "Code",ExpressionUUID->"c99dbcf8-5fa7-46c7-8ab2-586465e9234b"],
Cell[6969, 176, 950, 17, 164, "Code",ExpressionUUID->"9e3916e9-add8-42ae-a51c-2dd55a0e8a97"],
Cell[7922, 195, 823, 15, 120, "Code",ExpressionUUID->"1d75ef42-b78e-486c-8b36-6119417e46c2"],
Cell[8748, 212, 576, 12, 76, "Code",ExpressionUUID->"030c945c-50bb-4c8e-8367-43546f586439"],
Cell[9327, 226, 483, 10, 76, "Code",ExpressionUUID->"f3b3c056-bd12-47d4-9021-841b4c4a2a6d"],
Cell[9813, 238, 375, 8, 76, "Code",ExpressionUUID->"9eaca5f1-2c6c-474c-805e-a4140a4b540c"],
Cell[10191, 248, 381, 9, 76, "Code",ExpressionUUID->"6e987c31-542c-43f9-86e0-677161ee3fe8"],
Cell[10575, 259, 462, 10, 76, "Code",ExpressionUUID->"841f669b-7ff7-4a29-bae8-6d1f0011bab4"],
Cell[11040, 271, 5544, 79, 186, "Code",ExpressionUUID->"6ccda2f5-7b1c-4574-adbb-4d9a55f2a636"],
Cell[16587, 352, 5012, 71, 120, "Code",ExpressionUUID->"9beac848-0955-433f-b059-427204a71661"],
Cell[21602, 425, 1350, 26, 230, "Code",ExpressionUUID->"3884822e-3152-48e8-8bac-10248f28093b"],
Cell[22955, 453, 5306, 79, 186, "Code",ExpressionUUID->"8775a527-62c6-46ea-af82-e81b6fc79dbd"],
Cell[28264, 534, 5632, 87, 274, "Code",ExpressionUUID->"021c90e8-f96e-4492-beba-7fe4d047a753"],
Cell[33899, 623, 5370, 76, 142, "Code",ExpressionUUID->"252a32cb-5f63-4498-86fc-533366c532bd"],
Cell[39272, 701, 5181, 74, 120, "Code",ExpressionUUID->"61585167-eae1-4b2d-a815-37c7f2546f09"],
Cell[44456, 777, 1067, 17, 142, "Code",ExpressionUUID->"4cf2b4dc-4ba3-4073-bf7b-6f6259cc0379"],
Cell[45526, 796, 1019, 15, 186, "Code",ExpressionUUID->"9c8ace11-ac90-4983-818d-02f6834b81da"],
Cell[46548, 813, 598, 11, 76, "Code",ExpressionUUID->"f3cb2115-4254-472e-94a9-9bb34c1c19fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47183, 829, 273, 4, 68, "Section",ExpressionUUID->"d37c321c-f0dd-41cf-8886-f6f9db64970e"],
Cell[47459, 835, 859, 16, 53, "Code",ExpressionUUID->"d6e855bf-84d7-4db6-9a51-14477754c928"],
Cell[48321, 853, 655, 13, 53, "Code",ExpressionUUID->"6ef60240-4c75-45b6-977a-78308a8a7baf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49025, 872, 237, 4, 99, "Title",ExpressionUUID->"ff6b5ed0-57ac-41c0-a030-7d212efc8260"],
Cell[49265, 878, 294, 6, 53, "Code",ExpressionUUID->"a74a3243-0f6e-4f9e-8b36-51137ca15616"],
Cell[CellGroupData[{
Cell[49584, 888, 161, 3, 68, "Section",ExpressionUUID->"3e020569-6fe7-48c9-a261-cc8daa115535"],
Cell[49748, 893, 1979, 47, 274, "Code",ExpressionUUID->"6b243751-5f7b-4726-90e4-64e2f2e1b42a"],
Cell[51730, 942, 548, 16, 76, "Code",ExpressionUUID->"49a836a5-04ef-4f4e-bd62-93b8d14ada35"],
Cell[52281, 960, 1937, 42, 275, "Code",ExpressionUUID->"39407ce1-3e11-4999-b0ea-dd76b8a643e6"],
Cell[54221, 1004, 397, 12, 71, "Code",ExpressionUUID->"e25d0f03-c641-415f-826c-886a93ecb375"]
}, Closed]],
Cell[CellGroupData[{
Cell[54655, 1021, 197, 3, 54, "Section",ExpressionUUID->"c8e1da78-752e-4cb3-bbe2-dd2976b2adbe"],
Cell[CellGroupData[{
Cell[54877, 1028, 356, 7, 83, "Subsection",ExpressionUUID->"bfe22adc-2b99-4867-b44c-d99eb5044030"],
Cell[55236, 1037, 1704, 41, 340, "Code",ExpressionUUID->"0f917a6d-978f-432a-abf9-17113ef48566"],
Cell[56943, 1080, 1685, 36, 252, "Code",ExpressionUUID->"05b6410c-8370-4445-b82c-580cdc9c0180"],
Cell[58631, 1118, 1251, 30, 254, "Input",ExpressionUUID->"3e7515a8-c1c5-4231-9e0e-6d0d156aceb5",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[59919, 1153, 175, 3, 39, "Subsection",ExpressionUUID->"7c82d830-f888-42f9-ac89-5e8a83ac1aeb"],
Cell[60097, 1158, 8595, 200, 1374, "Code",ExpressionUUID->"82417c37-f12d-4b31-a916-3f70b3ccfdb4"],
Cell[68695, 1360, 1373, 39, 164, "Code",ExpressionUUID->"36c64e3c-ef00-434d-a8dc-79a38b160006"]
}, Closed]],
Cell[CellGroupData[{
Cell[70105, 1404, 189, 3, 39, "Subsection",ExpressionUUID->"244fa1a1-2ef5-4610-be39-c5a865d0b932"],
Cell[70297, 1409, 3928, 89, 472, "Code",ExpressionUUID->"2520c103-06a8-44b1-9ecc-d6bfcd2fd319"],
Cell[74228, 1500, 1226, 32, 164, "Code",ExpressionUUID->"43ce8f58-3c62-43da-a133-87964d2602ec"],
Cell[75457, 1534, 249, 6, 36, "Text",ExpressionUUID->"fa6632e3-4adf-446e-9a10-a71bf562b544"],
Cell[75709, 1542, 223, 5, 52, "Code",ExpressionUUID->"66a1fab4-0589-433e-8224-afe6023f55cf"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75981, 1553, 205, 3, 68, "Section",ExpressionUUID->"6f5dbe02-edc8-4e60-ae76-565ac0f1212d"],
Cell[CellGroupData[{
Cell[76211, 1560, 164, 3, 55, "Subsection",ExpressionUUID->"2ce167d8-2950-4019-8022-306183c18170"],
Cell[76378, 1565, 7588, 190, 450, "Code",ExpressionUUID->"c4e880a6-8a54-499b-bfdf-4d43e71ab746"]
}, Closed]],
Cell[CellGroupData[{
Cell[84003, 1760, 235, 4, 39, "Subsection",ExpressionUUID->"c6efdc96-2747-4f69-8a26-1bc1f5c98036"],
Cell[84241, 1766, 1041, 28, 52, "Code",ExpressionUUID->"527f1fc5-7536-4708-988e-0f836b3189fc"],
Cell[85285, 1796, 20052, 479, 1778, "Code",ExpressionUUID->"ac8a9e24-e216-404f-bc49-8130e98f6ba7"]
}, Closed]],
Cell[CellGroupData[{
Cell[105374, 2280, 176, 3, 39, "Subsection",ExpressionUUID->"82ca8588-a091-42b5-813e-6385ea0b3f6f"],
Cell[105553, 2285, 26847, 638, 1883, "Code",ExpressionUUID->"438f4348-4a98-4200-8903-da2323779d72"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132449, 2929, 257, 8, 68, "Section",ExpressionUUID->"8c068908-f456-4f2b-9e29-09342dbd7a6f"],
Cell[CellGroupData[{
Cell[132731, 2941, 173, 3, 55, "Subsection",ExpressionUUID->"e148aa6f-5514-4ec2-914b-dc3452671ca4"],
Cell[132907, 2946, 9724, 194, 780, "Code",ExpressionUUID->"6ddbb78e-24a6-49c4-8f1f-1b7642c1cf6c"],
Cell[142634, 3142, 13297, 287, 1173, "Code",ExpressionUUID->"d4149ce8-7f84-411d-8be8-232693dd88a6"],
Cell[155934, 3431, 13946, 293, 1151, "Code",ExpressionUUID->"1cdb77bb-ebb3-452f-bcd0-0e0681beb89d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169917, 3729, 144, 3, 55, "Subsection",ExpressionUUID->"95513782-c6f1-4db8-b0f2-61badf0735fc"],
Cell[170064, 3734, 27477, 585, 2803, "Code",ExpressionUUID->"15fb3f9b-9e2c-49d1-a4a9-7b0bdb1033ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[197578, 4324, 178, 3, 39, "Subsection",ExpressionUUID->"5d8cd046-dc96-4043-ae62-5ed8ef726352"],
Cell[197759, 4329, 18935, 453, 1526, "Code",ExpressionUUID->"b5995626-7a0f-4f00-bfd5-1c9be582e1e1"]
}, Closed]],
Cell[CellGroupData[{
Cell[216731, 4787, 188, 3, 39, "Subsection",ExpressionUUID->"efca2671-e0b9-40bb-9632-0f2ce7a0e30e"],
Cell[216922, 4792, 33780, 700, 2633, "Code",ExpressionUUID->"d7abafc7-c197-4eae-afff-bfe55954ea86"],
Cell[250705, 5494, 9464, 212, 1043, "Code",ExpressionUUID->"2bfd0531-7d83-4123-8d1d-f82c9951c3f8"]
}, Closed]],
Cell[CellGroupData[{
Cell[260206, 5711, 221, 5, 39, "Subsection",ExpressionUUID->"4cf434ca-cbbe-4856-9a15-4a409e868410"],
Cell[260430, 5718, 33814, 689, 2479, "Code",ExpressionUUID->"830a90d3-3bf8-41d1-95b4-f4dc9e535dfe"],
Cell[294247, 6409, 14010, 308, 1351, "Code",ExpressionUUID->"bb8c6f18-493a-4744-b2af-12732ee3f110"]
}, Closed]],
Cell[CellGroupData[{
Cell[308294, 6722, 223, 5, 39, "Subsection",ExpressionUUID->"3d1f93e9-0b5b-4db7-9691-8be21dd47a58"],
Cell[308520, 6729, 28669, 547, 1879, "Code",ExpressionUUID->"da5d5b74-82c0-4dc8-83ca-4035dc4b1787"],
Cell[337192, 7278, 184, 3, 36, "Text",ExpressionUUID->"5c60950f-5f8c-4378-ab14-14e2bf4fe42e"],
Cell[CellGroupData[{
Cell[337401, 7285, 1466, 45, 71, "Input",ExpressionUUID->"15abc466-982b-4fe6-a7b3-4070e5c7aed1"],
Cell[338870, 7332, 175, 2, 35, "Output",ExpressionUUID->"f8c25698-061e-466b-ac32-f4fbde7a280f"]
}, Open  ]],
Cell[339060, 7337, 35087, 733, 2488, "Code",ExpressionUUID->"44544fdd-7d99-41bd-83d1-bc69630955da"],
Cell[374150, 8072, 9817, 205, 1219, "Code",ExpressionUUID->"6cd2c98c-9e5b-4396-88c6-434159d3f8e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384016, 8283, 156, 3, 68, "Section",ExpressionUUID->"e0bd1514-825f-4242-9ac1-89d3843d7dbd"],
Cell[384175, 8288, 243, 6, 53, "Code",ExpressionUUID->"a23912b9-bdc7-4bf3-89e6-308e50945364"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384467, 8300, 209, 4, 99, "Title",ExpressionUUID->"ed201445-cfe1-47f8-9b4b-84f8aeb87d5a"],
Cell[384679, 8306, 254, 6, 53, "Code",ExpressionUUID->"29cd71e5-3116-4b03-8a39-3762496ba6ec"]
}, Open  ]]
}
]
*)

